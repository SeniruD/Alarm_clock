
Alarm_Clock__v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001e4  00800100  0000240c  000024a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000240c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000073  008002e4  008002e4  00002684  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002684  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00002720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f0c  00000000  00000000  00002890  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000989  00000000  00000000  0000579c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018c9  00000000  00000000  00006125  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  000079f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b42  00000000  00000000  00007d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ec8  00000000  00000000  000088de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  000097a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 42 00 	jmp	0x84	; 0x84 <__ctors_end>
       4:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       8:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      10:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      14:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      18:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      1c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      20:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      24:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      28:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      30:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      3c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      44:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      48:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      50:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      54:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      58:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      5c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      60:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      68:	5d 09       	sbc	r21, r13
      6a:	60 09       	sbc	r22, r0
      6c:	63 09       	sbc	r22, r3
      6e:	66 09       	sbc	r22, r6
      70:	69 09       	sbc	r22, r9
      72:	6c 09       	sbc	r22, r12
      74:	6f 09       	sbc	r22, r15
      76:	88 09       	sbc	r24, r8
      78:	72 09       	sbc	r23, r2
      7a:	75 09       	sbc	r23, r5
      7c:	78 09       	sbc	r23, r8
      7e:	7b 09       	sbc	r23, r11
      80:	82 09       	sbc	r24, r2

00000082 <__ctors_start>:
      82:	8a 0e       	add	r8, r26

00000084 <__ctors_end>:
      84:	11 24       	eor	r1, r1
      86:	1f be       	out	0x3f, r1	; 63
      88:	cf ef       	ldi	r28, 0xFF	; 255
      8a:	d8 e0       	ldi	r29, 0x08	; 8
      8c:	de bf       	out	0x3e, r29	; 62
      8e:	cd bf       	out	0x3d, r28	; 61

00000090 <__do_copy_data>:
      90:	12 e0       	ldi	r17, 0x02	; 2
      92:	a0 e0       	ldi	r26, 0x00	; 0
      94:	b1 e0       	ldi	r27, 0x01	; 1
      96:	ec e0       	ldi	r30, 0x0C	; 12
      98:	f4 e2       	ldi	r31, 0x24	; 36
      9a:	02 c0       	rjmp	.+4      	; 0xa0 <__do_copy_data+0x10>
      9c:	05 90       	lpm	r0, Z+
      9e:	0d 92       	st	X+, r0
      a0:	a4 3e       	cpi	r26, 0xE4	; 228
      a2:	b1 07       	cpc	r27, r17
      a4:	d9 f7       	brne	.-10     	; 0x9c <__do_copy_data+0xc>

000000a6 <__do_clear_bss>:
      a6:	23 e0       	ldi	r18, 0x03	; 3
      a8:	a4 ee       	ldi	r26, 0xE4	; 228
      aa:	b2 e0       	ldi	r27, 0x02	; 2
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
      ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
      b0:	a7 35       	cpi	r26, 0x57	; 87
      b2:	b2 07       	cpc	r27, r18
      b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>

000000b6 <__do_global_ctors>:
      b6:	10 e0       	ldi	r17, 0x00	; 0
      b8:	c2 e4       	ldi	r28, 0x42	; 66
      ba:	d0 e0       	ldi	r29, 0x00	; 0
      bc:	04 c0       	rjmp	.+8      	; 0xc6 <__do_global_ctors+0x10>
      be:	21 97       	sbiw	r28, 0x01	; 1
      c0:	fe 01       	movw	r30, r28
      c2:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <__tablejump2__>
      c6:	c1 34       	cpi	r28, 0x41	; 65
      c8:	d1 07       	cpc	r29, r17
      ca:	c9 f7       	brne	.-14     	; 0xbe <__do_global_ctors+0x8>
      cc:	0e 94 89 09 	call	0x1312	; 0x1312 <main>
      d0:	0c 94 04 12 	jmp	0x2408	; 0x2408 <_exit>

000000d4 <__bad_interrupt>:
      d4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d8 <_Z41__static_initialization_and_destruction_0ii>:
	turnBacklightOn();
}


void setContrast()
{
      d8:	01 97       	sbiw	r24, 0x01	; 1
      da:	b9 f5       	brne	.+110    	; 0x14a <_Z41__static_initialization_and_destruction_0ii+0x72>
      dc:	6f 3f       	cpi	r22, 0xFF	; 255
      de:	7f 4f       	sbci	r23, 0xFF	; 255
      e0:	a1 f5       	brne	.+104    	; 0x14a <_Z41__static_initialization_and_destruction_0ii+0x72>
      e2:	a0 91 47 03 	lds	r26, 0x0347	; 0x800347 <startmins>
      e6:	b0 91 48 03 	lds	r27, 0x0348	; 0x800348 <startmins+0x1>
      ea:	b0 93 0e 03 	sts	0x030E, r27	; 0x80030e <mins+0x1>
      ee:	a0 93 0d 03 	sts	0x030D, r26	; 0x80030d <mins>
      f2:	60 91 49 03 	lds	r22, 0x0349	; 0x800349 <starthour>
      f6:	70 91 4a 03 	lds	r23, 0x034A	; 0x80034a <starthour+0x1>
      fa:	70 93 0c 03 	sts	0x030C, r23	; 0x80030c <hours+0x1>
      fe:	60 93 0b 03 	sts	0x030B, r22	; 0x80030b <hours>
     102:	40 91 45 03 	lds	r20, 0x0345	; 0x800345 <startdate>
     106:	50 91 46 03 	lds	r21, 0x0346	; 0x800346 <startdate+0x1>
     10a:	50 93 0a 03 	sts	0x030A, r21	; 0x80030a <date+0x1>
     10e:	40 93 09 03 	sts	0x0309, r20	; 0x800309 <date>
     112:	20 91 43 03 	lds	r18, 0x0343	; 0x800343 <startmnth>
     116:	30 91 44 03 	lds	r19, 0x0344	; 0x800344 <startmnth+0x1>
     11a:	30 93 08 03 	sts	0x0308, r19	; 0x800308 <month+0x1>
     11e:	20 93 07 03 	sts	0x0307, r18	; 0x800307 <month>
     122:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <startyr>
     126:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <startyr+0x1>
     12a:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <yr+0x1>
     12e:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <yr>
     132:	eb ef       	ldi	r30, 0xFB	; 251
     134:	f2 e0       	ldi	r31, 0x02	; 2
     136:	b1 83       	std	Z+1, r27	; 0x01
     138:	a0 83       	st	Z, r26
     13a:	73 83       	std	Z+3, r23	; 0x03
     13c:	62 83       	std	Z+2, r22	; 0x02
     13e:	55 83       	std	Z+5, r21	; 0x05
     140:	44 83       	std	Z+4, r20	; 0x04
     142:	37 83       	std	Z+7, r19	; 0x07
     144:	26 83       	std	Z+6, r18	; 0x06
     146:	91 87       	std	Z+9, r25	; 0x09
     148:	80 87       	std	Z+8, r24	; 0x08
     14a:	08 95       	ret

0000014c <_Z11lcdCmdWritec>:
     14c:	98 2f       	mov	r25, r24
     14e:	90 7f       	andi	r25, 0xF0	; 240
     150:	95 b9       	out	0x05, r25	; 5
     152:	95 b1       	in	r25, 0x05	; 5
     154:	9e 7f       	andi	r25, 0xFE	; 254
     156:	95 b9       	out	0x05, r25	; 5
     158:	95 b1       	in	r25, 0x05	; 5
     15a:	92 60       	ori	r25, 0x02	; 2
     15c:	95 b9       	out	0x05, r25	; 5
     15e:	ef ee       	ldi	r30, 0xEF	; 239
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <_Z11lcdCmdWritec+0x16>
     166:	00 c0       	rjmp	.+0      	; 0x168 <_Z11lcdCmdWritec+0x1c>
     168:	00 00       	nop
     16a:	95 b1       	in	r25, 0x05	; 5
     16c:	9d 7f       	andi	r25, 0xFD	; 253
     16e:	95 b9       	out	0x05, r25	; 5
     170:	fa e1       	ldi	r31, 0x1A	; 26
     172:	fa 95       	dec	r31
     174:	f1 f7       	brne	.-4      	; 0x172 <_Z11lcdCmdWritec+0x26>
     176:	00 c0       	rjmp	.+0      	; 0x178 <_Z11lcdCmdWritec+0x2c>
     178:	20 e1       	ldi	r18, 0x10	; 16
     17a:	82 9f       	mul	r24, r18
     17c:	c0 01       	movw	r24, r0
     17e:	11 24       	eor	r1, r1
     180:	85 b9       	out	0x05, r24	; 5
     182:	85 b1       	in	r24, 0x05	; 5
     184:	8e 7f       	andi	r24, 0xFE	; 254
     186:	85 b9       	out	0x05, r24	; 5
     188:	85 b1       	in	r24, 0x05	; 5
     18a:	82 60       	ori	r24, 0x02	; 2
     18c:	85 b9       	out	0x05, r24	; 5
     18e:	8f ee       	ldi	r24, 0xEF	; 239
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <_Z11lcdCmdWritec+0x46>
     196:	00 c0       	rjmp	.+0      	; 0x198 <_Z11lcdCmdWritec+0x4c>
     198:	00 00       	nop
     19a:	85 b1       	in	r24, 0x05	; 5
     19c:	8d 7f       	andi	r24, 0xFD	; 253
     19e:	85 b9       	out	0x05, r24	; 5
     1a0:	ef ec       	ldi	r30, 0xCF	; 207
     1a2:	f7 e0       	ldi	r31, 0x07	; 7
     1a4:	31 97       	sbiw	r30, 0x01	; 1
     1a6:	f1 f7       	brne	.-4      	; 0x1a4 <_Z11lcdCmdWritec+0x58>
     1a8:	00 c0       	rjmp	.+0      	; 0x1aa <_Z11lcdCmdWritec+0x5e>
     1aa:	00 00       	nop
     1ac:	08 95       	ret

000001ae <_Z7lcdInitv>:
     1ae:	8f e3       	ldi	r24, 0x3F	; 63
     1b0:	9c e9       	ldi	r25, 0x9C	; 156
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <_Z7lcdInitv+0x4>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <_Z7lcdInitv+0xa>
     1b8:	00 00       	nop
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1c0:	88 e2       	ldi	r24, 0x28	; 40
     1c2:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1c6:	8c e0       	ldi	r24, 0x0C	; 12
     1c8:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1d8:	80 e8       	ldi	r24, 0x80	; 128
     1da:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1de:	08 95       	ret

000001e0 <_Z12lcdDataWritec>:
     1e0:	98 2f       	mov	r25, r24
     1e2:	90 7f       	andi	r25, 0xF0	; 240
     1e4:	95 b9       	out	0x05, r25	; 5
     1e6:	95 b1       	in	r25, 0x05	; 5
     1e8:	91 60       	ori	r25, 0x01	; 1
     1ea:	95 b9       	out	0x05, r25	; 5
     1ec:	95 b1       	in	r25, 0x05	; 5
     1ee:	92 60       	ori	r25, 0x02	; 2
     1f0:	95 b9       	out	0x05, r25	; 5
     1f2:	ef ee       	ldi	r30, 0xEF	; 239
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	31 97       	sbiw	r30, 0x01	; 1
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <_Z12lcdDataWritec+0x16>
     1fa:	00 c0       	rjmp	.+0      	; 0x1fc <_Z12lcdDataWritec+0x1c>
     1fc:	00 00       	nop
     1fe:	95 b1       	in	r25, 0x05	; 5
     200:	9d 7f       	andi	r25, 0xFD	; 253
     202:	95 b9       	out	0x05, r25	; 5
     204:	fa e1       	ldi	r31, 0x1A	; 26
     206:	fa 95       	dec	r31
     208:	f1 f7       	brne	.-4      	; 0x206 <_Z12lcdDataWritec+0x26>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <_Z12lcdDataWritec+0x2c>
     20c:	20 e1       	ldi	r18, 0x10	; 16
     20e:	82 9f       	mul	r24, r18
     210:	c0 01       	movw	r24, r0
     212:	11 24       	eor	r1, r1
     214:	85 b9       	out	0x05, r24	; 5
     216:	85 b1       	in	r24, 0x05	; 5
     218:	81 60       	ori	r24, 0x01	; 1
     21a:	85 b9       	out	0x05, r24	; 5
     21c:	85 b1       	in	r24, 0x05	; 5
     21e:	82 60       	ori	r24, 0x02	; 2
     220:	85 b9       	out	0x05, r24	; 5
     222:	8f ee       	ldi	r24, 0xEF	; 239
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	01 97       	sbiw	r24, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <_Z12lcdDataWritec+0x46>
     22a:	00 c0       	rjmp	.+0      	; 0x22c <_Z12lcdDataWritec+0x4c>
     22c:	00 00       	nop
     22e:	85 b1       	in	r24, 0x05	; 5
     230:	8d 7f       	andi	r24, 0xFD	; 253
     232:	85 b9       	out	0x05, r24	; 5
     234:	ef ec       	ldi	r30, 0xCF	; 207
     236:	f7 e0       	ldi	r31, 0x07	; 7
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <_Z12lcdDataWritec+0x58>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <_Z12lcdDataWritec+0x5e>
     23e:	00 00       	nop
     240:	08 95       	ret

00000242 <_Z8lcdClearv>:
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     248:	80 e8       	ldi	r24, 0x80	; 128
     24a:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     24e:	08 95       	ret

00000250 <_Z8lcdPrintPc>:
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	ec 01       	movw	r28, r24
     256:	88 81       	ld	r24, Y
     258:	88 23       	and	r24, r24
     25a:	21 f0       	breq	.+8      	; 0x264 <_Z8lcdPrintPc+0x14>
     25c:	21 96       	adiw	r28, 0x01	; 1
     25e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z12lcdDataWritec>
     262:	f9 cf       	rjmp	.-14     	; 0x256 <_Z8lcdPrintPc+0x6>
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	08 95       	ret

0000026a <_Z12lcdSetCursorcc>:
     26a:	61 11       	cpse	r22, r1
     26c:	07 c0       	rjmp	.+14     	; 0x27c <_Z12lcdSetCursorcc+0x12>
     26e:	80 31       	cpi	r24, 0x10	; 16
     270:	28 f4       	brcc	.+10     	; 0x27c <_Z12lcdSetCursorcc+0x12>
     272:	8f 70       	andi	r24, 0x0F	; 15
     274:	80 68       	ori	r24, 0x80	; 128
     276:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     27a:	1a c0       	rjmp	.+52     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     27c:	61 30       	cpi	r22, 0x01	; 1
     27e:	39 f4       	brne	.+14     	; 0x28e <_Z12lcdSetCursorcc+0x24>
     280:	80 31       	cpi	r24, 0x10	; 16
     282:	28 f4       	brcc	.+10     	; 0x28e <_Z12lcdSetCursorcc+0x24>
     284:	8f 70       	andi	r24, 0x0F	; 15
     286:	80 6c       	ori	r24, 0xC0	; 192
     288:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     28c:	11 c0       	rjmp	.+34     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     28e:	62 30       	cpi	r22, 0x02	; 2
     290:	39 f4       	brne	.+14     	; 0x2a0 <_Z12lcdSetCursorcc+0x36>
     292:	80 31       	cpi	r24, 0x10	; 16
     294:	28 f4       	brcc	.+10     	; 0x2a0 <_Z12lcdSetCursorcc+0x36>
     296:	8f 70       	andi	r24, 0x0F	; 15
     298:	80 69       	ori	r24, 0x90	; 144
     29a:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     29e:	08 c0       	rjmp	.+16     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a0:	63 30       	cpi	r22, 0x03	; 3
     2a2:	31 f4       	brne	.+12     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a4:	80 31       	cpi	r24, 0x10	; 16
     2a6:	20 f4       	brcc	.+8      	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a8:	8f 70       	andi	r24, 0x0F	; 15
     2aa:	80 6d       	ori	r24, 0xD0	; 208
     2ac:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     2b0:	8c e0       	ldi	r24, 0x0C	; 12
     2b2:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     2b6:	08 95       	ret

000002b8 <_Z12lcdClearLinei>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	6f ef       	ldi	r22, 0xFF	; 255
     2be:	68 0f       	add	r22, r24
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     2c6:	c0 e0       	ldi	r28, 0x00	; 0
     2c8:	d0 e0       	ldi	r29, 0x00	; 0
     2ca:	c0 31       	cpi	r28, 0x10	; 16
     2cc:	d1 05       	cpc	r29, r1
     2ce:	34 f4       	brge	.+12     	; 0x2dc <_Z12lcdClearLinei+0x24>
     2d0:	8d e5       	ldi	r24, 0x5D	; 93
     2d2:	92 e0       	ldi	r25, 0x02	; 2
     2d4:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     2d8:	21 96       	adiw	r28, 0x01	; 1
     2da:	f7 cf       	rjmp	.-18     	; 0x2ca <_Z12lcdClearLinei+0x12>
     2dc:	df 91       	pop	r29
     2de:	cf 91       	pop	r28
     2e0:	08 95       	ret

000002e2 <_Z11digitalReadi>:
     2e2:	29 b1       	in	r18, 0x09	; 9
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	20 95       	com	r18
     2e8:	30 95       	com	r19
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <_Z11digitalReadi+0xe>
     2ec:	35 95       	asr	r19
     2ee:	27 95       	ror	r18
     2f0:	8a 95       	dec	r24
     2f2:	e2 f7       	brpl	.-8      	; 0x2ec <_Z11digitalReadi+0xa>
     2f4:	c9 01       	movw	r24, r18
     2f6:	81 70       	andi	r24, 0x01	; 1
     2f8:	99 27       	eor	r25, r25
     2fa:	20 ff       	sbrs	r18, 0
     2fc:	02 c0       	rjmp	.+4      	; 0x302 <_Z11digitalReadi+0x20>
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	08 95       	ret

00000304 <_Z8i2c_initv>:
     304:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     308:	80 e2       	ldi	r24, 0x20	; 32
     30a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     30e:	08 95       	ret

00000310 <_Z9i2c_startv>:
     310:	84 ea       	ldi	r24, 0xA4	; 164
     312:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     316:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     31a:	88 23       	and	r24, r24
     31c:	e4 f7       	brge	.-8      	; 0x316 <_Z9i2c_startv+0x6>
     31e:	08 95       	ret

00000320 <_Z8i2c_stopv>:
     320:	84 e9       	ldi	r24, 0x94	; 148
     322:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     326:	08 95       	ret

00000328 <_Z9i2c_writec>:
     328:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     32c:	84 e8       	ldi	r24, 0x84	; 132
     32e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     332:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     336:	88 23       	and	r24, r24
     338:	e4 f7       	brge	.-8      	; 0x332 <_Z9i2c_writec+0xa>
     33a:	08 95       	ret

0000033c <_Z8i2c_readv>:
     33c:	84 ec       	ldi	r24, 0xC4	; 196
     33e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     342:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     346:	88 23       	and	r24, r24
     348:	e4 f7       	brge	.-8      	; 0x342 <_Z8i2c_readv+0x6>
     34a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     34e:	08 95       	ret

00000350 <_Z11i2c_readNakv>:
     350:	84 e8       	ldi	r24, 0x84	; 132
     352:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     356:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     35a:	88 23       	and	r24, r24
     35c:	e4 f7       	brge	.-8      	; 0x356 <_Z11i2c_readNakv+0x6>
     35e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     362:	08 95       	ret

00000364 <_Z8time_setv>:
     364:	0e 94 82 01 	call	0x304	; 0x304 <_Z8i2c_initv>
     368:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     36c:	80 ed       	ldi	r24, 0xD0	; 208
     36e:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     372:	87 e0       	ldi	r24, 0x07	; 7
     374:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     37e:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     382:	8f e9       	ldi	r24, 0x9F	; 159
     384:	9f e0       	ldi	r25, 0x0F	; 15
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <_Z8time_setv+0x22>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <_Z8time_setv+0x28>
     38c:	00 00       	nop
     38e:	08 95       	ret

00000390 <_Z14RTC_Read_ClockP5rtc_t>:
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	ec 01       	movw	r28, r24
     396:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     39a:	80 ed       	ldi	r24, 0xD0	; 208
     39c:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3a6:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     3aa:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     3ae:	81 ed       	ldi	r24, 0xD1	; 209
     3b0:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3b4:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3b8:	88 83       	st	Y, r24
     3ba:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3be:	89 83       	std	Y+1, r24	; 0x01
     3c0:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3c4:	8a 83       	std	Y+2, r24	; 0x02
     3c6:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3ca:	8b 83       	std	Y+3, r24	; 0x03
     3cc:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3d0:	8c 83       	std	Y+4, r24	; 0x04
     3d2:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3d6:	8d 83       	std	Y+5, r24	; 0x05
     3d8:	0e 94 a8 01 	call	0x350	; 0x350 <_Z11i2c_readNakv>
     3dc:	8e 83       	std	Y+6, r24	; 0x06
     3de:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <_Z14timeDisplayIntv>:
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	cd b7       	in	r28, 0x3d	; 61
     3f6:	de b7       	in	r29, 0x3e	; 62
     3f8:	a5 97       	sbiw	r28, 0x25	; 37
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	f8 94       	cli
     3fe:	de bf       	out	0x3e, r29	; 62
     400:	0f be       	out	0x3f, r0	; 63
     402:	cd bf       	out	0x3d, r28	; 61
     404:	0e 94 82 01 	call	0x304	; 0x304 <_Z8i2c_initv>
     408:	0e 94 b2 01 	call	0x364	; 0x364 <_Z8time_setv>
     40c:	ce 01       	movw	r24, r28
     40e:	4f 96       	adiw	r24, 0x1f	; 31
     410:	0e 94 c8 01 	call	0x390	; 0x390 <_Z14RTC_Read_ClockP5rtc_t>
     414:	4f 8d       	ldd	r20, Y+31	; 0x1f
     416:	84 2f       	mov	r24, r20
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <secs+0x1>
     41e:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <secs>
     422:	38 a1       	ldd	r19, Y+32	; 0x20
     424:	83 2f       	mov	r24, r19
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <min+0x1>
     42c:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <min>
     430:	29 a1       	ldd	r18, Y+33	; 0x21
     432:	82 2f       	mov	r24, r18
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	90 93 54 03 	sts	0x0354, r25	; 0x800354 <hor+0x1>
     43a:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <hor>
     43e:	8d a1       	ldd	r24, Y+37	; 0x25
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <y+0x1>
     446:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <y>
     44a:	8c a1       	ldd	r24, Y+36	; 0x24
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	90 93 4e 03 	sts	0x034E, r25	; 0x80034e <m+0x1>
     452:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <m>
     456:	8b a1       	ldd	r24, Y+35	; 0x23
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <d+0x1>
     45e:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <d>
     462:	1f 92       	push	r1
     464:	4f 93       	push	r20
     466:	1f 92       	push	r1
     468:	3f 93       	push	r19
     46a:	1f 92       	push	r1
     46c:	2f 93       	push	r18
     46e:	06 e0       	ldi	r16, 0x06	; 6
     470:	11 e0       	ldi	r17, 0x01	; 1
     472:	1f 93       	push	r17
     474:	0f 93       	push	r16
     476:	ce 01       	movw	r24, r28
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	7c 01       	movw	r14, r24
     47c:	9f 93       	push	r25
     47e:	8f 93       	push	r24
     480:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
     484:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <y+0x1>
     488:	8f 93       	push	r24
     48a:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <y>
     48e:	8f 93       	push	r24
     490:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <m+0x1>
     494:	8f 93       	push	r24
     496:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <m>
     49a:	8f 93       	push	r24
     49c:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <d+0x1>
     4a0:	8f 93       	push	r24
     4a2:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <d>
     4a6:	8f 93       	push	r24
     4a8:	1f 93       	push	r17
     4aa:	0f 93       	push	r16
     4ac:	8e 01       	movw	r16, r28
     4ae:	05 5f       	subi	r16, 0xF5	; 245
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	1f 93       	push	r17
     4b4:	0f 93       	push	r16
     4b6:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	84 e0       	ldi	r24, 0x04	; 4
     4be:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     4c2:	c7 01       	movw	r24, r14
     4c4:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     4c8:	61 e0       	ldi	r22, 0x01	; 1
     4ca:	84 e0       	ldi	r24, 0x04	; 4
     4cc:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     4d0:	c8 01       	movw	r24, r16
     4d2:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     4d6:	0f b6       	in	r0, 0x3f	; 63
     4d8:	f8 94       	cli
     4da:	de bf       	out	0x3e, r29	; 62
     4dc:	0f be       	out	0x3f, r0	; 63
     4de:	cd bf       	out	0x3d, r28	; 61
     4e0:	a5 96       	adiw	r28, 0x25	; 37
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	f8 94       	cli
     4e6:	de bf       	out	0x3e, r29	; 62
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	cd bf       	out	0x3d, r28	; 61
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	08 95       	ret

000004fa <_Z11mainMenuIntv>:
     4fa:	60 e0       	ldi	r22, 0x00	; 0
     4fc:	84 e0       	ldi	r24, 0x04	; 4
     4fe:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     502:	85 e1       	ldi	r24, 0x15	; 21
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     50a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     50e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     512:	81 30       	cpi	r24, 0x01	; 1
     514:	91 05       	cpc	r25, r1
     516:	49 f4       	brne	.+18     	; 0x52a <_Z11mainMenuIntv+0x30>
     518:	61 e0       	ldi	r22, 0x01	; 1
     51a:	83 e0       	ldi	r24, 0x03	; 3
     51c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     520:	8f e1       	ldi	r24, 0x1F	; 31
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     528:	08 95       	ret
     52a:	82 30       	cpi	r24, 0x02	; 2
     52c:	91 05       	cpc	r25, r1
     52e:	49 f4       	brne	.+18     	; 0x542 <_Z11mainMenuIntv+0x48>
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     538:	8b e2       	ldi	r24, 0x2B	; 43
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     540:	08 95       	ret
     542:	03 97       	sbiw	r24, 0x03	; 3
     544:	41 f4       	brne	.+16     	; 0x556 <_Z11mainMenuIntv+0x5c>
     546:	61 e0       	ldi	r22, 0x01	; 1
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     54e:	8b e3       	ldi	r24, 0x3B	; 59
     550:	91 e0       	ldi	r25, 0x01	; 1
     552:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     556:	08 95       	ret

00000558 <_Z12alarmMenuIntv>:
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	84 e0       	ldi	r24, 0x04	; 4
     55c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     560:	8a e4       	ldi	r24, 0x4A	; 74
     562:	91 e0       	ldi	r25, 0x01	; 1
     564:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     568:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     56c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     570:	81 30       	cpi	r24, 0x01	; 1
     572:	91 05       	cpc	r25, r1
     574:	49 f4       	brne	.+18     	; 0x588 <_Z12alarmMenuIntv+0x30>
     576:	61 e0       	ldi	r22, 0x01	; 1
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     57e:	85 e5       	ldi	r24, 0x55	; 85
     580:	91 e0       	ldi	r25, 0x01	; 1
     582:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     586:	08 95       	ret
     588:	02 97       	sbiw	r24, 0x02	; 2
     58a:	41 f4       	brne	.+16     	; 0x59c <_Z12alarmMenuIntv+0x44>
     58c:	61 e0       	ldi	r22, 0x01	; 1
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     594:	85 e6       	ldi	r24, 0x65	; 101
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     59c:	08 95       	ret

0000059e <_Z14settingMenuIntv>:
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	84 e0       	ldi	r24, 0x04	; 4
     5a2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5a6:	82 e0       	ldi	r24, 0x02	; 2
     5a8:	92 e0       	ldi	r25, 0x02	; 2
     5aa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	91 05       	cpc	r25, r1
     5ba:	49 f4       	brne	.+18     	; 0x5ce <_Z14settingMenuIntv+0x30>
     5bc:	61 e0       	ldi	r22, 0x01	; 1
     5be:	83 e0       	ldi	r24, 0x03	; 3
     5c0:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5c4:	83 e7       	ldi	r24, 0x73	; 115
     5c6:	91 e0       	ldi	r25, 0x01	; 1
     5c8:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5cc:	08 95       	ret
     5ce:	82 30       	cpi	r24, 0x02	; 2
     5d0:	91 05       	cpc	r25, r1
     5d2:	49 f4       	brne	.+18     	; 0x5e6 <_Z14settingMenuIntv+0x48>
     5d4:	61 e0       	ldi	r22, 0x01	; 1
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5dc:	8e e7       	ldi	r24, 0x7E	; 126
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5e4:	08 95       	ret
     5e6:	03 97       	sbiw	r24, 0x03	; 3
     5e8:	41 f4       	brne	.+16     	; 0x5fa <_Z14settingMenuIntv+0x5c>
     5ea:	61 e0       	ldi	r22, 0x01	; 1
     5ec:	84 e0       	ldi	r24, 0x04	; 4
     5ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5f2:	8b e8       	ldi	r24, 0x8B	; 139
     5f4:	91 e0       	ldi	r25, 0x01	; 1
     5f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5fa:	08 95       	ret

000005fc <_Z9volumeIntv>:
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
     604:	2a 97       	sbiw	r28, 0x0a	; 10
     606:	0f b6       	in	r0, 0x3f	; 63
     608:	f8 94       	cli
     60a:	de bf       	out	0x3e, r29	; 62
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	cd bf       	out	0x3d, r28	; 61
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	85 e0       	ldi	r24, 0x05	; 5
     614:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     618:	85 e9       	ldi	r24, 0x95	; 149
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     620:	61 e0       	ldi	r22, 0x01	; 1
     622:	87 e0       	ldi	r24, 0x07	; 7
     624:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     628:	4a e0       	ldi	r20, 0x0A	; 10
     62a:	be 01       	movw	r22, r28
     62c:	6f 5f       	subi	r22, 0xFF	; 255
     62e:	7f 4f       	sbci	r23, 0xFF	; 255
     630:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
     634:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
     638:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <__itoa_ncheck>
     63c:	ce 01       	movw	r24, r28
     63e:	01 96       	adiw	r24, 0x01	; 1
     640:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     644:	2a 96       	adiw	r28, 0x0a	; 10
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	de bf       	out	0x3e, r29	; 62
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	cd bf       	out	0x3d, r28	; 61
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <_Z11contrastIntv>:
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	2a 97       	sbiw	r28, 0x0a	; 10
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	60 e0       	ldi	r22, 0x00	; 0
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     672:	82 ea       	ldi	r24, 0xA2	; 162
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	87 e0       	ldi	r24, 0x07	; 7
     67e:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     682:	4a e0       	ldi	r20, 0x0A	; 10
     684:	be 01       	movw	r22, r28
     686:	6f 5f       	subi	r22, 0xFF	; 255
     688:	7f 4f       	sbci	r23, 0xFF	; 255
     68a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
     68e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
     692:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <__itoa_ncheck>
     696:	ce 01       	movw	r24, r28
     698:	01 96       	adiw	r24, 0x01	; 1
     69a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     69e:	2a 96       	adiw	r28, 0x0a	; 10
     6a0:	0f b6       	in	r0, 0x3f	; 63
     6a2:	f8 94       	cli
     6a4:	de bf       	out	0x3e, r29	; 62
     6a6:	0f be       	out	0x3f, r0	; 63
     6a8:	cd bf       	out	0x3d, r28	; 61
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <_Z13alarmTonesIntv>:
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	83 e0       	ldi	r24, 0x03	; 3
     6b4:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6b8:	8f ea       	ldi	r24, 0xAF	; 175
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6c8:	81 30       	cpi	r24, 0x01	; 1
     6ca:	91 05       	cpc	r25, r1
     6cc:	49 f4       	brne	.+18     	; 0x6e0 <_Z13alarmTonesIntv+0x30>
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	82 e0       	ldi	r24, 0x02	; 2
     6d2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6d6:	8b eb       	ldi	r24, 0xBB	; 187
     6d8:	91 e0       	ldi	r25, 0x01	; 1
     6da:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6de:	08 95       	ret
     6e0:	82 30       	cpi	r24, 0x02	; 2
     6e2:	91 05       	cpc	r25, r1
     6e4:	49 f4       	brne	.+18     	; 0x6f8 <_Z13alarmTonesIntv+0x48>
     6e6:	61 e0       	ldi	r22, 0x01	; 1
     6e8:	82 e0       	ldi	r24, 0x02	; 2
     6ea:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6ee:	88 ec       	ldi	r24, 0xC8	; 200
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6f6:	08 95       	ret
     6f8:	83 30       	cpi	r24, 0x03	; 3
     6fa:	91 05       	cpc	r25, r1
     6fc:	49 f4       	brne	.+18     	; 0x710 <_Z13alarmTonesIntv+0x60>
     6fe:	61 e0       	ldi	r22, 0x01	; 1
     700:	82 e0       	ldi	r24, 0x02	; 2
     702:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     706:	85 ed       	ldi	r24, 0xD5	; 213
     708:	91 e0       	ldi	r25, 0x01	; 1
     70a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     70e:	08 95       	ret
     710:	84 30       	cpi	r24, 0x04	; 4
     712:	91 05       	cpc	r25, r1
     714:	49 f4       	brne	.+18     	; 0x728 <_Z13alarmTonesIntv+0x78>
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	82 e0       	ldi	r24, 0x02	; 2
     71a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     71e:	82 ee       	ldi	r24, 0xE2	; 226
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     726:	08 95       	ret
     728:	05 97       	sbiw	r24, 0x05	; 5
     72a:	41 f4       	brne	.+16     	; 0x73c <_Z13alarmTonesIntv+0x8c>
     72c:	61 e0       	ldi	r22, 0x01	; 1
     72e:	82 e0       	ldi	r24, 0x02	; 2
     730:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     734:	8f ee       	ldi	r24, 0xEF	; 239
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     73c:	08 95       	ret

0000073e <_Z15alarmSettingIntv>:
     73e:	60 e0       	ldi	r22, 0x00	; 0
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     746:	8c ef       	ldi	r24, 0xFC	; 252
     748:	91 e0       	ldi	r25, 0x01	; 1
     74a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     74e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     752:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     756:	81 30       	cpi	r24, 0x01	; 1
     758:	91 05       	cpc	r25, r1
     75a:	49 f4       	brne	.+18     	; 0x76e <_Z15alarmSettingIntv+0x30>
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     764:	8b e0       	ldi	r24, 0x0B	; 11
     766:	92 e0       	ldi	r25, 0x02	; 2
     768:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     76c:	08 95       	ret
     76e:	02 97       	sbiw	r24, 0x02	; 2
     770:	41 f4       	brne	.+16     	; 0x782 <_Z15alarmSettingIntv+0x44>
     772:	61 e0       	ldi	r22, 0x01	; 1
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     77a:	88 e1       	ldi	r24, 0x18	; 24
     77c:	92 e0       	ldi	r25, 0x02	; 2
     77e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     782:	08 95       	ret

00000784 <_Z15turnBacklightOnv>:
	//lcd.backlight(contrast);
}

void turnBacklightOn()
{
	setBit(PORTD,0);
     784:	8b b1       	in	r24, 0x0b	; 11
     786:	81 60       	ori	r24, 0x01	; 1
     788:	8b b9       	out	0x0b, r24	; 11
     78a:	08 95       	ret

0000078c <_Z13resetDefaultsv>:
	}
}

void resetDefaults()
{
	volume = 10;
     78c:	8a e0       	ldi	r24, 0x0A	; 10
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
     794:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
	contrast = 50;
     798:	82 e3       	ldi	r24, 0x32	; 50
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
     7a0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
	setContrast();
	backlight = true;
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <backlight>
	turnBacklightOn();
     7aa:	0e 94 c2 03 	call	0x784	; 0x784 <_Z15turnBacklightOnv>
     7ae:	08 95       	ret

000007b0 <_Z16turnBacklightOffv>:
	setBit(PORTD,0);
}

void turnBacklightOff()
{
	clearBit(PORTD,0);
     7b0:	8b b1       	in	r24, 0x0b	; 11
     7b2:	8e 7f       	andi	r24, 0xFE	; 254
     7b4:	8b b9       	out	0x0b, r24	; 11
     7b6:	08 95       	ret

000007b8 <_Z14pressed_buttoni>:
	}
}

bool pressed_button (int btn)		//determines whether the given button is pressed or not
{
	if (!(PIND & (1<<btn)))
     7b8:	29 b1       	in	r18, 0x09	; 9
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <_Z14pressed_buttoni+0xa>
     7be:	35 95       	asr	r19
     7c0:	27 95       	ror	r18
     7c2:	8a 95       	dec	r24
     7c4:	e2 f7       	brpl	.-8      	; 0x7be <_Z14pressed_buttoni+0x6>
     7c6:	20 fd       	sbrc	r18, 0
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <_Z14pressed_buttoni+0x16>
	{
		return true;
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	08 95       	ret
	}
	else
	{
		return false;
     7ce:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     7d0:	08 95       	ret

000007d2 <_Z14dateTimeSetIntv>:
void deleteAlarm(int alarmNo);



void dateTimeSetInt()		//set date and time
{
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	cd b7       	in	r28, 0x3d	; 61
     7dc:	de b7       	in	r29, 0x3e	; 62
     7de:	2a 97       	sbiw	r28, 0x0a	; 10
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	de bf       	out	0x3e, r29	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	cd bf       	out	0x3d, r28	; 61
	while(true)
	{
		
		
		
		lcdSetCursor(0,0);
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Hr:    ");
     7f2:	87 e2       	ldi	r24, 0x27	; 39
     7f4:	92 e0       	ldi	r25, 0x02	; 2
     7f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_sthour[10];
		sprintf(str_sthour,"%x",hours);
     7fa:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <hours+0x1>
     7fe:	8f 93       	push	r24
     800:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <hours>
     804:	8f 93       	push	r24
     806:	88 e3       	ldi	r24, 0x38	; 56
     808:	92 e0       	ldi	r25, 0x02	; 2
     80a:	9f 93       	push	r25
     80c:	8f 93       	push	r24
     80e:	8e 01       	movw	r16, r28
     810:	0f 5f       	subi	r16, 0xFF	; 255
     812:	1f 4f       	sbci	r17, 0xFF	; 255
     814:	1f 93       	push	r17
     816:	0f 93       	push	r16
     818:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     81c:	61 e0       	ldi	r22, 0x01	; 1
     81e:	87 e0       	ldi	r24, 0x07	; 7
     820:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_sthour);
     824:	c8 01       	movw	r24, r16
     826:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     82a:	8d e5       	ldi	r24, 0x5D	; 93
     82c:	92 e0       	ldi	r25, 0x02	; 2
     82e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	0f 90       	pop	r0
     846:	88 23       	and	r24, r24
     848:	71 f0       	breq	.+28     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
		{
			hours++;
     84a:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <hours>
     84e:	90 91 0c 03 	lds	r25, 0x030C	; 0x80030c <hours+0x1>
     852:	01 96       	adiw	r24, 0x01	; 1
			hours%=24;
     854:	68 e1       	ldi	r22, 0x18	; 24
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
     85c:	90 93 0c 03 	sts	0x030C, r25	; 0x80030c <hours+0x1>
     860:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <hours>
     864:	31 c0       	rjmp	.+98     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
		}
		else if (pressed_button(PIND7))
     866:	87 e0       	ldi	r24, 0x07	; 7
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     86e:	88 23       	and	r24, r24
     870:	b1 f0       	breq	.+44     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
		{
			hours--;
     872:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <hours>
     876:	90 91 0c 03 	lds	r25, 0x030C	; 0x80030c <hours+0x1>
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	90 93 0c 03 	sts	0x030C, r25	; 0x80030c <hours+0x1>
     880:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <hours>
			if (hor<0)
     884:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <hor>
     888:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <hor+0x1>
     88c:	99 23       	and	r25, r25
     88e:	e4 f4       	brge	.+56     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
			{
				hours=23;
     890:	87 e1       	ldi	r24, 0x17	; 23
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	90 93 0c 03 	sts	0x030C, r25	; 0x80030c <hours+0x1>
     898:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <hours>
     89c:	15 c0       	rjmp	.+42     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
			}
		}
		else if (pressed_button(PIND6))
     89e:	86 e0       	ldi	r24, 0x06	; 6
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     8a6:	88 23       	and	r24, r24
     8a8:	49 f0       	breq	.+18     	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
		{
			hor=hours;
     8aa:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <hours>
     8ae:	90 91 0c 03 	lds	r25, 0x030C	; 0x80030c <hours+0x1>
     8b2:	90 93 54 03 	sts	0x0354, r25	; 0x800354 <hor+0x1>
     8b6:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <hor>
			break;
     8ba:	10 c0       	rjmp	.+32     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
		}
		else if (pressed_button(PIND4))
     8bc:	84 e0       	ldi	r24, 0x04	; 4
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     8c4:	81 11       	cpse	r24, r1
     8c6:	0a c0       	rjmp	.+20     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8c8:	2f ef       	ldi	r18, 0xFF	; 255
     8ca:	81 ee       	ldi	r24, 0xE1	; 225
     8cc:	94 e0       	ldi	r25, 0x04	; 4
     8ce:	21 50       	subi	r18, 0x01	; 1
     8d0:	80 40       	sbci	r24, 0x00	; 0
     8d2:	90 40       	sbci	r25, 0x00	; 0
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8d8:	00 00       	nop

void dateTimeSetInt()		//set date and time
{
	
	
	while(true)
     8da:	87 cf       	rjmp	.-242    	; 0x7ea <_Z14dateTimeSetIntv+0x18>
     8dc:	2f ef       	ldi	r18, 0xFF	; 255
     8de:	81 ee       	ldi	r24, 0xE1	; 225
     8e0:	94 e0       	ldi	r25, 0x04	; 4
     8e2:	21 50       	subi	r18, 0x01	; 1
     8e4:	80 40       	sbci	r24, 0x00	; 0
     8e6:	90 40       	sbci	r25, 0x00	; 0
     8e8:	e1 f7       	brne	.-8      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
     8ea:	00 c0       	rjmp	.+0      	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
     8ec:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     8ee:	60 e0       	ldi	r22, 0x00	; 0
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Mins :  ");
     8f6:	8b e3       	ldi	r24, 0x3B	; 59
     8f8:	92 e0       	ldi	r25, 0x02	; 2
     8fa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_stmin[10];
		sprintf(str_stmin,"%x",min);
     8fe:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <min+0x1>
     902:	8f 93       	push	r24
     904:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <min>
     908:	8f 93       	push	r24
     90a:	88 e3       	ldi	r24, 0x38	; 56
     90c:	92 e0       	ldi	r25, 0x02	; 2
     90e:	9f 93       	push	r25
     910:	8f 93       	push	r24
     912:	8e 01       	movw	r16, r28
     914:	0f 5f       	subi	r16, 0xFF	; 255
     916:	1f 4f       	sbci	r17, 0xFF	; 255
     918:	1f 93       	push	r17
     91a:	0f 93       	push	r16
     91c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     920:	61 e0       	ldi	r22, 0x01	; 1
     922:	87 e0       	ldi	r24, 0x07	; 7
     924:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_stmin);
     928:	c8 01       	movw	r24, r16
     92a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     92e:	8d e5       	ldi	r24, 0x5D	; 93
     930:	92 e0       	ldi	r25, 0x02	; 2
     932:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     936:	85 e0       	ldi	r24, 0x05	; 5
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	0f 90       	pop	r0
     94a:	88 23       	and	r24, r24
     94c:	71 f0       	breq	.+28     	; 0x96a <__stack+0x6b>
		{
			mins++;
     94e:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <mins>
     952:	90 91 0e 03 	lds	r25, 0x030E	; 0x80030e <mins+0x1>
     956:	01 96       	adiw	r24, 0x01	; 1
			mins%=60;
     958:	6c e3       	ldi	r22, 0x3C	; 60
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
     960:	90 93 0e 03 	sts	0x030E, r25	; 0x80030e <mins+0x1>
     964:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <mins>
     968:	2d c0       	rjmp	.+90     	; 0x9c4 <__stack+0xc5>
		}
		else if (pressed_button(PIND7))
     96a:	87 e0       	ldi	r24, 0x07	; 7
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     972:	88 23       	and	r24, r24
     974:	91 f0       	breq	.+36     	; 0x99a <__stack+0x9b>
		{
			mins--;
     976:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <mins>
     97a:	90 91 0e 03 	lds	r25, 0x030E	; 0x80030e <mins+0x1>
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	90 93 0e 03 	sts	0x030E, r25	; 0x80030e <mins+0x1>
     984:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <mins>
			if (mins<0)
     988:	99 23       	and	r25, r25
     98a:	e4 f4       	brge	.+56     	; 0x9c4 <__stack+0xc5>
			{
				mins=59;
     98c:	8b e3       	ldi	r24, 0x3B	; 59
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	90 93 0e 03 	sts	0x030E, r25	; 0x80030e <mins+0x1>
     994:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <mins>
     998:	15 c0       	rjmp	.+42     	; 0x9c4 <__stack+0xc5>
			}
		}
		else if(pressed_button(PIND6))
     99a:	86 e0       	ldi	r24, 0x06	; 6
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     9a2:	88 23       	and	r24, r24
     9a4:	49 f0       	breq	.+18     	; 0x9b8 <__stack+0xb9>
		{
			min=mins;
     9a6:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <mins>
     9aa:	90 91 0e 03 	lds	r25, 0x030E	; 0x80030e <mins+0x1>
     9ae:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <min+0x1>
     9b2:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <min>
			break;
     9b6:	10 c0       	rjmp	.+32     	; 0x9d8 <__stack+0xd9>
		}
		else if (pressed_button(PIND4))
     9b8:	84 e0       	ldi	r24, 0x04	; 4
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     9c0:	81 11       	cpse	r24, r1
     9c2:	0a c0       	rjmp	.+20     	; 0x9d8 <__stack+0xd9>
     9c4:	2f ef       	ldi	r18, 0xFF	; 255
     9c6:	81 ee       	ldi	r24, 0xE1	; 225
     9c8:	94 e0       	ldi	r25, 0x04	; 4
     9ca:	21 50       	subi	r18, 0x01	; 1
     9cc:	80 40       	sbci	r24, 0x00	; 0
     9ce:	90 40       	sbci	r25, 0x00	; 0
     9d0:	e1 f7       	brne	.-8      	; 0x9ca <__stack+0xcb>
     9d2:	00 c0       	rjmp	.+0      	; 0x9d4 <__stack+0xd5>
     9d4:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     9d6:	8b cf       	rjmp	.-234    	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     9d8:	2f ef       	ldi	r18, 0xFF	; 255
     9da:	81 ee       	ldi	r24, 0xE1	; 225
     9dc:	94 e0       	ldi	r25, 0x04	; 4
     9de:	21 50       	subi	r18, 0x01	; 1
     9e0:	80 40       	sbci	r24, 0x00	; 0
     9e2:	90 40       	sbci	r25, 0x00	; 0
     9e4:	e1 f7       	brne	.-8      	; 0x9de <__stack+0xdf>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <__stack+0xe9>
     9e8:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Date:    ");
     9f2:	8c e4       	ldi	r24, 0x4C	; 76
     9f4:	92 e0       	ldi	r25, 0x02	; 2
     9f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_date[10];
		sprintf(str_date,"%d",startdate);
     9fa:	80 91 46 03 	lds	r24, 0x0346	; 0x800346 <startdate+0x1>
     9fe:	8f 93       	push	r24
     a00:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <startdate>
     a04:	8f 93       	push	r24
     a06:	8f e5       	ldi	r24, 0x5F	; 95
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	9f 93       	push	r25
     a0c:	8f 93       	push	r24
     a0e:	8e 01       	movw	r16, r28
     a10:	0f 5f       	subi	r16, 0xFF	; 255
     a12:	1f 4f       	sbci	r17, 0xFF	; 255
     a14:	1f 93       	push	r17
     a16:	0f 93       	push	r16
     a18:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     a1c:	61 e0       	ldi	r22, 0x01	; 1
     a1e:	87 e0       	ldi	r24, 0x07	; 7
     a20:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_date);
     a24:	c8 01       	movw	r24, r16
     a26:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     a2a:	8d e5       	ldi	r24, 0x5D	; 93
     a2c:	92 e0       	ldi	r25, 0x02	; 2
     a2e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     a32:	85 e0       	ldi	r24, 0x05	; 5
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
     a44:	0f 90       	pop	r0
     a46:	88 23       	and	r24, r24
     a48:	91 f0       	breq	.+36     	; 0xa6e <__stack+0x16f>
		{
			startdate++;
     a4a:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <startdate>
     a4e:	90 91 46 03 	lds	r25, 0x0346	; 0x800346 <startdate+0x1>
     a52:	01 96       	adiw	r24, 0x01	; 1
			startdate%=32;
     a54:	8f 71       	andi	r24, 0x1F	; 31
     a56:	90 78       	andi	r25, 0x80	; 128
     a58:	99 23       	and	r25, r25
     a5a:	24 f4       	brge	.+8      	; 0xa64 <__stack+0x165>
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	80 6e       	ori	r24, 0xE0	; 224
     a60:	9f 6f       	ori	r25, 0xFF	; 255
     a62:	01 96       	adiw	r24, 0x01	; 1
     a64:	90 93 46 03 	sts	0x0346, r25	; 0x800346 <startdate+0x1>
     a68:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <startdate>
     a6c:	2e c0       	rjmp	.+92     	; 0xaca <__stack+0x1cb>
			
		}
		else if (pressed_button(PIND7))
     a6e:	87 e0       	ldi	r24, 0x07	; 7
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     a76:	88 23       	and	r24, r24
     a78:	99 f0       	breq	.+38     	; 0xaa0 <__stack+0x1a1>
		{
			startdate--;
     a7a:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <startdate>
     a7e:	90 91 46 03 	lds	r25, 0x0346	; 0x800346 <startdate+0x1>
     a82:	01 97       	sbiw	r24, 0x01	; 1
     a84:	90 93 46 03 	sts	0x0346, r25	; 0x800346 <startdate+0x1>
     a88:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <startdate>
			if (startdate<1)
     a8c:	18 16       	cp	r1, r24
     a8e:	19 06       	cpc	r1, r25
     a90:	e4 f0       	brlt	.+56     	; 0xaca <__stack+0x1cb>
			{
				startdate=31;
     a92:	8f e1       	ldi	r24, 0x1F	; 31
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	90 93 46 03 	sts	0x0346, r25	; 0x800346 <startdate+0x1>
     a9a:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <startdate>
     a9e:	15 c0       	rjmp	.+42     	; 0xaca <__stack+0x1cb>
			}
		}
		else if (pressed_button(PIND6))
     aa0:	86 e0       	ldi	r24, 0x06	; 6
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     aa8:	88 23       	and	r24, r24
     aaa:	49 f0       	breq	.+18     	; 0xabe <__stack+0x1bf>
		{
			date=startdate;
     aac:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <startdate>
     ab0:	90 91 46 03 	lds	r25, 0x0346	; 0x800346 <startdate+0x1>
     ab4:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <date+0x1>
     ab8:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <date>
			break;
     abc:	10 c0       	rjmp	.+32     	; 0xade <__stack+0x1df>
		}
		else if (pressed_button(PIND4))
     abe:	84 e0       	ldi	r24, 0x04	; 4
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ac6:	81 11       	cpse	r24, r1
     ac8:	0a c0       	rjmp	.+20     	; 0xade <__stack+0x1df>
     aca:	2f ef       	ldi	r18, 0xFF	; 255
     acc:	81 ee       	ldi	r24, 0xE1	; 225
     ace:	94 e0       	ldi	r25, 0x04	; 4
     ad0:	21 50       	subi	r18, 0x01	; 1
     ad2:	80 40       	sbci	r24, 0x00	; 0
     ad4:	90 40       	sbci	r25, 0x00	; 0
     ad6:	e1 f7       	brne	.-8      	; 0xad0 <__stack+0x1d1>
     ad8:	00 c0       	rjmp	.+0      	; 0xada <__stack+0x1db>
     ada:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     adc:	86 cf       	rjmp	.-244    	; 0x9ea <__stack+0xeb>
     ade:	2f ef       	ldi	r18, 0xFF	; 255
     ae0:	81 ee       	ldi	r24, 0xE1	; 225
     ae2:	94 e0       	ldi	r25, 0x04	; 4
     ae4:	21 50       	subi	r18, 0x01	; 1
     ae6:	80 40       	sbci	r24, 0x00	; 0
     ae8:	90 40       	sbci	r25, 0x00	; 0
     aea:	e1 f7       	brne	.-8      	; 0xae4 <__stack+0x1e5>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <__stack+0x1ef>
     aee:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Month:    ");
     af8:	82 e6       	ldi	r24, 0x62	; 98
     afa:	92 e0       	ldi	r25, 0x02	; 2
     afc:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_mnth[10];
		sprintf(str_mnth,"%d",startmnth);
     b00:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <startmnth+0x1>
     b04:	8f 93       	push	r24
     b06:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <startmnth>
     b0a:	8f 93       	push	r24
     b0c:	8f e5       	ldi	r24, 0x5F	; 95
     b0e:	92 e0       	ldi	r25, 0x02	; 2
     b10:	9f 93       	push	r25
     b12:	8f 93       	push	r24
     b14:	8e 01       	movw	r16, r28
     b16:	0f 5f       	subi	r16, 0xFF	; 255
     b18:	1f 4f       	sbci	r17, 0xFF	; 255
     b1a:	1f 93       	push	r17
     b1c:	0f 93       	push	r16
     b1e:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     b22:	61 e0       	ldi	r22, 0x01	; 1
     b24:	87 e0       	ldi	r24, 0x07	; 7
     b26:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_mnth);
     b2a:	c8 01       	movw	r24, r16
     b2c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     b30:	8d e5       	ldi	r24, 0x5D	; 93
     b32:	92 e0       	ldi	r25, 0x02	; 2
     b34:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     b38:	85 e0       	ldi	r24, 0x05	; 5
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	0f 90       	pop	r0
     b46:	0f 90       	pop	r0
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
     b4c:	88 23       	and	r24, r24
     b4e:	71 f0       	breq	.+28     	; 0xb6c <__stack+0x26d>
		{
			startmnth++;
     b50:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <startmnth>
     b54:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <startmnth+0x1>
     b58:	01 96       	adiw	r24, 0x01	; 1
			startmnth%=13;
     b5a:	6d e0       	ldi	r22, 0x0D	; 13
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
     b62:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <startmnth+0x1>
     b66:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <startmnth>
     b6a:	2e c0       	rjmp	.+92     	; 0xbc8 <__stack+0x2c9>
			
		}
		else if (pressed_button(PIND7))
     b6c:	87 e0       	ldi	r24, 0x07	; 7
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     b74:	88 23       	and	r24, r24
     b76:	99 f0       	breq	.+38     	; 0xb9e <__stack+0x29f>
		{
			startmnth--;
     b78:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <startmnth>
     b7c:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <startmnth+0x1>
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <startmnth+0x1>
     b86:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <startmnth>
			if (startmnth<1)
     b8a:	18 16       	cp	r1, r24
     b8c:	19 06       	cpc	r1, r25
     b8e:	e4 f0       	brlt	.+56     	; 0xbc8 <__stack+0x2c9>
			{
				startmnth=12;
     b90:	8c e0       	ldi	r24, 0x0C	; 12
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	90 93 44 03 	sts	0x0344, r25	; 0x800344 <startmnth+0x1>
     b98:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <startmnth>
     b9c:	15 c0       	rjmp	.+42     	; 0xbc8 <__stack+0x2c9>
			}
		}
		else if (pressed_button(PIND6))
     b9e:	86 e0       	ldi	r24, 0x06	; 6
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ba6:	88 23       	and	r24, r24
     ba8:	49 f0       	breq	.+18     	; 0xbbc <__stack+0x2bd>
		{
			month=startmnth;
     baa:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <startmnth>
     bae:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <startmnth+0x1>
     bb2:	90 93 08 03 	sts	0x0308, r25	; 0x800308 <month+0x1>
     bb6:	80 93 07 03 	sts	0x0307, r24	; 0x800307 <month>
			break;
     bba:	10 c0       	rjmp	.+32     	; 0xbdc <__stack+0x2dd>
		}
		else if (pressed_button(PIND4))
     bbc:	84 e0       	ldi	r24, 0x04	; 4
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     bc4:	81 11       	cpse	r24, r1
     bc6:	0a c0       	rjmp	.+20     	; 0xbdc <__stack+0x2dd>
     bc8:	2f ef       	ldi	r18, 0xFF	; 255
     bca:	81 ee       	ldi	r24, 0xE1	; 225
     bcc:	94 e0       	ldi	r25, 0x04	; 4
     bce:	21 50       	subi	r18, 0x01	; 1
     bd0:	80 40       	sbci	r24, 0x00	; 0
     bd2:	90 40       	sbci	r25, 0x00	; 0
     bd4:	e1 f7       	brne	.-8      	; 0xbce <__stack+0x2cf>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <__stack+0x2d9>
     bd8:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     bda:	8a cf       	rjmp	.-236    	; 0xaf0 <__stack+0x1f1>
     bdc:	2f ef       	ldi	r18, 0xFF	; 255
     bde:	81 ee       	ldi	r24, 0xE1	; 225
     be0:	94 e0       	ldi	r25, 0x04	; 4
     be2:	21 50       	subi	r18, 0x01	; 1
     be4:	80 40       	sbci	r24, 0x00	; 0
     be6:	90 40       	sbci	r25, 0x00	; 0
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <__stack+0x2e3>
     bea:	00 c0       	rjmp	.+0      	; 0xbec <__stack+0x2ed>
     bec:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Year:    ");
     bf6:	85 e7       	ldi	r24, 0x75	; 117
     bf8:	92 e0       	ldi	r25, 0x02	; 2
     bfa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_yr[10];
		sprintf(str_yr,"%d",startyr);
     bfe:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <startyr+0x1>
     c02:	8f 93       	push	r24
     c04:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <startyr>
     c08:	8f 93       	push	r24
     c0a:	8f e5       	ldi	r24, 0x5F	; 95
     c0c:	92 e0       	ldi	r25, 0x02	; 2
     c0e:	9f 93       	push	r25
     c10:	8f 93       	push	r24
     c12:	8e 01       	movw	r16, r28
     c14:	0f 5f       	subi	r16, 0xFF	; 255
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	1f 93       	push	r17
     c1a:	0f 93       	push	r16
     c1c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(5,1);
     c20:	61 e0       	ldi	r22, 0x01	; 1
     c22:	85 e0       	ldi	r24, 0x05	; 5
     c24:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_yr);
     c28:	c8 01       	movw	r24, r16
     c2a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     c2e:	8d e5       	ldi	r24, 0x5D	; 93
     c30:	92 e0       	ldi	r25, 0x02	; 2
     c32:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     c36:	85 e0       	ldi	r24, 0x05	; 5
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c3e:	0f 90       	pop	r0
     c40:	0f 90       	pop	r0
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	0f 90       	pop	r0
     c4a:	88 23       	and	r24, r24
     c4c:	51 f0       	breq	.+20     	; 0xc62 <__stack+0x363>
		{
			startyr++;
     c4e:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <startyr>
     c52:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <startyr+0x1>
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <startyr+0x1>
     c5c:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <startyr>
     c60:	25 c0       	rjmp	.+74     	; 0xcac <__stack+0x3ad>
			
		}
		else if (pressed_button(PIND7))
     c62:	87 e0       	ldi	r24, 0x07	; 7
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c6a:	88 23       	and	r24, r24
     c6c:	51 f0       	breq	.+20     	; 0xc82 <__stack+0x383>
		{
			startyr--;
     c6e:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <startyr>
     c72:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <startyr+0x1>
     c76:	01 97       	sbiw	r24, 0x01	; 1
     c78:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <startyr+0x1>
     c7c:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <startyr>
     c80:	15 c0       	rjmp	.+42     	; 0xcac <__stack+0x3ad>
		}
		else if (pressed_button(PIND6))
     c82:	86 e0       	ldi	r24, 0x06	; 6
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c8a:	88 23       	and	r24, r24
     c8c:	49 f0       	breq	.+18     	; 0xca0 <__stack+0x3a1>
		{
			yr=startyr;
     c8e:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <startyr>
     c92:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <startyr+0x1>
     c96:	90 93 06 03 	sts	0x0306, r25	; 0x800306 <yr+0x1>
     c9a:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <yr>
			break;
     c9e:	10 c0       	rjmp	.+32     	; 0xcc0 <__stack+0x3c1>
		}
		else if (pressed_button(PIND4))
     ca0:	84 e0       	ldi	r24, 0x04	; 4
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ca8:	81 11       	cpse	r24, r1
     caa:	0a c0       	rjmp	.+20     	; 0xcc0 <__stack+0x3c1>
     cac:	2f ef       	ldi	r18, 0xFF	; 255
     cae:	81 ee       	ldi	r24, 0xE1	; 225
     cb0:	94 e0       	ldi	r25, 0x04	; 4
     cb2:	21 50       	subi	r18, 0x01	; 1
     cb4:	80 40       	sbci	r24, 0x00	; 0
     cb6:	90 40       	sbci	r25, 0x00	; 0
     cb8:	e1 f7       	brne	.-8      	; 0xcb2 <__stack+0x3b3>
     cba:	00 c0       	rjmp	.+0      	; 0xcbc <__stack+0x3bd>
     cbc:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     cbe:	97 cf       	rjmp	.-210    	; 0xbee <__stack+0x2ef>
		{
			break;
		}
		_delay_ms(del);
	}
	lcdClear();
     cc0:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	lcdPrint("  Time is set!   ");
     cc4:	87 e8       	ldi	r24, 0x87	; 135
     cc6:	92 e0       	ldi	r25, 0x02	; 2
     cc8:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     ccc:	2f ef       	ldi	r18, 0xFF	; 255
     cce:	89 e6       	ldi	r24, 0x69	; 105
     cd0:	98 e1       	ldi	r25, 0x18	; 24
     cd2:	21 50       	subi	r18, 0x01	; 1
     cd4:	80 40       	sbci	r24, 0x00	; 0
     cd6:	90 40       	sbci	r25, 0x00	; 0
     cd8:	e1 f7       	brne	.-8      	; 0xcd2 <__stack+0x3d3>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <__stack+0x3dd>
     cdc:	00 00       	nop
	_delay_ms(1000);
	lcdClear();
     cde:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	page=1;
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
     cea:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
}
     cee:	2a 96       	adiw	r28, 0x0a	; 10
     cf0:	0f b6       	in	r0, 0x3f	; 63
     cf2:	f8 94       	cli
     cf4:	de bf       	out	0x3e, r29	; 62
     cf6:	0f be       	out	0x3f, r0	; 63
     cf8:	cd bf       	out	0x3d, r28	; 61
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	1f 91       	pop	r17
     d00:	0f 91       	pop	r16
     d02:	08 95       	ret

00000d04 <_Z12editAlarmInti>:
		alarmDisplay(alarmNo);
	}
}

void editAlarmInt(int currentAlarm)		//set or modify alarms
{
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	2a 97       	sbiw	r28, 0x0a	; 10
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	7c 01       	movw	r14, r24
	while(true)
	{
		lcdSetCursor(0,0);
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Hr:    ");
     d2a:	87 e2       	ldi	r24, 0x27	; 39
     d2c:	92 e0       	ldi	r25, 0x02	; 2
     d2e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_sthour[10];
		sprintf(str_sthour,"%d",startAlarmHr);
     d32:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <startAlarmHr+0x1>
     d36:	8f 93       	push	r24
     d38:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <startAlarmHr>
     d3c:	8f 93       	push	r24
     d3e:	8f e5       	ldi	r24, 0x5F	; 95
     d40:	92 e0       	ldi	r25, 0x02	; 2
     d42:	9f 93       	push	r25
     d44:	8f 93       	push	r24
     d46:	8e 01       	movw	r16, r28
     d48:	0f 5f       	subi	r16, 0xFF	; 255
     d4a:	1f 4f       	sbci	r17, 0xFF	; 255
     d4c:	1f 93       	push	r17
     d4e:	0f 93       	push	r16
     d50:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     d54:	61 e0       	ldi	r22, 0x01	; 1
     d56:	87 e0       	ldi	r24, 0x07	; 7
     d58:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_sthour);
     d5c:	c8 01       	movw	r24, r16
     d5e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     d62:	8d e5       	ldi	r24, 0x5D	; 93
     d64:	92 e0       	ldi	r25, 0x02	; 2
     d66:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     d6a:	85 e0       	ldi	r24, 0x05	; 5
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     d72:	0f 90       	pop	r0
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	88 23       	and	r24, r24
     d80:	71 f0       	breq	.+28     	; 0xd9e <_Z12editAlarmInti+0x9a>
		{
			startAlarmHr++;
     d82:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <startAlarmHr>
     d86:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <startAlarmHr+0x1>
     d8a:	01 96       	adiw	r24, 0x01	; 1
			startAlarmHr%=24;
     d8c:	68 e1       	ldi	r22, 0x18	; 24
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
     d94:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <startAlarmHr+0x1>
     d98:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <startAlarmHr>
     d9c:	31 c0       	rjmp	.+98     	; 0xe00 <_Z12editAlarmInti+0xfc>
		}
		else if (pressed_button(PIND7))
     d9e:	87 e0       	ldi	r24, 0x07	; 7
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     da6:	88 23       	and	r24, r24
     da8:	91 f0       	breq	.+36     	; 0xdce <_Z12editAlarmInti+0xca>
		{
			startAlarmHr--;
     daa:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <startAlarmHr>
     dae:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <startAlarmHr+0x1>
     db2:	01 97       	sbiw	r24, 0x01	; 1
     db4:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <startAlarmHr+0x1>
     db8:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <startAlarmHr>
			if (startAlarmHr<0)
     dbc:	99 23       	and	r25, r25
     dbe:	04 f5       	brge	.+64     	; 0xe00 <_Z12editAlarmInti+0xfc>
			{
				startAlarmHr=23;
     dc0:	87 e1       	ldi	r24, 0x17	; 23
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <startAlarmHr+0x1>
     dc8:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <startAlarmHr>
     dcc:	19 c0       	rjmp	.+50     	; 0xe00 <_Z12editAlarmInti+0xfc>
			}
		}
		else if (pressed_button(PIND6))
     dce:	86 e0       	ldi	r24, 0x06	; 6
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     dd6:	88 23       	and	r24, r24
     dd8:	69 f0       	breq	.+26     	; 0xdf4 <_Z12editAlarmInti+0xf0>
		{
			alarmHoursList[currentAlarm-1]=startAlarmHr;
     dda:	f7 01       	movw	r30, r14
     ddc:	31 97       	sbiw	r30, 0x01	; 1
     dde:	ee 0f       	add	r30, r30
     de0:	ff 1f       	adc	r31, r31
     de2:	e1 5d       	subi	r30, 0xD1	; 209
     de4:	fc 4f       	sbci	r31, 0xFC	; 252
     de6:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <startAlarmHr>
     dea:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <startAlarmHr+0x1>
     dee:	91 83       	std	Z+1, r25	; 0x01
     df0:	80 83       	st	Z, r24
			
			break;
     df2:	10 c0       	rjmp	.+32     	; 0xe14 <_Z12editAlarmInti+0x110>
		}
		else if (pressed_button(PIND4))
     df4:	84 e0       	ldi	r24, 0x04	; 4
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     dfc:	81 11       	cpse	r24, r1
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <_Z12editAlarmInti+0x110>
     e00:	2f ef       	ldi	r18, 0xFF	; 255
     e02:	81 ee       	ldi	r24, 0xE1	; 225
     e04:	94 e0       	ldi	r25, 0x04	; 4
     e06:	21 50       	subi	r18, 0x01	; 1
     e08:	80 40       	sbci	r24, 0x00	; 0
     e0a:	90 40       	sbci	r25, 0x00	; 0
     e0c:	e1 f7       	brne	.-8      	; 0xe06 <_Z12editAlarmInti+0x102>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <_Z12editAlarmInti+0x10c>
     e10:	00 00       	nop
	}
}

void editAlarmInt(int currentAlarm)		//set or modify alarms
{
	while(true)
     e12:	87 cf       	rjmp	.-242    	; 0xd22 <_Z12editAlarmInti+0x1e>
     e14:	2f ef       	ldi	r18, 0xFF	; 255
     e16:	81 ee       	ldi	r24, 0xE1	; 225
     e18:	94 e0       	ldi	r25, 0x04	; 4
     e1a:	21 50       	subi	r18, 0x01	; 1
     e1c:	80 40       	sbci	r24, 0x00	; 0
     e1e:	90 40       	sbci	r25, 0x00	; 0
     e20:	e1 f7       	brne	.-8      	; 0xe1a <_Z12editAlarmInti+0x116>
     e22:	00 c0       	rjmp	.+0      	; 0xe24 <_Z12editAlarmInti+0x120>
     e24:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Mins :  ");
     e2e:	8b e3       	ldi	r24, 0x3B	; 59
     e30:	92 e0       	ldi	r25, 0x02	; 2
     e32:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_stmin[10];
		sprintf(str_stmin,"%d",startAlarmMin);
     e36:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <startAlarmMin+0x1>
     e3a:	8f 93       	push	r24
     e3c:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <startAlarmMin>
     e40:	8f 93       	push	r24
     e42:	8f e5       	ldi	r24, 0x5F	; 95
     e44:	92 e0       	ldi	r25, 0x02	; 2
     e46:	9f 93       	push	r25
     e48:	8f 93       	push	r24
     e4a:	8e 01       	movw	r16, r28
     e4c:	0f 5f       	subi	r16, 0xFF	; 255
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	1f 93       	push	r17
     e52:	0f 93       	push	r16
     e54:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
		lcdSetCursor(7,1);
     e58:	61 e0       	ldi	r22, 0x01	; 1
     e5a:	87 e0       	ldi	r24, 0x07	; 7
     e5c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_stmin);
     e60:	c8 01       	movw	r24, r16
     e62:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     e66:	8d e5       	ldi	r24, 0x5D	; 93
     e68:	92 e0       	ldi	r25, 0x02	; 2
     e6a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     e6e:	85 e0       	ldi	r24, 0x05	; 5
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	0f 90       	pop	r0
     e7e:	0f 90       	pop	r0
     e80:	0f 90       	pop	r0
     e82:	88 23       	and	r24, r24
     e84:	71 f0       	breq	.+28     	; 0xea2 <_Z12editAlarmInti+0x19e>
		{
			startAlarmMin++;
     e86:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <startAlarmMin>
     e8a:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <startAlarmMin+0x1>
     e8e:	01 96       	adiw	r24, 0x01	; 1
			startAlarmMin%=60;
     e90:	6c e3       	ldi	r22, 0x3C	; 60
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
     e98:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <startAlarmMin+0x1>
     e9c:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <startAlarmMin>
     ea0:	31 c0       	rjmp	.+98     	; 0xf04 <_Z12editAlarmInti+0x200>
		}
		else if (pressed_button(PIND7))
     ea2:	87 e0       	ldi	r24, 0x07	; 7
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     eaa:	88 23       	and	r24, r24
     eac:	91 f0       	breq	.+36     	; 0xed2 <_Z12editAlarmInti+0x1ce>
		{
			startAlarmMin--;
     eae:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <startAlarmMin>
     eb2:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <startAlarmMin+0x1>
     eb6:	01 97       	sbiw	r24, 0x01	; 1
     eb8:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <startAlarmMin+0x1>
     ebc:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <startAlarmMin>
			if (startAlarmMin<0)
     ec0:	99 23       	and	r25, r25
     ec2:	04 f5       	brge	.+64     	; 0xf04 <_Z12editAlarmInti+0x200>
			{
				startAlarmMin=59;
     ec4:	8b e3       	ldi	r24, 0x3B	; 59
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <startAlarmMin+0x1>
     ecc:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <startAlarmMin>
     ed0:	19 c0       	rjmp	.+50     	; 0xf04 <_Z12editAlarmInti+0x200>
			}
		}
		else if(pressed_button(PIND6))
     ed2:	86 e0       	ldi	r24, 0x06	; 6
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     eda:	88 23       	and	r24, r24
     edc:	69 f0       	breq	.+26     	; 0xef8 <_Z12editAlarmInti+0x1f4>
		{
			alarmMinsList[currentAlarm-1]=startAlarmMin;
     ede:	f7 01       	movw	r30, r14
     ee0:	31 97       	sbiw	r30, 0x01	; 1
     ee2:	ee 0f       	add	r30, r30
     ee4:	ff 1f       	adc	r31, r31
     ee6:	ef 5d       	subi	r30, 0xDF	; 223
     ee8:	fc 4f       	sbci	r31, 0xFC	; 252
     eea:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <startAlarmMin>
     eee:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <startAlarmMin+0x1>
     ef2:	91 83       	std	Z+1, r25	; 0x01
     ef4:	80 83       	st	Z, r24
			
			break;
     ef6:	10 c0       	rjmp	.+32     	; 0xf18 <_Z12editAlarmInti+0x214>
		}
		else if (pressed_button(PIND4))
     ef8:	84 e0       	ldi	r24, 0x04	; 4
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     f00:	81 11       	cpse	r24, r1
     f02:	0a c0       	rjmp	.+20     	; 0xf18 <_Z12editAlarmInti+0x214>
     f04:	2f ef       	ldi	r18, 0xFF	; 255
     f06:	81 ee       	ldi	r24, 0xE1	; 225
     f08:	94 e0       	ldi	r25, 0x04	; 4
     f0a:	21 50       	subi	r18, 0x01	; 1
     f0c:	80 40       	sbci	r24, 0x00	; 0
     f0e:	90 40       	sbci	r25, 0x00	; 0
     f10:	e1 f7       	brne	.-8      	; 0xf0a <_Z12editAlarmInti+0x206>
     f12:	00 c0       	rjmp	.+0      	; 0xf14 <_Z12editAlarmInti+0x210>
     f14:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     f16:	87 cf       	rjmp	.-242    	; 0xe26 <_Z12editAlarmInti+0x122>
		{
			break;
		}
		_delay_ms(del);
	}
	if (alarmStatus[currentAlarm-1]==0)
     f18:	21 e0       	ldi	r18, 0x01	; 1
     f1a:	e2 1a       	sub	r14, r18
     f1c:	f1 08       	sbc	r15, r1
     f1e:	f7 01       	movw	r30, r14
     f20:	ee 0f       	add	r30, r30
     f22:	ff 1f       	adc	r31, r31
     f24:	ed 5e       	subi	r30, 0xED	; 237
     f26:	fc 4f       	sbci	r31, 0xFC	; 252
     f28:	80 81       	ld	r24, Z
     f2a:	91 81       	ldd	r25, Z+1	; 0x01
     f2c:	89 2b       	or	r24, r25
     f2e:	59 f5       	brne	.+86     	; 0xf86 <_Z12editAlarmInti+0x282>
	{
		alarmStatus[currentAlarm-1]=1;
     f30:	c7 01       	movw	r24, r14
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	fc 01       	movw	r30, r24
     f38:	ed 5e       	subi	r30, 0xED	; 237
     f3a:	fc 4f       	sbci	r31, 0xFC	; 252
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
		noOfSetAlarms+=1;
     f44:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <noOfSetAlarms>
     f48:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <noOfSetAlarms+0x1>
     f4c:	01 96       	adiw	r24, 0x01	; 1
     f4e:	90 93 12 03 	sts	0x0312, r25	; 0x800312 <noOfSetAlarms+0x1>
     f52:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <noOfSetAlarms>
		lcdClear();
     f56:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
		lcdPrint("  Alarm is set!   ");
     f5a:	89 e9       	ldi	r24, 0x99	; 153
     f5c:	92 e0       	ldi	r25, 0x02	; 2
     f5e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	99 e6       	ldi	r25, 0x69	; 105
     f66:	28 e1       	ldi	r18, 0x18	; 24
     f68:	81 50       	subi	r24, 0x01	; 1
     f6a:	90 40       	sbci	r25, 0x00	; 0
     f6c:	20 40       	sbci	r18, 0x00	; 0
     f6e:	e1 f7       	brne	.-8      	; 0xf68 <_Z12editAlarmInti+0x264>
     f70:	00 c0       	rjmp	.+0      	; 0xf72 <_Z12editAlarmInti+0x26e>
     f72:	00 00       	nop
		_delay_ms(1000);
		page = 8;
     f74:	88 e0       	ldi	r24, 0x08	; 8
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
     f7c:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
		lcdClear();
     f80:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
     f84:	17 c0       	rjmp	.+46     	; 0xfb4 <_Z12editAlarmInti+0x2b0>
	}
	else
	{
		lcdClear();
     f86:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
		lcdPrint("  Alarm is set!   ");
     f8a:	89 e9       	ldi	r24, 0x99	; 153
     f8c:	92 e0       	ldi	r25, 0x02	; 2
     f8e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     f92:	8f ef       	ldi	r24, 0xFF	; 255
     f94:	99 e6       	ldi	r25, 0x69	; 105
     f96:	28 e1       	ldi	r18, 0x18	; 24
     f98:	81 50       	subi	r24, 0x01	; 1
     f9a:	90 40       	sbci	r25, 0x00	; 0
     f9c:	20 40       	sbci	r18, 0x00	; 0
     f9e:	e1 f7       	brne	.-8      	; 0xf98 <_Z12editAlarmInti+0x294>
     fa0:	00 c0       	rjmp	.+0      	; 0xfa2 <_Z12editAlarmInti+0x29e>
     fa2:	00 00       	nop
		_delay_ms(1000);
		page = 8;
     fa4:	88 e0       	ldi	r24, 0x08	; 8
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
     fac:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
		lcdClear();
     fb0:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	}
}
     fb4:	2a 96       	adiw	r28, 0x0a	; 10
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	ff 90       	pop	r15
     fca:	ef 90       	pop	r14
     fcc:	08 95       	ret

00000fce <_Z12alarmDisplayi>:
		return false;
	}
}

void alarmDisplay(int alarmNo)		
{
     fce:	ef 92       	push	r14
     fd0:	ff 92       	push	r15
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	64 97       	sbiw	r28, 0x14	; 20
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
	char Hr[10];
	sprintf(Hr,"%d",alarmHoursList[alarmNo-1]);
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	8c 01       	movw	r16, r24
     fee:	00 0f       	add	r16, r16
     ff0:	11 1f       	adc	r17, r17
     ff2:	f8 01       	movw	r30, r16
     ff4:	e1 5d       	subi	r30, 0xD1	; 209
     ff6:	fc 4f       	sbci	r31, 0xFC	; 252
     ff8:	80 81       	ld	r24, Z
     ffa:	91 81       	ldd	r25, Z+1	; 0x01
     ffc:	9f 93       	push	r25
     ffe:	8f 93       	push	r24
    1000:	0f 2e       	mov	r0, r31
    1002:	ff e5       	ldi	r31, 0x5F	; 95
    1004:	ef 2e       	mov	r14, r31
    1006:	f2 e0       	ldi	r31, 0x02	; 2
    1008:	ff 2e       	mov	r15, r31
    100a:	f0 2d       	mov	r31, r0
    100c:	ff 92       	push	r15
    100e:	ef 92       	push	r14
    1010:	ce 01       	movw	r24, r28
    1012:	01 96       	adiw	r24, 0x01	; 1
    1014:	9f 93       	push	r25
    1016:	8f 93       	push	r24
    1018:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
	
	char Min[10];
	sprintf(Min,"%d",alarmMinsList[alarmNo-1]);
    101c:	f8 01       	movw	r30, r16
    101e:	ef 5d       	subi	r30, 0xDF	; 223
    1020:	fc 4f       	sbci	r31, 0xFC	; 252
    1022:	80 81       	ld	r24, Z
    1024:	91 81       	ldd	r25, Z+1	; 0x01
    1026:	9f 93       	push	r25
    1028:	8f 93       	push	r24
    102a:	ff 92       	push	r15
    102c:	ef 92       	push	r14
    102e:	ce 01       	movw	r24, r28
    1030:	0b 96       	adiw	r24, 0x0b	; 11
    1032:	9f 93       	push	r25
    1034:	8f 93       	push	r24
    1036:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
	
	if (alarmStatus[alarmNo-1]==1)
    103a:	f8 01       	movw	r30, r16
    103c:	ed 5e       	subi	r30, 0xED	; 237
    103e:	fc 4f       	sbci	r31, 0xFC	; 252
    1040:	80 81       	ld	r24, Z
    1042:	91 81       	ldd	r25, Z+1	; 0x01
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	f8 94       	cli
    1048:	de bf       	out	0x3e, r29	; 62
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	cd bf       	out	0x3d, r28	; 61
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	c9 f4       	brne	.+50     	; 0x1084 <_Z12alarmDisplayi+0xb6>
	{
		lcdSetCursor(5, 1);
    1052:	61 e0       	ldi	r22, 0x01	; 1
    1054:	85 e0       	ldi	r24, 0x05	; 5
    1056:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(Hr);
    105a:	ce 01       	movw	r24, r28
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdSetCursor(7, 1);
    1062:	61 e0       	ldi	r22, 0x01	; 1
    1064:	87 e0       	ldi	r24, 0x07	; 7
    1066:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(":");
    106a:	8c ea       	ldi	r24, 0xAC	; 172
    106c:	92 e0       	ldi	r25, 0x02	; 2
    106e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdSetCursor(10, 1);
    1072:	61 e0       	ldi	r22, 0x01	; 1
    1074:	8a e0       	ldi	r24, 0x0A	; 10
    1076:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(Min);
    107a:	ce 01       	movw	r24, r28
    107c:	0b 96       	adiw	r24, 0x0b	; 11
    107e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
    1082:	08 c0       	rjmp	.+16     	; 0x1094 <_Z12alarmDisplayi+0xc6>
	}
	else
	{
		lcdSetCursor(1, 1);
    1084:	61 e0       	ldi	r22, 0x01	; 1
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("<<Empty Alarm>>");
    108c:	8e ea       	ldi	r24, 0xAE	; 174
    108e:	92 e0       	ldi	r25, 0x02	; 2
    1090:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
	}
}
    1094:	64 96       	adiw	r28, 0x14	; 20
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	f8 94       	cli
    109a:	de bf       	out	0x3e, r29	; 62
    109c:	0f be       	out	0x3f, r0	; 63
    109e:	cd bf       	out	0x3d, r28	; 61
    10a0:	df 91       	pop	r29
    10a2:	cf 91       	pop	r28
    10a4:	1f 91       	pop	r17
    10a6:	0f 91       	pop	r16
    10a8:	ff 90       	pop	r15
    10aa:	ef 90       	pop	r14
    10ac:	08 95       	ret

000010ae <_Z12alarmListIntv>:
	page=1;
}

void alarmListInt(){		//prints list of alarms
	
	lcdSetCursor(3, 0);
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	83 e0       	ldi	r24, 0x03	; 3
    10b2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
	lcdPrint("ALARM LIST");
    10b6:	8e eb       	ldi	r24, 0xBE	; 190
    10b8:	92 e0       	ldi	r25, 0x02	; 2
    10ba:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
	if (menuitem == 1)
    10be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	91 05       	cpc	r25, r1
    10ca:	49 f4       	brne	.+18     	; 0x10de <_Z12alarmListIntv+0x30>
	{
		alarmNo = 1;
    10cc:	81 e0       	ldi	r24, 0x01	; 1
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    10d4:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    10d8:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    10dc:	08 95       	ret
	}
	else if (menuitem == 2)
    10de:	82 30       	cpi	r24, 0x02	; 2
    10e0:	91 05       	cpc	r25, r1
    10e2:	49 f4       	brne	.+18     	; 0x10f6 <_Z12alarmListIntv+0x48>
	{
		alarmNo = 2;
    10e4:	82 e0       	ldi	r24, 0x02	; 2
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    10ec:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    10f0:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    10f4:	08 95       	ret
	}
	else if (menuitem == 3)
    10f6:	83 30       	cpi	r24, 0x03	; 3
    10f8:	91 05       	cpc	r25, r1
    10fa:	49 f4       	brne	.+18     	; 0x110e <_Z12alarmListIntv+0x60>
	{
		alarmNo = 3;
    10fc:	83 e0       	ldi	r24, 0x03	; 3
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    1104:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    1108:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    110c:	08 95       	ret
	}
	else if (menuitem == 4)
    110e:	84 30       	cpi	r24, 0x04	; 4
    1110:	91 05       	cpc	r25, r1
    1112:	49 f4       	brne	.+18     	; 0x1126 <_Z12alarmListIntv+0x78>
	{
		alarmNo = 4;
    1114:	84 e0       	ldi	r24, 0x04	; 4
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    111c:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    1120:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    1124:	08 95       	ret
	}
	else if (menuitem == 5)
    1126:	85 30       	cpi	r24, 0x05	; 5
    1128:	91 05       	cpc	r25, r1
    112a:	49 f4       	brne	.+18     	; 0x113e <_Z12alarmListIntv+0x90>
	{
		alarmNo = 5;
    112c:	85 e0       	ldi	r24, 0x05	; 5
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    1134:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    1138:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    113c:	08 95       	ret
	}
	else if (menuitem == 6)
    113e:	86 30       	cpi	r24, 0x06	; 6
    1140:	91 05       	cpc	r25, r1
    1142:	49 f4       	brne	.+18     	; 0x1156 <_Z12alarmListIntv+0xa8>
	{
		alarmNo = 6;
    1144:	86 e0       	ldi	r24, 0x06	; 6
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    114c:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    1150:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    1154:	08 95       	ret
	}
	else if (menuitem == 7)
    1156:	07 97       	sbiw	r24, 0x07	; 7
    1158:	41 f4       	brne	.+16     	; 0x116a <_Z12alarmListIntv+0xbc>
	{
		alarmNo = 7;
    115a:	87 e0       	ldi	r24, 0x07	; 7
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <alarmNo+0x1>
    1162:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <alarmNo>
		alarmDisplay(alarmNo);
    1166:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    116a:	08 95       	ret

0000116c <_Z11deleteAlarmi>:
	}
}

void deleteAlarm(int alarmNo)		//for changing alarm status (0 and 1)
{
	alarmStatus[alarmNo-1]=0;
    116c:	01 97       	sbiw	r24, 0x01	; 1
    116e:	fc 01       	movw	r30, r24
    1170:	ee 0f       	add	r30, r30
    1172:	ff 1f       	adc	r31, r31
    1174:	ed 5e       	subi	r30, 0xED	; 237
    1176:	fc 4f       	sbci	r31, 0xFC	; 252
    1178:	11 82       	std	Z+1, r1	; 0x01
    117a:	10 82       	st	Z, r1
	lcdClear();
    117c:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	lcdPrint("  Alarm Deleted ");
    1180:	89 ec       	ldi	r24, 0xC9	; 201
    1182:	92 e0       	ldi	r25, 0x02	; 2
    1184:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
    1188:	2f ef       	ldi	r18, 0xFF	; 255
    118a:	89 e6       	ldi	r24, 0x69	; 105
    118c:	98 e1       	ldi	r25, 0x18	; 24
    118e:	21 50       	subi	r18, 0x01	; 1
    1190:	80 40       	sbci	r24, 0x00	; 0
    1192:	90 40       	sbci	r25, 0x00	; 0
    1194:	e1 f7       	brne	.-8      	; 0x118e <_Z11deleteAlarmi+0x22>
    1196:	00 c0       	rjmp	.+0      	; 0x1198 <_Z11deleteAlarmi+0x2c>
    1198:	00 00       	nop
	_delay_ms(1000);
	lcdClear();
    119a:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	page = 8;
    119e:	88 e0       	ldi	r24, 0x08	; 8
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    11a6:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    11aa:	08 95       	ret

000011ac <_Z26checkIfDownButtonIsPressedv>:

	}
}
void checkIfDownButtonIsPressed()
{
	if (downButtonState != lastDownButtonState)
    11ac:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <downButtonState>
    11b0:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <downButtonState+0x1>
    11b4:	20 91 ea 02 	lds	r18, 0x02EA	; 0x8002ea <lastDownButtonState>
    11b8:	30 91 eb 02 	lds	r19, 0x02EB	; 0x8002eb <lastDownButtonState+0x1>
    11bc:	82 17       	cp	r24, r18
    11be:	93 07       	cpc	r25, r19
    11c0:	59 f0       	breq	.+22     	; 0x11d8 <_Z26checkIfDownButtonIsPressedv+0x2c>
	{
		if (downButtonState == 0)
    11c2:	89 2b       	or	r24, r25
    11c4:	19 f4       	brne	.+6      	; 0x11cc <_Z26checkIfDownButtonIsPressedv+0x20>
		{
			down = true;
    11c6:	81 e0       	ldi	r24, 0x01	; 1
    11c8:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <down>
    11cc:	8f e3       	ldi	r24, 0x3F	; 63
    11ce:	9c e9       	ldi	r25, 0x9C	; 156
    11d0:	01 97       	sbiw	r24, 0x01	; 1
    11d2:	f1 f7       	brne	.-4      	; 0x11d0 <_Z26checkIfDownButtonIsPressedv+0x24>
    11d4:	00 c0       	rjmp	.+0      	; 0x11d6 <_Z26checkIfDownButtonIsPressedv+0x2a>
    11d6:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastDownButtonState = downButtonState;
    11d8:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <downButtonState>
    11dc:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <downButtonState+0x1>
    11e0:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <lastDownButtonState+0x1>
    11e4:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <lastDownButtonState>
    11e8:	08 95       	ret

000011ea <_Z24checkIfUpButtonIsPressedv>:
}

void checkIfUpButtonIsPressed()
{
	if (upButtonState != lastUpButtonState)
    11ea:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <upButtonState>
    11ee:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <upButtonState+0x1>
    11f2:	20 91 e6 02 	lds	r18, 0x02E6	; 0x8002e6 <lastUpButtonState>
    11f6:	30 91 e7 02 	lds	r19, 0x02E7	; 0x8002e7 <lastUpButtonState+0x1>
    11fa:	82 17       	cp	r24, r18
    11fc:	93 07       	cpc	r25, r19
    11fe:	59 f0       	breq	.+22     	; 0x1216 <_Z24checkIfUpButtonIsPressedv+0x2c>
	{
		if (upButtonState == 0) {
    1200:	89 2b       	or	r24, r25
    1202:	19 f4       	brne	.+6      	; 0x120a <_Z24checkIfUpButtonIsPressedv+0x20>
			up = true;
    1204:	81 e0       	ldi	r24, 0x01	; 1
    1206:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <up>
    120a:	8f e3       	ldi	r24, 0x3F	; 63
    120c:	9c e9       	ldi	r25, 0x9C	; 156
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	f1 f7       	brne	.-4      	; 0x120e <_Z24checkIfUpButtonIsPressedv+0x24>
    1212:	00 c0       	rjmp	.+0      	; 0x1214 <_Z24checkIfUpButtonIsPressedv+0x2a>
    1214:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastUpButtonState = upButtonState;
    1216:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <upButtonState>
    121a:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <upButtonState+0x1>
    121e:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <lastUpButtonState+0x1>
    1222:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <lastUpButtonState>
    1226:	08 95       	ret

00001228 <_Z28checkIfSelectButtonIsPressedv>:
}

void checkIfSelectButtonIsPressed()
{
	if (selectButtonState != lastSelectButtonState)
    1228:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <selectButtonState>
    122c:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <selectButtonState+0x1>
    1230:	20 91 e8 02 	lds	r18, 0x02E8	; 0x8002e8 <lastSelectButtonState>
    1234:	30 91 e9 02 	lds	r19, 0x02E9	; 0x8002e9 <lastSelectButtonState+0x1>
    1238:	82 17       	cp	r24, r18
    123a:	93 07       	cpc	r25, r19
    123c:	59 f0       	breq	.+22     	; 0x1254 <_Z28checkIfSelectButtonIsPressedv+0x2c>
	{
		if (selectButtonState == 0) {
    123e:	89 2b       	or	r24, r25
    1240:	19 f4       	brne	.+6      	; 0x1248 <_Z28checkIfSelectButtonIsPressedv+0x20>
			select = true;
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <select>
    1248:	8f e3       	ldi	r24, 0x3F	; 63
    124a:	9c e9       	ldi	r25, 0x9C	; 156
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <_Z28checkIfSelectButtonIsPressedv+0x24>
    1250:	00 c0       	rjmp	.+0      	; 0x1252 <_Z28checkIfSelectButtonIsPressedv+0x2a>
    1252:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastSelectButtonState = selectButtonState;
    1254:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <selectButtonState>
    1258:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <selectButtonState+0x1>
    125c:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <lastSelectButtonState+0x1>
    1260:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <lastSelectButtonState>
    1264:	08 95       	ret

00001266 <_Z26checkIfBackButtonIsPressedv>:
}

void checkIfBackButtonIsPressed()
{
	if (backButtonState != lastBackButtonState)
    1266:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <backButtonState>
    126a:	90 91 ed 02 	lds	r25, 0x02ED	; 0x8002ed <backButtonState+0x1>
    126e:	20 91 e4 02 	lds	r18, 0x02E4	; 0x8002e4 <__data_end>
    1272:	30 91 e5 02 	lds	r19, 0x02E5	; 0x8002e5 <__data_end+0x1>
    1276:	82 17       	cp	r24, r18
    1278:	93 07       	cpc	r25, r19
    127a:	59 f0       	breq	.+22     	; 0x1292 <_Z26checkIfBackButtonIsPressedv+0x2c>
	{
		if (backButtonState == 0) {
    127c:	89 2b       	or	r24, r25
    127e:	19 f4       	brne	.+6      	; 0x1286 <_Z26checkIfBackButtonIsPressedv+0x20>
			back = true;
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <back>
    1286:	8f e3       	ldi	r24, 0x3F	; 63
    1288:	9c e9       	ldi	r25, 0x9C	; 156
    128a:	01 97       	sbiw	r24, 0x01	; 1
    128c:	f1 f7       	brne	.-4      	; 0x128a <_Z26checkIfBackButtonIsPressedv+0x24>
    128e:	00 c0       	rjmp	.+0      	; 0x1290 <_Z26checkIfBackButtonIsPressedv+0x2a>
    1290:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastBackButtonState = backButtonState;
    1292:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <backButtonState>
    1296:	90 91 ed 02 	lds	r25, 0x02ED	; 0x8002ed <backButtonState+0x1>
    129a:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <__data_end+0x1>
    129e:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <__data_end>
    12a2:	08 95       	ret

000012a4 <_Z8drawMenuv>:
}

void drawMenu()
{
	switch(page){
    12a4:	e0 91 f8 02 	lds	r30, 0x02F8	; 0x8002f8 <page>
    12a8:	f0 91 f9 02 	lds	r31, 0x02F9	; 0x8002f9 <page+0x1>
    12ac:	ed 30       	cpi	r30, 0x0D	; 13
    12ae:	f1 05       	cpc	r31, r1
    12b0:	78 f5       	brcc	.+94     	; 0x1310 <_Z8drawMenuv+0x6c>
    12b2:	ec 5c       	subi	r30, 0xCC	; 204
    12b4:	ff 4f       	sbci	r31, 0xFF	; 255
    12b6:	0c 94 a5 0e 	jmp	0x1d4a	; 0x1d4a <__tablejump2__>
		case 0:
		timeDisplayInt();
    12ba:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <_Z14timeDisplayIntv>
		break;
    12be:	08 95       	ret
		case 1:
		mainMenuInt();
    12c0:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_Z11mainMenuIntv>
		break;
    12c4:	08 95       	ret
		case 2:
		dateTimeSetInt();
    12c6:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <_Z14dateTimeSetIntv>
		break;
    12ca:	08 95       	ret
		case 3:
		alarmMenuInt();
    12cc:	0e 94 ac 02 	call	0x558	; 0x558 <_Z12alarmMenuIntv>
		break;
    12d0:	08 95       	ret
		case 4:
		settingMenuInt();
    12d2:	0e 94 cf 02 	call	0x59e	; 0x59e <_Z14settingMenuIntv>
		break;
    12d6:	08 95       	ret
		case 5:
		volumeInt();
    12d8:	0e 94 fe 02 	call	0x5fc	; 0x5fc <_Z9volumeIntv>
		break;
    12dc:	08 95       	ret
		case 6:
		contrastInt();
    12de:	0e 94 2b 03 	call	0x656	; 0x656 <_Z11contrastIntv>
		break;
    12e2:	08 95       	ret
		
		case 8:
		alarmListInt();
    12e4:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z12alarmListIntv>
		break;
    12e8:	08 95       	ret
		case 9:
		alarmTonesInt();
    12ea:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_Z13alarmTonesIntv>
		break;
    12ee:	08 95       	ret
		case 10:
		alarmSettingInt();
    12f0:	0e 94 9f 03 	call	0x73e	; 0x73e <_Z15alarmSettingIntv>
		break;
    12f4:	08 95       	ret
		case 11:
		editAlarmInt(alarmNo);
    12f6:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <alarmNo>
    12fa:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <alarmNo+0x1>
    12fe:	0e 94 82 06 	call	0xd04	; 0xd04 <_Z12editAlarmInti>
		break;
    1302:	08 95       	ret
		case 12:
		deleteAlarm(alarmNo);
    1304:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <alarmNo>
    1308:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <alarmNo+0x1>
    130c:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z11deleteAlarmi>
    1310:	08 95       	ret

00001312 <main>:
void checkIfSelectButtonIsPressed();
void checkIfBackButtonIsPressed();


int main(void)
{
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	00 d0       	rcall	.+0      	; 0x1318 <main+0x6>
    1318:	00 d0       	rcall	.+0      	; 0x131a <main+0x8>
    131a:	00 d0       	rcall	.+0      	; 0x131c <main+0xa>
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
	
	DDRD = 0x01; //Set PORTD 4,5,6,7 pins as input pins & Set PORTD0 pin as output
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	8a b9       	out	0x0a, r24	; 10
    PORTD = 0xF0; //Set PD0, PD1, PD6, PD7 to INPUT PULL_UP and LOW pin0
    1324:	80 ef       	ldi	r24, 0xF0	; 240
    1326:	8b b9       	out	0x0b, r24	; 11
	DDRB = 0xFF; // Set all PORTB as output
    1328:	8f ef       	ldi	r24, 0xFF	; 255
    132a:	84 b9       	out	0x04, r24	; 4
	//clearBit(PORTD,0);   //Turn backlight off 
	lcdInit();
    132c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_Z7lcdInitv>
	
	
    while (1) 
    {
		
		drawMenu();
    1330:	0e 94 52 09 	call	0x12a4	; 0x12a4 <_Z8drawMenuv>

		downButtonState = digitalRead(7);
    1334:	87 e0       	ldi	r24, 0x07	; 7
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    133c:	90 93 f3 02 	sts	0x02F3, r25	; 0x8002f3 <downButtonState+0x1>
    1340:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <downButtonState>
		selectButtonState = digitalRead(6);
    1344:	86 e0       	ldi	r24, 0x06	; 6
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    134c:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <selectButtonState+0x1>
    1350:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <selectButtonState>
		upButtonState =   digitalRead(5);
    1354:	85 e0       	ldi	r24, 0x05	; 5
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    135c:	90 93 f1 02 	sts	0x02F1, r25	; 0x8002f1 <upButtonState+0x1>
    1360:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <upButtonState>
		backButtonState =   digitalRead(4);
    1364:	84 e0       	ldi	r24, 0x04	; 4
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    136c:	90 93 ed 02 	sts	0x02ED, r25	; 0x8002ed <backButtonState+0x1>
    1370:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <backButtonState>

		checkIfDownButtonIsPressed();
    1374:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_Z26checkIfDownButtonIsPressedv>
		checkIfUpButtonIsPressed();
    1378:	0e 94 f5 08 	call	0x11ea	; 0x11ea <_Z24checkIfUpButtonIsPressedv>
		checkIfSelectButtonIsPressed();
    137c:	0e 94 14 09 	call	0x1228	; 0x1228 <_Z28checkIfSelectButtonIsPressedv>
		checkIfBackButtonIsPressed();
    1380:	0e 94 33 09 	call	0x1266	; 0x1266 <_Z26checkIfBackButtonIsPressedv>
		char n[6];
		sprintf(n,"%02x%02x",(hor),(min));
    1384:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <min+0x1>
    1388:	8f 93       	push	r24
    138a:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <min>
    138e:	8f 93       	push	r24
    1390:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <hor+0x1>
    1394:	8f 93       	push	r24
    1396:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <hor>
    139a:	8f 93       	push	r24
    139c:	8a ed       	ldi	r24, 0xDA	; 218
    139e:	92 e0       	ldi	r25, 0x02	; 2
    13a0:	9f 93       	push	r25
    13a2:	8f 93       	push	r24
    13a4:	ce 01       	movw	r24, r28
    13a6:	01 96       	adiw	r24, 0x01	; 1
    13a8:	9f 93       	push	r25
    13aa:	8f 93       	push	r24
    13ac:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <sprintf>
    13b0:	0f b6       	in	r0, 0x3f	; 63
    13b2:	f8 94       	cli
    13b4:	de bf       	out	0x3e, r29	; 62
    13b6:	0f be       	out	0x3f, r0	; 63
    13b8:	cd bf       	out	0x3d, r28	; 61
		for (int i = 0; i <= alarmNo;i++){
    13ba:	00 e0       	ldi	r16, 0x00	; 0
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <alarmNo>
    13c2:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <alarmNo+0x1>
    13c6:	80 17       	cp	r24, r16
    13c8:	91 07       	cpc	r25, r17
    13ca:	9c f1       	brlt	.+102    	; 0x1432 <main+0x120>
			if ((alarmHoursList[i]==atoi(n)/100) && (alarmMinsList[i]==atoi(n)%100)){
    13cc:	f8 01       	movw	r30, r16
    13ce:	ee 0f       	add	r30, r30
    13d0:	ff 1f       	adc	r31, r31
    13d2:	e1 5d       	subi	r30, 0xD1	; 209
    13d4:	fc 4f       	sbci	r31, 0xFC	; 252
    13d6:	e0 80       	ld	r14, Z
    13d8:	f1 80       	ldd	r15, Z+1	; 0x01
    13da:	ce 01       	movw	r24, r28
    13dc:	01 96       	adiw	r24, 0x01	; 1
    13de:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <atoi>
    13e2:	9c 01       	movw	r18, r24
    13e4:	64 e6       	ldi	r22, 0x64	; 100
    13e6:	70 e0       	ldi	r23, 0x00	; 0
    13e8:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
    13ec:	e6 16       	cp	r14, r22
    13ee:	f7 06       	cpc	r15, r23
    13f0:	e1 f4       	brne	.+56     	; 0x142a <main+0x118>
    13f2:	f8 01       	movw	r30, r16
    13f4:	ee 0f       	add	r30, r30
    13f6:	ff 1f       	adc	r31, r31
    13f8:	ef 5d       	subi	r30, 0xDF	; 223
    13fa:	fc 4f       	sbci	r31, 0xFC	; 252
    13fc:	01 90       	ld	r0, Z+
    13fe:	f0 81       	ld	r31, Z
    1400:	e0 2d       	mov	r30, r0
    1402:	c9 01       	movw	r24, r18
    1404:	64 e6       	ldi	r22, 0x64	; 100
    1406:	70 e0       	ldi	r23, 0x00	; 0
    1408:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__divmodhi4>
    140c:	e8 17       	cp	r30, r24
    140e:	f9 07       	cpc	r31, r25
    1410:	61 f4       	brne	.+24     	; 0x142a <main+0x118>
				PORTC=(1<<PORTC3);
    1412:	88 e0       	ldi	r24, 0x08	; 8
    1414:	88 b9       	out	0x08, r24	; 8
    1416:	9f ef       	ldi	r25, 0xFF	; 255
    1418:	20 e7       	ldi	r18, 0x70	; 112
    141a:	82 e0       	ldi	r24, 0x02	; 2
    141c:	91 50       	subi	r25, 0x01	; 1
    141e:	20 40       	sbci	r18, 0x00	; 0
    1420:	80 40       	sbci	r24, 0x00	; 0
    1422:	e1 f7       	brne	.-8      	; 0x141c <main+0x10a>
    1424:	00 c0       	rjmp	.+0      	; 0x1426 <main+0x114>
    1426:	00 00       	nop
    1428:	01 c0       	rjmp	.+2      	; 0x142c <main+0x11a>
				_delay_ms(100);
			}
			else{
				PORTC=(0<<PORTC3);
    142a:	18 b8       	out	0x08, r1	; 8
		checkIfUpButtonIsPressed();
		checkIfSelectButtonIsPressed();
		checkIfBackButtonIsPressed();
		char n[6];
		sprintf(n,"%02x%02x",(hor),(min));
		for (int i = 0; i <= alarmNo;i++){
    142c:	0f 5f       	subi	r16, 0xFF	; 255
    142e:	1f 4f       	sbci	r17, 0xFF	; 255
    1430:	c6 cf       	rjmp	.-116    	; 0x13be <main+0xac>
				PORTC=(0<<PORTC3);
			}
		}

        // --------------------------------UP button functions------------------------------------------------------------------
 		if (up && page == 1 ) {
    1432:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <up>
    1436:	88 23       	and	r24, r24
    1438:	49 f0       	breq	.+18     	; 0x144c <main+0x13a>
    143a:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    143e:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1442:	21 30       	cpi	r18, 0x01	; 1
    1444:	31 05       	cpc	r19, r1
    1446:	19 f0       	breq	.+6      	; 0x144e <main+0x13c>
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	01 c0       	rjmp	.+2      	; 0x144e <main+0x13c>
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	88 23       	and	r24, r24
    1450:	c9 f0       	breq	.+50     	; 0x1484 <main+0x172>
			up = false;
    1452:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    1456:	82 e0       	ldi	r24, 0x02	; 2
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    145e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1462:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1466:	01 97       	sbiw	r24, 0x01	; 1
    1468:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    146c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0){
    1470:	89 2b       	or	r24, r25
    1472:	09 f0       	breq	.+2      	; 0x1476 <main+0x164>
    1474:	14 c1       	rjmp	.+552    	; 0x169e <main+0x38c>
				menuitem = 3;
    1476:	83 e0       	ldi	r24, 0x03	; 3
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    147e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1482:	0d c1       	rjmp	.+538    	; 0x169e <main+0x38c>
			}
		 }
		else if (up && page == 2 ) {
    1484:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    1488:	99 23       	and	r25, r25
    148a:	41 f0       	breq	.+16     	; 0x149c <main+0x18a>
    148c:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1490:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1494:	22 30       	cpi	r18, 0x02	; 2
    1496:	31 05       	cpc	r19, r1
    1498:	09 f4       	brne	.+2      	; 0x149c <main+0x18a>
    149a:	89 2f       	mov	r24, r25
    149c:	88 23       	and	r24, r24
    149e:	19 f0       	breq	.+6      	; 0x14a6 <main+0x194>
			up = false;
    14a0:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
    14a4:	fc c0       	rjmp	.+504    	; 0x169e <main+0x38c>
		}
	    else if (up && page == 3 ) {
    14a6:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    14aa:	99 23       	and	r25, r25
    14ac:	41 f0       	breq	.+16     	; 0x14be <main+0x1ac>
    14ae:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    14b2:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    14b6:	23 30       	cpi	r18, 0x03	; 3
    14b8:	31 05       	cpc	r19, r1
    14ba:	09 f4       	brne	.+2      	; 0x14be <main+0x1ac>
    14bc:	89 2f       	mov	r24, r25
    14be:	88 23       	and	r24, r24
    14c0:	c9 f0       	breq	.+50     	; 0x14f4 <main+0x1e2>
			up = false;
    14c2:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    14c6:	82 e0       	ldi	r24, 0x02	; 2
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    14ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14d6:	01 97       	sbiw	r24, 0x01	; 1
    14d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14dc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    14e0:	89 2b       	or	r24, r25
    14e2:	09 f0       	breq	.+2      	; 0x14e6 <main+0x1d4>
    14e4:	dc c0       	rjmp	.+440    	; 0x169e <main+0x38c>
			{
				menuitem = 2;
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    14f2:	d5 c0       	rjmp	.+426    	; 0x169e <main+0x38c>
			}
		}
		
		else if (up && page == 4 ) {
    14f4:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    14f8:	99 23       	and	r25, r25
    14fa:	41 f0       	breq	.+16     	; 0x150c <main+0x1fa>
    14fc:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1500:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1504:	24 30       	cpi	r18, 0x04	; 4
    1506:	31 05       	cpc	r19, r1
    1508:	09 f4       	brne	.+2      	; 0x150c <main+0x1fa>
    150a:	89 2f       	mov	r24, r25
    150c:	88 23       	and	r24, r24
    150e:	c9 f0       	breq	.+50     	; 0x1542 <main+0x230>
			up = false;
    1510:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    1514:	82 e0       	ldi	r24, 0x02	; 2
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    151c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1520:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1524:	01 97       	sbiw	r24, 0x01	; 1
    1526:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    152a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    152e:	89 2b       	or	r24, r25
    1530:	09 f0       	breq	.+2      	; 0x1534 <main+0x222>
    1532:	b5 c0       	rjmp	.+362    	; 0x169e <main+0x38c>
			{
				menuitem = 3;
    1534:	83 e0       	ldi	r24, 0x03	; 3
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    153c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1540:	ae c0       	rjmp	.+348    	; 0x169e <main+0x38c>
			}
		}
		else if (down && page == 5 ) {
    1542:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    1546:	99 23       	and	r25, r25
    1548:	41 f0       	breq	.+16     	; 0x155a <main+0x248>
    154a:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    154e:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1552:	25 30       	cpi	r18, 0x05	; 5
    1554:	31 05       	cpc	r19, r1
    1556:	09 f4       	brne	.+2      	; 0x155a <main+0x248>
    1558:	89 2f       	mov	r24, r25
    155a:	88 23       	and	r24, r24
    155c:	81 f0       	breq	.+32     	; 0x157e <main+0x26c>
			down = false;
    155e:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    1562:	82 e0       	ldi	r24, 0x02	; 2
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			volume++;
    156a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
    156e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
    1572:	01 96       	adiw	r24, 0x01	; 1
    1574:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
    1578:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
    157c:	90 c0       	rjmp	.+288    	; 0x169e <main+0x38c>
		}
		else if (up && page == 6 ) {
    157e:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    1582:	99 23       	and	r25, r25
    1584:	41 f0       	breq	.+16     	; 0x1596 <main+0x284>
    1586:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    158a:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    158e:	26 30       	cpi	r18, 0x06	; 6
    1590:	31 05       	cpc	r19, r1
    1592:	09 f4       	brne	.+2      	; 0x1596 <main+0x284>
    1594:	89 2f       	mov	r24, r25
    1596:	88 23       	and	r24, r24
    1598:	81 f0       	breq	.+32     	; 0x15ba <main+0x2a8>
			up = false;
    159a:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    159e:	82 e0       	ldi	r24, 0x02	; 2
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			contrast--;
    15a6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
    15aa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
    15ae:	01 97       	sbiw	r24, 0x01	; 1
    15b0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
    15b4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
    15b8:	72 c0       	rjmp	.+228    	; 0x169e <main+0x38c>
			//setContrast();
		}
		else if (up && page == 8 ) {
    15ba:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    15be:	99 23       	and	r25, r25
    15c0:	41 f0       	breq	.+16     	; 0x15d2 <main+0x2c0>
    15c2:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    15c6:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    15ca:	28 30       	cpi	r18, 0x08	; 8
    15cc:	31 05       	cpc	r19, r1
    15ce:	09 f4       	brne	.+2      	; 0x15d2 <main+0x2c0>
    15d0:	89 2f       	mov	r24, r25
    15d2:	88 23       	and	r24, r24
    15d4:	c9 f0       	breq	.+50     	; 0x1608 <main+0x2f6>
			up = false;
    15d6:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    15da:	82 e0       	ldi	r24, 0x02	; 2
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    15e2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15e6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15ea:	01 97       	sbiw	r24, 0x01	; 1
    15ec:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15f0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    15f4:	89 2b       	or	r24, r25
    15f6:	09 f0       	breq	.+2      	; 0x15fa <main+0x2e8>
    15f8:	52 c0       	rjmp	.+164    	; 0x169e <main+0x38c>
			{
				menuitem = 7;
    15fa:	87 e0       	ldi	r24, 0x07	; 7
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1602:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1606:	4b c0       	rjmp	.+150    	; 0x169e <main+0x38c>
			}
		}
		else if (up && page == 9 ) {
    1608:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    160c:	99 23       	and	r25, r25
    160e:	41 f0       	breq	.+16     	; 0x1620 <main+0x30e>
    1610:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1614:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1618:	29 30       	cpi	r18, 0x09	; 9
    161a:	31 05       	cpc	r19, r1
    161c:	09 f4       	brne	.+2      	; 0x1620 <main+0x30e>
    161e:	89 2f       	mov	r24, r25
    1620:	88 23       	and	r24, r24
    1622:	c1 f0       	breq	.+48     	; 0x1654 <main+0x342>
			up = false;
    1624:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    1628:	82 e0       	ldi	r24, 0x02	; 2
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    1630:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1634:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1638:	01 97       	sbiw	r24, 0x01	; 1
    163a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    163e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    1642:	89 2b       	or	r24, r25
    1644:	61 f5       	brne	.+88     	; 0x169e <main+0x38c>
			{
				menuitem = 5;
    1646:	85 e0       	ldi	r24, 0x05	; 5
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    164e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1652:	25 c0       	rjmp	.+74     	; 0x169e <main+0x38c>
			}
		}
		else if (up && page == 10 ) {
    1654:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    1658:	99 23       	and	r25, r25
    165a:	41 f0       	breq	.+16     	; 0x166c <main+0x35a>
    165c:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1660:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1664:	2a 30       	cpi	r18, 0x0A	; 10
    1666:	31 05       	cpc	r19, r1
    1668:	09 f4       	brne	.+2      	; 0x166c <main+0x35a>
    166a:	89 2f       	mov	r24, r25
    166c:	88 23       	and	r24, r24
    166e:	b9 f0       	breq	.+46     	; 0x169e <main+0x38c>
			up = false;
    1670:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    1674:	82 e0       	ldi	r24, 0x02	; 2
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    167c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1680:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1684:	01 97       	sbiw	r24, 0x01	; 1
    1686:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    168a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    168e:	89 2b       	or	r24, r25
    1690:	31 f4       	brne	.+12     	; 0x169e <main+0x38c>
			{
				menuitem = 2;
    1692:	82 e0       	ldi	r24, 0x02	; 2
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    169a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
		}


        //-------------------------------------- DOWN button functions------------------------------------------------------
		if (down && page == 1) {
    169e:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <down>
    16a2:	88 23       	and	r24, r24
    16a4:	49 f0       	breq	.+18     	; 0x16b8 <main+0x3a6>
    16a6:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    16aa:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    16ae:	21 30       	cpi	r18, 0x01	; 1
    16b0:	31 05       	cpc	r19, r1
    16b2:	19 f0       	breq	.+6      	; 0x16ba <main+0x3a8>
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	01 c0       	rjmp	.+2      	; 0x16ba <main+0x3a8>
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	88 23       	and	r24, r24
    16bc:	c9 f0       	breq	.+50     	; 0x16f0 <main+0x3de>
			down = false;
    16be:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    16c2:	82 e0       	ldi	r24, 0x02	; 2
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    16ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16ce:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16d2:	01 96       	adiw	r24, 0x01	; 1
    16d4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 4)
    16dc:	04 97       	sbiw	r24, 0x04	; 4
    16de:	09 f0       	breq	.+2      	; 0x16e2 <main+0x3d0>
    16e0:	14 c1       	rjmp	.+552    	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16ea:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    16ee:	0d c1       	rjmp	.+538    	; 0x190a <main+0x5f8>
			}
		}
		else if (down && page == 2) {
    16f0:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    16f4:	99 23       	and	r25, r25
    16f6:	41 f0       	breq	.+16     	; 0x1708 <main+0x3f6>
    16f8:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    16fc:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1700:	22 30       	cpi	r18, 0x02	; 2
    1702:	31 05       	cpc	r19, r1
    1704:	09 f4       	brne	.+2      	; 0x1708 <main+0x3f6>
    1706:	89 2f       	mov	r24, r25
    1708:	88 23       	and	r24, r24
    170a:	19 f0       	breq	.+6      	; 0x1712 <main+0x400>
			down = false;
    170c:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
    1710:	fc c0       	rjmp	.+504    	; 0x190a <main+0x5f8>
		}
		else if (down && page == 3) {
    1712:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    1716:	99 23       	and	r25, r25
    1718:	41 f0       	breq	.+16     	; 0x172a <main+0x418>
    171a:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    171e:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1722:	23 30       	cpi	r18, 0x03	; 3
    1724:	31 05       	cpc	r19, r1
    1726:	09 f4       	brne	.+2      	; 0x172a <main+0x418>
    1728:	89 2f       	mov	r24, r25
    172a:	88 23       	and	r24, r24
    172c:	c9 f0       	breq	.+50     	; 0x1760 <main+0x44e>
			down = false;
    172e:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    1732:	82 e0       	ldi	r24, 0x02	; 2
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    173a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    173e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1742:	01 96       	adiw	r24, 0x01	; 1
    1744:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1748:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 3)
    174c:	03 97       	sbiw	r24, 0x03	; 3
    174e:	09 f0       	breq	.+2      	; 0x1752 <main+0x440>
    1750:	dc c0       	rjmp	.+440    	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    1752:	81 e0       	ldi	r24, 0x01	; 1
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    175a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    175e:	d5 c0       	rjmp	.+426    	; 0x190a <main+0x5f8>
			}
		}
		else if (down && page == 4) {
    1760:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    1764:	99 23       	and	r25, r25
    1766:	41 f0       	breq	.+16     	; 0x1778 <main+0x466>
    1768:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    176c:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1770:	24 30       	cpi	r18, 0x04	; 4
    1772:	31 05       	cpc	r19, r1
    1774:	09 f4       	brne	.+2      	; 0x1778 <main+0x466>
    1776:	89 2f       	mov	r24, r25
    1778:	88 23       	and	r24, r24
    177a:	c9 f0       	breq	.+50     	; 0x17ae <main+0x49c>
			down = false;
    177c:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    1780:	82 e0       	ldi	r24, 0x02	; 2
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    1788:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    178c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1790:	01 96       	adiw	r24, 0x01	; 1
    1792:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1796:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 4)
    179a:	04 97       	sbiw	r24, 0x04	; 4
    179c:	09 f0       	breq	.+2      	; 0x17a0 <main+0x48e>
    179e:	b5 c0       	rjmp	.+362    	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    17ac:	ae c0       	rjmp	.+348    	; 0x190a <main+0x5f8>
			}
		}

		else if (up && page == 5 ) {
    17ae:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <up>
    17b2:	99 23       	and	r25, r25
    17b4:	41 f0       	breq	.+16     	; 0x17c6 <main+0x4b4>
    17b6:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    17ba:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    17be:	25 30       	cpi	r18, 0x05	; 5
    17c0:	31 05       	cpc	r19, r1
    17c2:	09 f4       	brne	.+2      	; 0x17c6 <main+0x4b4>
    17c4:	89 2f       	mov	r24, r25
    17c6:	88 23       	and	r24, r24
    17c8:	81 f0       	breq	.+32     	; 0x17ea <main+0x4d8>
			up = false;
    17ca:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <up>
			lcdClearLine(2);
    17ce:	82 e0       	ldi	r24, 0x02	; 2
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			volume--;
    17d6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
    17da:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
    17de:	01 97       	sbiw	r24, 0x01	; 1
    17e0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
    17e4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
    17e8:	90 c0       	rjmp	.+288    	; 0x190a <main+0x5f8>
		}
		
		else if (down && page == 6 ) {
    17ea:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    17ee:	99 23       	and	r25, r25
    17f0:	41 f0       	breq	.+16     	; 0x1802 <main+0x4f0>
    17f2:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    17f6:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    17fa:	26 30       	cpi	r18, 0x06	; 6
    17fc:	31 05       	cpc	r19, r1
    17fe:	09 f4       	brne	.+2      	; 0x1802 <main+0x4f0>
    1800:	89 2f       	mov	r24, r25
    1802:	88 23       	and	r24, r24
    1804:	81 f0       	breq	.+32     	; 0x1826 <main+0x514>
			down = false;
    1806:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    180a:	82 e0       	ldi	r24, 0x02	; 2
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			contrast++;
    1812:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
    1816:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
    181a:	01 96       	adiw	r24, 0x01	; 1
    181c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
    1820:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
    1824:	72 c0       	rjmp	.+228    	; 0x190a <main+0x5f8>
			//setContrast();
		}

		else if (down && page == 8) {
    1826:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    182a:	99 23       	and	r25, r25
    182c:	41 f0       	breq	.+16     	; 0x183e <main+0x52c>
    182e:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1832:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1836:	28 30       	cpi	r18, 0x08	; 8
    1838:	31 05       	cpc	r19, r1
    183a:	09 f4       	brne	.+2      	; 0x183e <main+0x52c>
    183c:	89 2f       	mov	r24, r25
    183e:	88 23       	and	r24, r24
    1840:	c9 f0       	breq	.+50     	; 0x1874 <main+0x562>
			down = false;
    1842:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    1846:	82 e0       	ldi	r24, 0x02	; 2
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    184e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1852:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1856:	01 96       	adiw	r24, 0x01	; 1
    1858:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    185c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 8)
    1860:	08 97       	sbiw	r24, 0x08	; 8
    1862:	09 f0       	breq	.+2      	; 0x1866 <main+0x554>
    1864:	52 c0       	rjmp	.+164    	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    186e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1872:	4b c0       	rjmp	.+150    	; 0x190a <main+0x5f8>
			}
		}

		else if (down && page == 9) {
    1874:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    1878:	99 23       	and	r25, r25
    187a:	41 f0       	breq	.+16     	; 0x188c <main+0x57a>
    187c:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    1880:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    1884:	29 30       	cpi	r18, 0x09	; 9
    1886:	31 05       	cpc	r19, r1
    1888:	09 f4       	brne	.+2      	; 0x188c <main+0x57a>
    188a:	89 2f       	mov	r24, r25
    188c:	88 23       	and	r24, r24
    188e:	c1 f0       	breq	.+48     	; 0x18c0 <main+0x5ae>
			down = false;
    1890:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    1894:	82 e0       	ldi	r24, 0x02	; 2
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    189c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18a0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 6)
    18ae:	06 97       	sbiw	r24, 0x06	; 6
    18b0:	61 f5       	brne	.+88     	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    18b2:	81 e0       	ldi	r24, 0x01	; 1
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18ba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    18be:	25 c0       	rjmp	.+74     	; 0x190a <main+0x5f8>
			}
		}
		else if (down && page == 10 ) {
    18c0:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <down>
    18c4:	99 23       	and	r25, r25
    18c6:	41 f0       	breq	.+16     	; 0x18d8 <main+0x5c6>
    18c8:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <page>
    18cc:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <page+0x1>
    18d0:	2a 30       	cpi	r18, 0x0A	; 10
    18d2:	31 05       	cpc	r19, r1
    18d4:	09 f4       	brne	.+2      	; 0x18d8 <main+0x5c6>
    18d6:	89 2f       	mov	r24, r25
    18d8:	88 23       	and	r24, r24
    18da:	b9 f0       	breq	.+46     	; 0x190a <main+0x5f8>
			down = false;
    18dc:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <down>
			lcdClearLine(2);
    18e0:	82 e0       	ldi	r24, 0x02	; 2
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    18e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18f0:	01 96       	adiw	r24, 0x01	; 1
    18f2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18f6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 3)
    18fa:	03 97       	sbiw	r24, 0x03	; 3
    18fc:	31 f4       	brne	.+12     	; 0x190a <main+0x5f8>
			{
				menuitem = 1;
    18fe:	81 e0       	ldi	r24, 0x01	; 1
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1906:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>


		

        //---------------------------------------------SELECT button functions---------------------------------------
		if (select) {
    190a:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <select>
    190e:	88 23       	and	r24, r24
    1910:	09 f4       	brne	.+2      	; 0x1914 <main+0x602>
    1912:	3c c1       	rjmp	.+632    	; 0x1b8c <main+0x87a>
			select = false;
    1914:	10 92 f5 02 	sts	0x02F5, r1	; 0x8002f5 <select>

			if (page == 0)
    1918:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <page>
    191c:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <page+0x1>
    1920:	00 97       	sbiw	r24, 0x00	; 0
    1922:	69 f4       	brne	.+26     	; 0x193e <main+0x62c>
			{
				lcdClear();
    1924:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1930:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1934:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1938:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    193c:	27 c1       	rjmp	.+590    	; 0x1b8c <main+0x87a>
				
			}
			else if (page == 1 && menuitem == 1)
    193e:	81 30       	cpi	r24, 0x01	; 1
    1940:	91 05       	cpc	r25, r1
    1942:	b1 f4       	brne	.+44     	; 0x1970 <main+0x65e>
    1944:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1948:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    194c:	21 30       	cpi	r18, 0x01	; 1
    194e:	31 05       	cpc	r19, r1
    1950:	79 f4       	brne	.+30     	; 0x1970 <main+0x65e>
			{
				lcdClear();
    1952:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1956:	83 e0       	ldi	r24, 0x03	; 3
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    195e:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    196a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    196e:	0e c1       	rjmp	.+540    	; 0x1b8c <main+0x87a>
			}
			else if (page == 1 && menuitem == 2)
    1970:	81 30       	cpi	r24, 0x01	; 1
    1972:	91 05       	cpc	r25, r1
    1974:	81 f4       	brne	.+32     	; 0x1996 <main+0x684>
    1976:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    197a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    197e:	22 30       	cpi	r18, 0x02	; 2
    1980:	31 05       	cpc	r19, r1
    1982:	49 f4       	brne	.+18     	; 0x1996 <main+0x684>
			{
				lcdClear();
    1984:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 2;
    1988:	82 e0       	ldi	r24, 0x02	; 2
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1990:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    1994:	fb c0       	rjmp	.+502    	; 0x1b8c <main+0x87a>
			}

			else if (page == 1 && menuitem == 3)
    1996:	81 30       	cpi	r24, 0x01	; 1
    1998:	91 05       	cpc	r25, r1
    199a:	b1 f4       	brne	.+44     	; 0x19c8 <main+0x6b6>
    199c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19a0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19a4:	23 30       	cpi	r18, 0x03	; 3
    19a6:	31 05       	cpc	r19, r1
    19a8:	79 f4       	brne	.+30     	; 0x19c8 <main+0x6b6>
			{
				lcdClear();
    19aa:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    19ae:	84 e0       	ldi	r24, 0x04	; 4
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    19b6:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    19ba:	81 e0       	ldi	r24, 0x01	; 1
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    19c6:	e2 c0       	rjmp	.+452    	; 0x1b8c <main+0x87a>

			}

			
			else if (page == 2)
    19c8:	82 30       	cpi	r24, 0x02	; 2
    19ca:	91 05       	cpc	r25, r1
    19cc:	49 f4       	brne	.+18     	; 0x19e0 <main+0x6ce>
			{
				lcdClear();
    19ce:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    19da:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    19de:	d6 c0       	rjmp	.+428    	; 0x1b8c <main+0x87a>
// 			else if (page == 3 && menuitem == 1)
// 			{
// 				lcdClear();
// 				page = 7;
// 			}
			else if (page == 3 && menuitem == 1)
    19e0:	83 30       	cpi	r24, 0x03	; 3
    19e2:	91 05       	cpc	r25, r1
    19e4:	b1 f4       	brne	.+44     	; 0x1a12 <main+0x700>
    19e6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19ea:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19ee:	21 30       	cpi	r18, 0x01	; 1
    19f0:	31 05       	cpc	r19, r1
    19f2:	79 f4       	brne	.+30     	; 0x1a12 <main+0x700>
			{
				lcdClear();
    19f4:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 8;
    19f8:	88 e0       	ldi	r24, 0x08	; 8
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1a00:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1a04:	81 e0       	ldi	r24, 0x01	; 1
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a0c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a10:	bd c0       	rjmp	.+378    	; 0x1b8c <main+0x87a>
			}
			else if (page == 3 && menuitem == 2)
    1a12:	83 30       	cpi	r24, 0x03	; 3
    1a14:	91 05       	cpc	r25, r1
    1a16:	b1 f4       	brne	.+44     	; 0x1a44 <main+0x732>
    1a18:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a1c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a20:	22 30       	cpi	r18, 0x02	; 2
    1a22:	31 05       	cpc	r19, r1
    1a24:	79 f4       	brne	.+30     	; 0x1a44 <main+0x732>
			{
				lcdClear();
    1a26:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 9;
    1a2a:	89 e0       	ldi	r24, 0x09	; 9
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1a32:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1a36:	81 e0       	ldi	r24, 0x01	; 1
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a3e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a42:	a4 c0       	rjmp	.+328    	; 0x1b8c <main+0x87a>
			}
			else if (page == 4 && menuitem == 1)
    1a44:	84 30       	cpi	r24, 0x04	; 4
    1a46:	91 05       	cpc	r25, r1
    1a48:	81 f4       	brne	.+32     	; 0x1a6a <main+0x758>
    1a4a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a4e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a52:	21 30       	cpi	r18, 0x01	; 1
    1a54:	31 05       	cpc	r19, r1
    1a56:	49 f4       	brne	.+18     	; 0x1a6a <main+0x758>
			{
				lcdClear();
    1a58:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 5;
    1a5c:	85 e0       	ldi	r24, 0x05	; 5
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1a64:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    1a68:	91 c0       	rjmp	.+290    	; 0x1b8c <main+0x87a>
			}
			else if (page == 4 && menuitem == 2)
    1a6a:	84 30       	cpi	r24, 0x04	; 4
    1a6c:	91 05       	cpc	r25, r1
    1a6e:	81 f4       	brne	.+32     	; 0x1a90 <main+0x77e>
    1a70:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a74:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a78:	22 30       	cpi	r18, 0x02	; 2
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	49 f4       	brne	.+18     	; 0x1a90 <main+0x77e>
			{
				lcdClear();
    1a7e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 6;
    1a82:	86 e0       	ldi	r24, 0x06	; 6
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1a8a:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    1a8e:	7e c0       	rjmp	.+252    	; 0x1b8c <main+0x87a>
			}
			else if (page == 4 && menuitem == 3)
    1a90:	84 30       	cpi	r24, 0x04	; 4
    1a92:	91 05       	cpc	r25, r1
    1a94:	51 f4       	brne	.+20     	; 0x1aaa <main+0x798>
    1a96:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a9a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a9e:	23 30       	cpi	r18, 0x03	; 3
    1aa0:	31 05       	cpc	r19, r1
    1aa2:	19 f4       	brne	.+6      	; 0x1aaa <main+0x798>
			{
				resetDefaults();
    1aa4:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z13resetDefaultsv>
    1aa8:	71 c0       	rjmp	.+226    	; 0x1b8c <main+0x87a>
			}
			else if (page == 5)
    1aaa:	85 30       	cpi	r24, 0x05	; 5
    1aac:	91 05       	cpc	r25, r1
    1aae:	79 f4       	brne	.+30     	; 0x1ace <main+0x7bc>
			{
				lcdClear();
    1ab0:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1ab4:	84 e0       	ldi	r24, 0x04	; 4
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1abc:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ac8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1acc:	5f c0       	rjmp	.+190    	; 0x1b8c <main+0x87a>
			}
			else if (page == 6)
    1ace:	86 30       	cpi	r24, 0x06	; 6
    1ad0:	91 05       	cpc	r25, r1
    1ad2:	79 f4       	brne	.+30     	; 0x1af2 <main+0x7e0>
			{
				lcdClear();
    1ad4:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1ad8:	84 e0       	ldi	r24, 0x04	; 4
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1ae0:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 2;
    1ae4:	82 e0       	ldi	r24, 0x02	; 2
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1af0:	4d c0       	rjmp	.+154    	; 0x1b8c <main+0x87a>
			}
			else if (page == 7)
    1af2:	87 30       	cpi	r24, 0x07	; 7
    1af4:	91 05       	cpc	r25, r1
    1af6:	79 f4       	brne	.+30     	; 0x1b16 <main+0x804>
			{
				lcdClear();
    1af8:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1afc:	83 e0       	ldi	r24, 0x03	; 3
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1b04:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b10:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b14:	3b c0       	rjmp	.+118    	; 0x1b8c <main+0x87a>
			}else if (page == 8)
    1b16:	88 30       	cpi	r24, 0x08	; 8
    1b18:	91 05       	cpc	r25, r1
    1b1a:	79 f4       	brne	.+30     	; 0x1b3a <main+0x828>
			{
				lcdClear();
    1b1c:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 10;
    1b20:	8a e0       	ldi	r24, 0x0A	; 10
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1b28:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1b2c:	81 e0       	ldi	r24, 0x01	; 1
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b34:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b38:	29 c0       	rjmp	.+82     	; 0x1b8c <main+0x87a>
			}else if (page == 10 && menuitem == 1)
    1b3a:	8a 30       	cpi	r24, 0x0A	; 10
    1b3c:	91 05       	cpc	r25, r1
    1b3e:	81 f4       	brne	.+32     	; 0x1b60 <main+0x84e>
    1b40:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b44:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b48:	21 30       	cpi	r18, 0x01	; 1
    1b4a:	31 05       	cpc	r19, r1
    1b4c:	49 f4       	brne	.+18     	; 0x1b60 <main+0x84e>
			{
				lcdClear();
    1b4e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 11;
    1b52:	8b e0       	ldi	r24, 0x0B	; 11
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1b5a:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
    1b5e:	16 c0       	rjmp	.+44     	; 0x1b8c <main+0x87a>
			}
			else if (page == 10 && menuitem == 2)
    1b60:	0a 97       	sbiw	r24, 0x0a	; 10
    1b62:	a1 f4       	brne	.+40     	; 0x1b8c <main+0x87a>
    1b64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b68:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b6c:	02 97       	sbiw	r24, 0x02	; 2
    1b6e:	71 f4       	brne	.+28     	; 0x1b8c <main+0x87a>
			{
				lcdClear();
    1b70:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 12;
    1b74:	8c e0       	ldi	r24, 0x0C	; 12
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1b7c:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1b80:	81 e0       	ldi	r24, 0x01	; 1
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b88:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
		}
		
		//---------------------------------------BACK button functions-------------------------------------------------------------- 
		if (back) {
    1b8c:	80 91 f4 02 	lds	r24, 0x02F4	; 0x8002f4 <back>
    1b90:	88 23       	and	r24, r24
    1b92:	09 f4       	brne	.+2      	; 0x1b96 <main+0x884>
    1b94:	cd cb       	rjmp	.-2150   	; 0x1330 <main+0x1e>
			back = false;
    1b96:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <back>
			if (page == 0)
    1b9a:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <page>
    1b9e:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <page+0x1>
    1ba2:	00 97       	sbiw	r24, 0x00	; 0
    1ba4:	79 f4       	brne	.+30     	; 0x1bc4 <main+0x8b2>
			{
				if (backlight)
    1ba6:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <backlight>
    1baa:	88 23       	and	r24, r24
    1bac:	29 f0       	breq	.+10     	; 0x1bb8 <main+0x8a6>
				{
					backlight = false;
    1bae:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <backlight>
					turnBacklightOff();
    1bb2:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <_Z16turnBacklightOffv>
    1bb6:	bc cb       	rjmp	.-2184   	; 0x1330 <main+0x1e>
				}
				else
				{
					backlight = true;
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <backlight>
					turnBacklightOn();
    1bbe:	0e 94 c2 03 	call	0x784	; 0x784 <_Z15turnBacklightOnv>
    1bc2:	b6 cb       	rjmp	.-2196   	; 0x1330 <main+0x1e>
				}
			}
			else if (page == 1)
    1bc4:	81 30       	cpi	r24, 0x01	; 1
    1bc6:	91 05       	cpc	r25, r1
    1bc8:	39 f4       	brne	.+14     	; 0x1bd8 <main+0x8c6>
			{
				lcdClear();
    1bca:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 0;
    1bce:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <page+0x1>
    1bd2:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <page>
    1bd6:	ac cb       	rjmp	.-2216   	; 0x1330 <main+0x1e>
			}
			else if (page == 2)
    1bd8:	82 30       	cpi	r24, 0x02	; 2
    1bda:	91 05       	cpc	r25, r1
    1bdc:	79 f4       	brne	.+30     	; 0x1bfc <main+0x8ea>
			{
				lcdClear();
    1bde:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1bea:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 2;
    1bee:	82 e0       	ldi	r24, 0x02	; 2
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bf6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bfa:	9a cb       	rjmp	.-2252   	; 0x1330 <main+0x1e>
			}
			else if (page == 3)
    1bfc:	83 30       	cpi	r24, 0x03	; 3
    1bfe:	91 05       	cpc	r25, r1
    1c00:	69 f4       	brne	.+26     	; 0x1c1c <main+0x90a>
			{
				lcdClear();
    1c02:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1c0e:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1c12:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c16:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c1a:	8a cb       	rjmp	.-2284   	; 0x1330 <main+0x1e>
			}
			else if (page == 4)
    1c1c:	84 30       	cpi	r24, 0x04	; 4
    1c1e:	91 05       	cpc	r25, r1
    1c20:	79 f4       	brne	.+30     	; 0x1c40 <main+0x92e>
			{
				lcdClear();
    1c22:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1c26:	81 e0       	ldi	r24, 0x01	; 1
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1c2e:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 3;
    1c32:	83 e0       	ldi	r24, 0x03	; 3
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c3a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c3e:	78 cb       	rjmp	.-2320   	; 0x1330 <main+0x1e>
			}
			else if (page == 5)
    1c40:	85 30       	cpi	r24, 0x05	; 5
    1c42:	91 05       	cpc	r25, r1
    1c44:	79 f4       	brne	.+30     	; 0x1c64 <main+0x952>
			{
				lcdClear();
    1c46:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1c4a:	84 e0       	ldi	r24, 0x04	; 4
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1c52:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1c56:	81 e0       	ldi	r24, 0x01	; 1
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c5e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c62:	66 cb       	rjmp	.-2356   	; 0x1330 <main+0x1e>
			}
			else if (page == 6)
    1c64:	86 30       	cpi	r24, 0x06	; 6
    1c66:	91 05       	cpc	r25, r1
    1c68:	79 f4       	brne	.+30     	; 0x1c88 <main+0x976>
			{
				lcdClear();
    1c6a:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1c6e:	84 e0       	ldi	r24, 0x04	; 4
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1c76:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 2;
    1c7a:	82 e0       	ldi	r24, 0x02	; 2
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c82:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c86:	54 cb       	rjmp	.-2392   	; 0x1330 <main+0x1e>
			}

			else if (page == 7)
    1c88:	87 30       	cpi	r24, 0x07	; 7
    1c8a:	91 05       	cpc	r25, r1
    1c8c:	79 f4       	brne	.+30     	; 0x1cac <main+0x99a>
			{
				lcdClear();
    1c8e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1c92:	83 e0       	ldi	r24, 0x03	; 3
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1c9a:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1c9e:	81 e0       	ldi	r24, 0x01	; 1
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ca6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1caa:	42 cb       	rjmp	.-2428   	; 0x1330 <main+0x1e>
			}
			else if (page == 8)
    1cac:	88 30       	cpi	r24, 0x08	; 8
    1cae:	91 05       	cpc	r25, r1
    1cb0:	79 f4       	brne	.+30     	; 0x1cd0 <main+0x9be>
			{
				lcdClear();
    1cb2:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1cb6:	83 e0       	ldi	r24, 0x03	; 3
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1cbe:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 2;
    1cc2:	82 e0       	ldi	r24, 0x02	; 2
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cce:	30 cb       	rjmp	.-2464   	; 0x1330 <main+0x1e>
			}
			else if (page == 9)
    1cd0:	89 30       	cpi	r24, 0x09	; 9
    1cd2:	91 05       	cpc	r25, r1
    1cd4:	69 f4       	brne	.+26     	; 0x1cf0 <main+0x9de>
			{
				lcdClear();
    1cd6:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1cda:	83 e0       	ldi	r24, 0x03	; 3
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1ce2:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 3;
    1ce6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cea:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cee:	20 cb       	rjmp	.-2496   	; 0x1330 <main+0x1e>
			}
			else if (page == 10)
    1cf0:	0a 97       	sbiw	r24, 0x0a	; 10
    1cf2:	09 f0       	breq	.+2      	; 0x1cf6 <main+0x9e4>
    1cf4:	1d cb       	rjmp	.-2502   	; 0x1330 <main+0x1e>
			{
				lcdClear();
    1cf6:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 8;
    1cfa:	88 e0       	ldi	r24, 0x08	; 8
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <page+0x1>
    1d02:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <page>
				menuitem = 1;
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d0e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	DDRB = 0xFF; // Set all PORTB as output
	//clearBit(PORTD,0);   //Turn backlight off 
	lcdInit();
	
	
    while (1) 
    1d12:	0e cb       	rjmp	.-2532   	; 0x1330 <main+0x1e>

00001d14 <_GLOBAL__sub_I__Z7lcdInitv>:
		// 		default:
		// 		editAlarmInt(alarmNo);
		
	}
	
}
    1d14:	6f ef       	ldi	r22, 0xFF	; 255
    1d16:	7f ef       	ldi	r23, 0xFF	; 255
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z41__static_initialization_and_destruction_0ii>
    1d20:	08 95       	ret

00001d22 <__divmodhi4>:
    1d22:	97 fb       	bst	r25, 7
    1d24:	07 2e       	mov	r0, r23
    1d26:	16 f4       	brtc	.+4      	; 0x1d2c <__divmodhi4+0xa>
    1d28:	00 94       	com	r0
    1d2a:	07 d0       	rcall	.+14     	; 0x1d3a <__divmodhi4_neg1>
    1d2c:	77 fd       	sbrc	r23, 7
    1d2e:	09 d0       	rcall	.+18     	; 0x1d42 <__divmodhi4_neg2>
    1d30:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__udivmodhi4>
    1d34:	07 fc       	sbrc	r0, 7
    1d36:	05 d0       	rcall	.+10     	; 0x1d42 <__divmodhi4_neg2>
    1d38:	3e f4       	brtc	.+14     	; 0x1d48 <__divmodhi4_exit>

00001d3a <__divmodhi4_neg1>:
    1d3a:	90 95       	com	r25
    1d3c:	81 95       	neg	r24
    1d3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d40:	08 95       	ret

00001d42 <__divmodhi4_neg2>:
    1d42:	70 95       	com	r23
    1d44:	61 95       	neg	r22
    1d46:	7f 4f       	sbci	r23, 0xFF	; 255

00001d48 <__divmodhi4_exit>:
    1d48:	08 95       	ret

00001d4a <__tablejump2__>:
    1d4a:	ee 0f       	add	r30, r30
    1d4c:	ff 1f       	adc	r31, r31
    1d4e:	05 90       	lpm	r0, Z+
    1d50:	f4 91       	lpm	r31, Z
    1d52:	e0 2d       	mov	r30, r0
    1d54:	09 94       	ijmp

00001d56 <__udivmodhi4>:
    1d56:	aa 1b       	sub	r26, r26
    1d58:	bb 1b       	sub	r27, r27
    1d5a:	51 e1       	ldi	r21, 0x11	; 17
    1d5c:	07 c0       	rjmp	.+14     	; 0x1d6c <__udivmodhi4_ep>

00001d5e <__udivmodhi4_loop>:
    1d5e:	aa 1f       	adc	r26, r26
    1d60:	bb 1f       	adc	r27, r27
    1d62:	a6 17       	cp	r26, r22
    1d64:	b7 07       	cpc	r27, r23
    1d66:	10 f0       	brcs	.+4      	; 0x1d6c <__udivmodhi4_ep>
    1d68:	a6 1b       	sub	r26, r22
    1d6a:	b7 0b       	sbc	r27, r23

00001d6c <__udivmodhi4_ep>:
    1d6c:	88 1f       	adc	r24, r24
    1d6e:	99 1f       	adc	r25, r25
    1d70:	5a 95       	dec	r21
    1d72:	a9 f7       	brne	.-22     	; 0x1d5e <__udivmodhi4_loop>
    1d74:	80 95       	com	r24
    1d76:	90 95       	com	r25
    1d78:	bc 01       	movw	r22, r24
    1d7a:	cd 01       	movw	r24, r26
    1d7c:	08 95       	ret

00001d7e <atoi>:
    1d7e:	fc 01       	movw	r30, r24
    1d80:	88 27       	eor	r24, r24
    1d82:	99 27       	eor	r25, r25
    1d84:	e8 94       	clt
    1d86:	21 91       	ld	r18, Z+
    1d88:	20 32       	cpi	r18, 0x20	; 32
    1d8a:	e9 f3       	breq	.-6      	; 0x1d86 <atoi+0x8>
    1d8c:	29 30       	cpi	r18, 0x09	; 9
    1d8e:	10 f0       	brcs	.+4      	; 0x1d94 <atoi+0x16>
    1d90:	2e 30       	cpi	r18, 0x0E	; 14
    1d92:	c8 f3       	brcs	.-14     	; 0x1d86 <atoi+0x8>
    1d94:	2b 32       	cpi	r18, 0x2B	; 43
    1d96:	41 f0       	breq	.+16     	; 0x1da8 <atoi+0x2a>
    1d98:	2d 32       	cpi	r18, 0x2D	; 45
    1d9a:	39 f4       	brne	.+14     	; 0x1daa <atoi+0x2c>
    1d9c:	68 94       	set
    1d9e:	04 c0       	rjmp	.+8      	; 0x1da8 <atoi+0x2a>
    1da0:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__mulhi_const_10>
    1da4:	82 0f       	add	r24, r18
    1da6:	91 1d       	adc	r25, r1
    1da8:	21 91       	ld	r18, Z+
    1daa:	20 53       	subi	r18, 0x30	; 48
    1dac:	2a 30       	cpi	r18, 0x0A	; 10
    1dae:	c0 f3       	brcs	.-16     	; 0x1da0 <atoi+0x22>
    1db0:	1e f4       	brtc	.+6      	; 0x1db8 <atoi+0x3a>
    1db2:	90 95       	com	r25
    1db4:	81 95       	neg	r24
    1db6:	9f 4f       	sbci	r25, 0xFF	; 255
    1db8:	08 95       	ret

00001dba <__itoa_ncheck>:
    1dba:	bb 27       	eor	r27, r27
    1dbc:	4a 30       	cpi	r20, 0x0A	; 10
    1dbe:	31 f4       	brne	.+12     	; 0x1dcc <__itoa_ncheck+0x12>
    1dc0:	99 23       	and	r25, r25
    1dc2:	22 f4       	brpl	.+8      	; 0x1dcc <__itoa_ncheck+0x12>
    1dc4:	bd e2       	ldi	r27, 0x2D	; 45
    1dc6:	90 95       	com	r25
    1dc8:	81 95       	neg	r24
    1dca:	9f 4f       	sbci	r25, 0xFF	; 255
    1dcc:	0c 94 f1 0e 	jmp	0x1de2	; 0x1de2 <__utoa_common>

00001dd0 <__mulhi_const_10>:
    1dd0:	7a e0       	ldi	r23, 0x0A	; 10
    1dd2:	97 9f       	mul	r25, r23
    1dd4:	90 2d       	mov	r25, r0
    1dd6:	87 9f       	mul	r24, r23
    1dd8:	80 2d       	mov	r24, r0
    1dda:	91 0d       	add	r25, r1
    1ddc:	11 24       	eor	r1, r1
    1dde:	08 95       	ret

00001de0 <__utoa_ncheck>:
    1de0:	bb 27       	eor	r27, r27

00001de2 <__utoa_common>:
    1de2:	fb 01       	movw	r30, r22
    1de4:	55 27       	eor	r21, r21
    1de6:	aa 27       	eor	r26, r26
    1de8:	88 0f       	add	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	aa 1f       	adc	r26, r26
    1dee:	a4 17       	cp	r26, r20
    1df0:	10 f0       	brcs	.+4      	; 0x1df6 <__utoa_common+0x14>
    1df2:	a4 1b       	sub	r26, r20
    1df4:	83 95       	inc	r24
    1df6:	50 51       	subi	r21, 0x10	; 16
    1df8:	b9 f7       	brne	.-18     	; 0x1de8 <__utoa_common+0x6>
    1dfa:	a0 5d       	subi	r26, 0xD0	; 208
    1dfc:	aa 33       	cpi	r26, 0x3A	; 58
    1dfe:	08 f0       	brcs	.+2      	; 0x1e02 <__utoa_common+0x20>
    1e00:	a9 5d       	subi	r26, 0xD9	; 217
    1e02:	a1 93       	st	Z+, r26
    1e04:	00 97       	sbiw	r24, 0x00	; 0
    1e06:	79 f7       	brne	.-34     	; 0x1de6 <__utoa_common+0x4>
    1e08:	b1 11       	cpse	r27, r1
    1e0a:	b1 93       	st	Z+, r27
    1e0c:	11 92       	st	Z+, r1
    1e0e:	cb 01       	movw	r24, r22
    1e10:	0c 94 23 11 	jmp	0x2246	; 0x2246 <strrev>

00001e14 <sprintf>:
    1e14:	ae e0       	ldi	r26, 0x0E	; 14
    1e16:	b0 e0       	ldi	r27, 0x00	; 0
    1e18:	e0 e1       	ldi	r30, 0x10	; 16
    1e1a:	ff e0       	ldi	r31, 0x0F	; 15
    1e1c:	0c 94 db 11 	jmp	0x23b6	; 0x23b6 <__prologue_saves__+0x1c>
    1e20:	0d 89       	ldd	r16, Y+21	; 0x15
    1e22:	1e 89       	ldd	r17, Y+22	; 0x16
    1e24:	86 e0       	ldi	r24, 0x06	; 6
    1e26:	8c 83       	std	Y+4, r24	; 0x04
    1e28:	1a 83       	std	Y+2, r17	; 0x02
    1e2a:	09 83       	std	Y+1, r16	; 0x01
    1e2c:	8f ef       	ldi	r24, 0xFF	; 255
    1e2e:	9f e7       	ldi	r25, 0x7F	; 127
    1e30:	9e 83       	std	Y+6, r25	; 0x06
    1e32:	8d 83       	std	Y+5, r24	; 0x05
    1e34:	ae 01       	movw	r20, r28
    1e36:	47 5e       	subi	r20, 0xE7	; 231
    1e38:	5f 4f       	sbci	r21, 0xFF	; 255
    1e3a:	6f 89       	ldd	r22, Y+23	; 0x17
    1e3c:	78 8d       	ldd	r23, Y+24	; 0x18
    1e3e:	ce 01       	movw	r24, r28
    1e40:	01 96       	adiw	r24, 0x01	; 1
    1e42:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <vfprintf>
    1e46:	ef 81       	ldd	r30, Y+7	; 0x07
    1e48:	f8 85       	ldd	r31, Y+8	; 0x08
    1e4a:	e0 0f       	add	r30, r16
    1e4c:	f1 1f       	adc	r31, r17
    1e4e:	10 82       	st	Z, r1
    1e50:	2e 96       	adiw	r28, 0x0e	; 14
    1e52:	e4 e0       	ldi	r30, 0x04	; 4
    1e54:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__epilogue_restores__+0x1c>

00001e58 <vfprintf>:
    1e58:	ab e0       	ldi	r26, 0x0B	; 11
    1e5a:	b0 e0       	ldi	r27, 0x00	; 0
    1e5c:	e2 e3       	ldi	r30, 0x32	; 50
    1e5e:	ff e0       	ldi	r31, 0x0F	; 15
    1e60:	0c 94 cd 11 	jmp	0x239a	; 0x239a <__prologue_saves__>
    1e64:	6c 01       	movw	r12, r24
    1e66:	7b 01       	movw	r14, r22
    1e68:	8a 01       	movw	r16, r20
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	17 82       	std	Z+7, r1	; 0x07
    1e6e:	16 82       	std	Z+6, r1	; 0x06
    1e70:	83 81       	ldd	r24, Z+3	; 0x03
    1e72:	81 ff       	sbrs	r24, 1
    1e74:	cc c1       	rjmp	.+920    	; 0x220e <vfprintf+0x3b6>
    1e76:	ce 01       	movw	r24, r28
    1e78:	01 96       	adiw	r24, 0x01	; 1
    1e7a:	3c 01       	movw	r6, r24
    1e7c:	f6 01       	movw	r30, r12
    1e7e:	93 81       	ldd	r25, Z+3	; 0x03
    1e80:	f7 01       	movw	r30, r14
    1e82:	93 fd       	sbrc	r25, 3
    1e84:	85 91       	lpm	r24, Z+
    1e86:	93 ff       	sbrs	r25, 3
    1e88:	81 91       	ld	r24, Z+
    1e8a:	7f 01       	movw	r14, r30
    1e8c:	88 23       	and	r24, r24
    1e8e:	09 f4       	brne	.+2      	; 0x1e92 <vfprintf+0x3a>
    1e90:	ba c1       	rjmp	.+884    	; 0x2206 <vfprintf+0x3ae>
    1e92:	85 32       	cpi	r24, 0x25	; 37
    1e94:	39 f4       	brne	.+14     	; 0x1ea4 <vfprintf+0x4c>
    1e96:	93 fd       	sbrc	r25, 3
    1e98:	85 91       	lpm	r24, Z+
    1e9a:	93 ff       	sbrs	r25, 3
    1e9c:	81 91       	ld	r24, Z+
    1e9e:	7f 01       	movw	r14, r30
    1ea0:	85 32       	cpi	r24, 0x25	; 37
    1ea2:	29 f4       	brne	.+10     	; 0x1eae <vfprintf+0x56>
    1ea4:	b6 01       	movw	r22, r12
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    1eac:	e7 cf       	rjmp	.-50     	; 0x1e7c <vfprintf+0x24>
    1eae:	91 2c       	mov	r9, r1
    1eb0:	21 2c       	mov	r2, r1
    1eb2:	31 2c       	mov	r3, r1
    1eb4:	ff e1       	ldi	r31, 0x1F	; 31
    1eb6:	f3 15       	cp	r31, r3
    1eb8:	d8 f0       	brcs	.+54     	; 0x1ef0 <vfprintf+0x98>
    1eba:	8b 32       	cpi	r24, 0x2B	; 43
    1ebc:	79 f0       	breq	.+30     	; 0x1edc <vfprintf+0x84>
    1ebe:	38 f4       	brcc	.+14     	; 0x1ece <vfprintf+0x76>
    1ec0:	80 32       	cpi	r24, 0x20	; 32
    1ec2:	79 f0       	breq	.+30     	; 0x1ee2 <vfprintf+0x8a>
    1ec4:	83 32       	cpi	r24, 0x23	; 35
    1ec6:	a1 f4       	brne	.+40     	; 0x1ef0 <vfprintf+0x98>
    1ec8:	23 2d       	mov	r18, r3
    1eca:	20 61       	ori	r18, 0x10	; 16
    1ecc:	1d c0       	rjmp	.+58     	; 0x1f08 <vfprintf+0xb0>
    1ece:	8d 32       	cpi	r24, 0x2D	; 45
    1ed0:	61 f0       	breq	.+24     	; 0x1eea <vfprintf+0x92>
    1ed2:	80 33       	cpi	r24, 0x30	; 48
    1ed4:	69 f4       	brne	.+26     	; 0x1ef0 <vfprintf+0x98>
    1ed6:	23 2d       	mov	r18, r3
    1ed8:	21 60       	ori	r18, 0x01	; 1
    1eda:	16 c0       	rjmp	.+44     	; 0x1f08 <vfprintf+0xb0>
    1edc:	83 2d       	mov	r24, r3
    1ede:	82 60       	ori	r24, 0x02	; 2
    1ee0:	38 2e       	mov	r3, r24
    1ee2:	e3 2d       	mov	r30, r3
    1ee4:	e4 60       	ori	r30, 0x04	; 4
    1ee6:	3e 2e       	mov	r3, r30
    1ee8:	2a c0       	rjmp	.+84     	; 0x1f3e <vfprintf+0xe6>
    1eea:	f3 2d       	mov	r31, r3
    1eec:	f8 60       	ori	r31, 0x08	; 8
    1eee:	1d c0       	rjmp	.+58     	; 0x1f2a <vfprintf+0xd2>
    1ef0:	37 fc       	sbrc	r3, 7
    1ef2:	2d c0       	rjmp	.+90     	; 0x1f4e <vfprintf+0xf6>
    1ef4:	20 ed       	ldi	r18, 0xD0	; 208
    1ef6:	28 0f       	add	r18, r24
    1ef8:	2a 30       	cpi	r18, 0x0A	; 10
    1efa:	40 f0       	brcs	.+16     	; 0x1f0c <vfprintf+0xb4>
    1efc:	8e 32       	cpi	r24, 0x2E	; 46
    1efe:	b9 f4       	brne	.+46     	; 0x1f2e <vfprintf+0xd6>
    1f00:	36 fc       	sbrc	r3, 6
    1f02:	81 c1       	rjmp	.+770    	; 0x2206 <vfprintf+0x3ae>
    1f04:	23 2d       	mov	r18, r3
    1f06:	20 64       	ori	r18, 0x40	; 64
    1f08:	32 2e       	mov	r3, r18
    1f0a:	19 c0       	rjmp	.+50     	; 0x1f3e <vfprintf+0xe6>
    1f0c:	36 fe       	sbrs	r3, 6
    1f0e:	06 c0       	rjmp	.+12     	; 0x1f1c <vfprintf+0xc4>
    1f10:	8a e0       	ldi	r24, 0x0A	; 10
    1f12:	98 9e       	mul	r9, r24
    1f14:	20 0d       	add	r18, r0
    1f16:	11 24       	eor	r1, r1
    1f18:	92 2e       	mov	r9, r18
    1f1a:	11 c0       	rjmp	.+34     	; 0x1f3e <vfprintf+0xe6>
    1f1c:	ea e0       	ldi	r30, 0x0A	; 10
    1f1e:	2e 9e       	mul	r2, r30
    1f20:	20 0d       	add	r18, r0
    1f22:	11 24       	eor	r1, r1
    1f24:	22 2e       	mov	r2, r18
    1f26:	f3 2d       	mov	r31, r3
    1f28:	f0 62       	ori	r31, 0x20	; 32
    1f2a:	3f 2e       	mov	r3, r31
    1f2c:	08 c0       	rjmp	.+16     	; 0x1f3e <vfprintf+0xe6>
    1f2e:	8c 36       	cpi	r24, 0x6C	; 108
    1f30:	21 f4       	brne	.+8      	; 0x1f3a <vfprintf+0xe2>
    1f32:	83 2d       	mov	r24, r3
    1f34:	80 68       	ori	r24, 0x80	; 128
    1f36:	38 2e       	mov	r3, r24
    1f38:	02 c0       	rjmp	.+4      	; 0x1f3e <vfprintf+0xe6>
    1f3a:	88 36       	cpi	r24, 0x68	; 104
    1f3c:	41 f4       	brne	.+16     	; 0x1f4e <vfprintf+0xf6>
    1f3e:	f7 01       	movw	r30, r14
    1f40:	93 fd       	sbrc	r25, 3
    1f42:	85 91       	lpm	r24, Z+
    1f44:	93 ff       	sbrs	r25, 3
    1f46:	81 91       	ld	r24, Z+
    1f48:	7f 01       	movw	r14, r30
    1f4a:	81 11       	cpse	r24, r1
    1f4c:	b3 cf       	rjmp	.-154    	; 0x1eb4 <vfprintf+0x5c>
    1f4e:	98 2f       	mov	r25, r24
    1f50:	9f 7d       	andi	r25, 0xDF	; 223
    1f52:	95 54       	subi	r25, 0x45	; 69
    1f54:	93 30       	cpi	r25, 0x03	; 3
    1f56:	28 f4       	brcc	.+10     	; 0x1f62 <vfprintf+0x10a>
    1f58:	0c 5f       	subi	r16, 0xFC	; 252
    1f5a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5c:	9f e3       	ldi	r25, 0x3F	; 63
    1f5e:	99 83       	std	Y+1, r25	; 0x01
    1f60:	0d c0       	rjmp	.+26     	; 0x1f7c <vfprintf+0x124>
    1f62:	83 36       	cpi	r24, 0x63	; 99
    1f64:	31 f0       	breq	.+12     	; 0x1f72 <vfprintf+0x11a>
    1f66:	83 37       	cpi	r24, 0x73	; 115
    1f68:	71 f0       	breq	.+28     	; 0x1f86 <vfprintf+0x12e>
    1f6a:	83 35       	cpi	r24, 0x53	; 83
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <vfprintf+0x118>
    1f6e:	59 c0       	rjmp	.+178    	; 0x2022 <vfprintf+0x1ca>
    1f70:	21 c0       	rjmp	.+66     	; 0x1fb4 <vfprintf+0x15c>
    1f72:	f8 01       	movw	r30, r16
    1f74:	80 81       	ld	r24, Z
    1f76:	89 83       	std	Y+1, r24	; 0x01
    1f78:	0e 5f       	subi	r16, 0xFE	; 254
    1f7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f7c:	88 24       	eor	r8, r8
    1f7e:	83 94       	inc	r8
    1f80:	91 2c       	mov	r9, r1
    1f82:	53 01       	movw	r10, r6
    1f84:	13 c0       	rjmp	.+38     	; 0x1fac <vfprintf+0x154>
    1f86:	28 01       	movw	r4, r16
    1f88:	f2 e0       	ldi	r31, 0x02	; 2
    1f8a:	4f 0e       	add	r4, r31
    1f8c:	51 1c       	adc	r5, r1
    1f8e:	f8 01       	movw	r30, r16
    1f90:	a0 80       	ld	r10, Z
    1f92:	b1 80       	ldd	r11, Z+1	; 0x01
    1f94:	36 fe       	sbrs	r3, 6
    1f96:	03 c0       	rjmp	.+6      	; 0x1f9e <vfprintf+0x146>
    1f98:	69 2d       	mov	r22, r9
    1f9a:	70 e0       	ldi	r23, 0x00	; 0
    1f9c:	02 c0       	rjmp	.+4      	; 0x1fa2 <vfprintf+0x14a>
    1f9e:	6f ef       	ldi	r22, 0xFF	; 255
    1fa0:	7f ef       	ldi	r23, 0xFF	; 255
    1fa2:	c5 01       	movw	r24, r10
    1fa4:	0e 94 18 11 	call	0x2230	; 0x2230 <strnlen>
    1fa8:	4c 01       	movw	r8, r24
    1faa:	82 01       	movw	r16, r4
    1fac:	f3 2d       	mov	r31, r3
    1fae:	ff 77       	andi	r31, 0x7F	; 127
    1fb0:	3f 2e       	mov	r3, r31
    1fb2:	16 c0       	rjmp	.+44     	; 0x1fe0 <vfprintf+0x188>
    1fb4:	28 01       	movw	r4, r16
    1fb6:	22 e0       	ldi	r18, 0x02	; 2
    1fb8:	42 0e       	add	r4, r18
    1fba:	51 1c       	adc	r5, r1
    1fbc:	f8 01       	movw	r30, r16
    1fbe:	a0 80       	ld	r10, Z
    1fc0:	b1 80       	ldd	r11, Z+1	; 0x01
    1fc2:	36 fe       	sbrs	r3, 6
    1fc4:	03 c0       	rjmp	.+6      	; 0x1fcc <vfprintf+0x174>
    1fc6:	69 2d       	mov	r22, r9
    1fc8:	70 e0       	ldi	r23, 0x00	; 0
    1fca:	02 c0       	rjmp	.+4      	; 0x1fd0 <vfprintf+0x178>
    1fcc:	6f ef       	ldi	r22, 0xFF	; 255
    1fce:	7f ef       	ldi	r23, 0xFF	; 255
    1fd0:	c5 01       	movw	r24, r10
    1fd2:	0e 94 0d 11 	call	0x221a	; 0x221a <strnlen_P>
    1fd6:	4c 01       	movw	r8, r24
    1fd8:	f3 2d       	mov	r31, r3
    1fda:	f0 68       	ori	r31, 0x80	; 128
    1fdc:	3f 2e       	mov	r3, r31
    1fde:	82 01       	movw	r16, r4
    1fe0:	33 fc       	sbrc	r3, 3
    1fe2:	1b c0       	rjmp	.+54     	; 0x201a <vfprintf+0x1c2>
    1fe4:	82 2d       	mov	r24, r2
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	88 16       	cp	r8, r24
    1fea:	99 06       	cpc	r9, r25
    1fec:	b0 f4       	brcc	.+44     	; 0x201a <vfprintf+0x1c2>
    1fee:	b6 01       	movw	r22, r12
    1ff0:	80 e2       	ldi	r24, 0x20	; 32
    1ff2:	90 e0       	ldi	r25, 0x00	; 0
    1ff4:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    1ff8:	2a 94       	dec	r2
    1ffa:	f4 cf       	rjmp	.-24     	; 0x1fe4 <vfprintf+0x18c>
    1ffc:	f5 01       	movw	r30, r10
    1ffe:	37 fc       	sbrc	r3, 7
    2000:	85 91       	lpm	r24, Z+
    2002:	37 fe       	sbrs	r3, 7
    2004:	81 91       	ld	r24, Z+
    2006:	5f 01       	movw	r10, r30
    2008:	b6 01       	movw	r22, r12
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    2010:	21 10       	cpse	r2, r1
    2012:	2a 94       	dec	r2
    2014:	21 e0       	ldi	r18, 0x01	; 1
    2016:	82 1a       	sub	r8, r18
    2018:	91 08       	sbc	r9, r1
    201a:	81 14       	cp	r8, r1
    201c:	91 04       	cpc	r9, r1
    201e:	71 f7       	brne	.-36     	; 0x1ffc <vfprintf+0x1a4>
    2020:	e8 c0       	rjmp	.+464    	; 0x21f2 <vfprintf+0x39a>
    2022:	84 36       	cpi	r24, 0x64	; 100
    2024:	11 f0       	breq	.+4      	; 0x202a <vfprintf+0x1d2>
    2026:	89 36       	cpi	r24, 0x69	; 105
    2028:	41 f5       	brne	.+80     	; 0x207a <vfprintf+0x222>
    202a:	f8 01       	movw	r30, r16
    202c:	37 fe       	sbrs	r3, 7
    202e:	07 c0       	rjmp	.+14     	; 0x203e <vfprintf+0x1e6>
    2030:	60 81       	ld	r22, Z
    2032:	71 81       	ldd	r23, Z+1	; 0x01
    2034:	82 81       	ldd	r24, Z+2	; 0x02
    2036:	93 81       	ldd	r25, Z+3	; 0x03
    2038:	0c 5f       	subi	r16, 0xFC	; 252
    203a:	1f 4f       	sbci	r17, 0xFF	; 255
    203c:	08 c0       	rjmp	.+16     	; 0x204e <vfprintf+0x1f6>
    203e:	60 81       	ld	r22, Z
    2040:	71 81       	ldd	r23, Z+1	; 0x01
    2042:	07 2e       	mov	r0, r23
    2044:	00 0c       	add	r0, r0
    2046:	88 0b       	sbc	r24, r24
    2048:	99 0b       	sbc	r25, r25
    204a:	0e 5f       	subi	r16, 0xFE	; 254
    204c:	1f 4f       	sbci	r17, 0xFF	; 255
    204e:	f3 2d       	mov	r31, r3
    2050:	ff 76       	andi	r31, 0x6F	; 111
    2052:	3f 2e       	mov	r3, r31
    2054:	97 ff       	sbrs	r25, 7
    2056:	09 c0       	rjmp	.+18     	; 0x206a <vfprintf+0x212>
    2058:	90 95       	com	r25
    205a:	80 95       	com	r24
    205c:	70 95       	com	r23
    205e:	61 95       	neg	r22
    2060:	7f 4f       	sbci	r23, 0xFF	; 255
    2062:	8f 4f       	sbci	r24, 0xFF	; 255
    2064:	9f 4f       	sbci	r25, 0xFF	; 255
    2066:	f0 68       	ori	r31, 0x80	; 128
    2068:	3f 2e       	mov	r3, r31
    206a:	2a e0       	ldi	r18, 0x0A	; 10
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	a3 01       	movw	r20, r6
    2070:	0e 94 6f 11 	call	0x22de	; 0x22de <__ultoa_invert>
    2074:	88 2e       	mov	r8, r24
    2076:	86 18       	sub	r8, r6
    2078:	45 c0       	rjmp	.+138    	; 0x2104 <vfprintf+0x2ac>
    207a:	85 37       	cpi	r24, 0x75	; 117
    207c:	31 f4       	brne	.+12     	; 0x208a <vfprintf+0x232>
    207e:	23 2d       	mov	r18, r3
    2080:	2f 7e       	andi	r18, 0xEF	; 239
    2082:	b2 2e       	mov	r11, r18
    2084:	2a e0       	ldi	r18, 0x0A	; 10
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	25 c0       	rjmp	.+74     	; 0x20d4 <vfprintf+0x27c>
    208a:	93 2d       	mov	r25, r3
    208c:	99 7f       	andi	r25, 0xF9	; 249
    208e:	b9 2e       	mov	r11, r25
    2090:	8f 36       	cpi	r24, 0x6F	; 111
    2092:	c1 f0       	breq	.+48     	; 0x20c4 <vfprintf+0x26c>
    2094:	18 f4       	brcc	.+6      	; 0x209c <vfprintf+0x244>
    2096:	88 35       	cpi	r24, 0x58	; 88
    2098:	79 f0       	breq	.+30     	; 0x20b8 <vfprintf+0x260>
    209a:	b5 c0       	rjmp	.+362    	; 0x2206 <vfprintf+0x3ae>
    209c:	80 37       	cpi	r24, 0x70	; 112
    209e:	19 f0       	breq	.+6      	; 0x20a6 <vfprintf+0x24e>
    20a0:	88 37       	cpi	r24, 0x78	; 120
    20a2:	21 f0       	breq	.+8      	; 0x20ac <vfprintf+0x254>
    20a4:	b0 c0       	rjmp	.+352    	; 0x2206 <vfprintf+0x3ae>
    20a6:	e9 2f       	mov	r30, r25
    20a8:	e0 61       	ori	r30, 0x10	; 16
    20aa:	be 2e       	mov	r11, r30
    20ac:	b4 fe       	sbrs	r11, 4
    20ae:	0d c0       	rjmp	.+26     	; 0x20ca <vfprintf+0x272>
    20b0:	fb 2d       	mov	r31, r11
    20b2:	f4 60       	ori	r31, 0x04	; 4
    20b4:	bf 2e       	mov	r11, r31
    20b6:	09 c0       	rjmp	.+18     	; 0x20ca <vfprintf+0x272>
    20b8:	34 fe       	sbrs	r3, 4
    20ba:	0a c0       	rjmp	.+20     	; 0x20d0 <vfprintf+0x278>
    20bc:	29 2f       	mov	r18, r25
    20be:	26 60       	ori	r18, 0x06	; 6
    20c0:	b2 2e       	mov	r11, r18
    20c2:	06 c0       	rjmp	.+12     	; 0x20d0 <vfprintf+0x278>
    20c4:	28 e0       	ldi	r18, 0x08	; 8
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	05 c0       	rjmp	.+10     	; 0x20d4 <vfprintf+0x27c>
    20ca:	20 e1       	ldi	r18, 0x10	; 16
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	02 c0       	rjmp	.+4      	; 0x20d4 <vfprintf+0x27c>
    20d0:	20 e1       	ldi	r18, 0x10	; 16
    20d2:	32 e0       	ldi	r19, 0x02	; 2
    20d4:	f8 01       	movw	r30, r16
    20d6:	b7 fe       	sbrs	r11, 7
    20d8:	07 c0       	rjmp	.+14     	; 0x20e8 <vfprintf+0x290>
    20da:	60 81       	ld	r22, Z
    20dc:	71 81       	ldd	r23, Z+1	; 0x01
    20de:	82 81       	ldd	r24, Z+2	; 0x02
    20e0:	93 81       	ldd	r25, Z+3	; 0x03
    20e2:	0c 5f       	subi	r16, 0xFC	; 252
    20e4:	1f 4f       	sbci	r17, 0xFF	; 255
    20e6:	06 c0       	rjmp	.+12     	; 0x20f4 <vfprintf+0x29c>
    20e8:	60 81       	ld	r22, Z
    20ea:	71 81       	ldd	r23, Z+1	; 0x01
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	0e 5f       	subi	r16, 0xFE	; 254
    20f2:	1f 4f       	sbci	r17, 0xFF	; 255
    20f4:	a3 01       	movw	r20, r6
    20f6:	0e 94 6f 11 	call	0x22de	; 0x22de <__ultoa_invert>
    20fa:	88 2e       	mov	r8, r24
    20fc:	86 18       	sub	r8, r6
    20fe:	fb 2d       	mov	r31, r11
    2100:	ff 77       	andi	r31, 0x7F	; 127
    2102:	3f 2e       	mov	r3, r31
    2104:	36 fe       	sbrs	r3, 6
    2106:	0d c0       	rjmp	.+26     	; 0x2122 <vfprintf+0x2ca>
    2108:	23 2d       	mov	r18, r3
    210a:	2e 7f       	andi	r18, 0xFE	; 254
    210c:	a2 2e       	mov	r10, r18
    210e:	89 14       	cp	r8, r9
    2110:	58 f4       	brcc	.+22     	; 0x2128 <vfprintf+0x2d0>
    2112:	34 fe       	sbrs	r3, 4
    2114:	0b c0       	rjmp	.+22     	; 0x212c <vfprintf+0x2d4>
    2116:	32 fc       	sbrc	r3, 2
    2118:	09 c0       	rjmp	.+18     	; 0x212c <vfprintf+0x2d4>
    211a:	83 2d       	mov	r24, r3
    211c:	8e 7e       	andi	r24, 0xEE	; 238
    211e:	a8 2e       	mov	r10, r24
    2120:	05 c0       	rjmp	.+10     	; 0x212c <vfprintf+0x2d4>
    2122:	b8 2c       	mov	r11, r8
    2124:	a3 2c       	mov	r10, r3
    2126:	03 c0       	rjmp	.+6      	; 0x212e <vfprintf+0x2d6>
    2128:	b8 2c       	mov	r11, r8
    212a:	01 c0       	rjmp	.+2      	; 0x212e <vfprintf+0x2d6>
    212c:	b9 2c       	mov	r11, r9
    212e:	a4 fe       	sbrs	r10, 4
    2130:	0f c0       	rjmp	.+30     	; 0x2150 <vfprintf+0x2f8>
    2132:	fe 01       	movw	r30, r28
    2134:	e8 0d       	add	r30, r8
    2136:	f1 1d       	adc	r31, r1
    2138:	80 81       	ld	r24, Z
    213a:	80 33       	cpi	r24, 0x30	; 48
    213c:	21 f4       	brne	.+8      	; 0x2146 <vfprintf+0x2ee>
    213e:	9a 2d       	mov	r25, r10
    2140:	99 7e       	andi	r25, 0xE9	; 233
    2142:	a9 2e       	mov	r10, r25
    2144:	09 c0       	rjmp	.+18     	; 0x2158 <vfprintf+0x300>
    2146:	a2 fe       	sbrs	r10, 2
    2148:	06 c0       	rjmp	.+12     	; 0x2156 <vfprintf+0x2fe>
    214a:	b3 94       	inc	r11
    214c:	b3 94       	inc	r11
    214e:	04 c0       	rjmp	.+8      	; 0x2158 <vfprintf+0x300>
    2150:	8a 2d       	mov	r24, r10
    2152:	86 78       	andi	r24, 0x86	; 134
    2154:	09 f0       	breq	.+2      	; 0x2158 <vfprintf+0x300>
    2156:	b3 94       	inc	r11
    2158:	a3 fc       	sbrc	r10, 3
    215a:	11 c0       	rjmp	.+34     	; 0x217e <vfprintf+0x326>
    215c:	a0 fe       	sbrs	r10, 0
    215e:	06 c0       	rjmp	.+12     	; 0x216c <vfprintf+0x314>
    2160:	b2 14       	cp	r11, r2
    2162:	88 f4       	brcc	.+34     	; 0x2186 <vfprintf+0x32e>
    2164:	28 0c       	add	r2, r8
    2166:	92 2c       	mov	r9, r2
    2168:	9b 18       	sub	r9, r11
    216a:	0e c0       	rjmp	.+28     	; 0x2188 <vfprintf+0x330>
    216c:	b2 14       	cp	r11, r2
    216e:	60 f4       	brcc	.+24     	; 0x2188 <vfprintf+0x330>
    2170:	b6 01       	movw	r22, r12
    2172:	80 e2       	ldi	r24, 0x20	; 32
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    217a:	b3 94       	inc	r11
    217c:	f7 cf       	rjmp	.-18     	; 0x216c <vfprintf+0x314>
    217e:	b2 14       	cp	r11, r2
    2180:	18 f4       	brcc	.+6      	; 0x2188 <vfprintf+0x330>
    2182:	2b 18       	sub	r2, r11
    2184:	02 c0       	rjmp	.+4      	; 0x218a <vfprintf+0x332>
    2186:	98 2c       	mov	r9, r8
    2188:	21 2c       	mov	r2, r1
    218a:	a4 fe       	sbrs	r10, 4
    218c:	10 c0       	rjmp	.+32     	; 0x21ae <vfprintf+0x356>
    218e:	b6 01       	movw	r22, r12
    2190:	80 e3       	ldi	r24, 0x30	; 48
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    2198:	a2 fe       	sbrs	r10, 2
    219a:	17 c0       	rjmp	.+46     	; 0x21ca <vfprintf+0x372>
    219c:	a1 fc       	sbrc	r10, 1
    219e:	03 c0       	rjmp	.+6      	; 0x21a6 <vfprintf+0x34e>
    21a0:	88 e7       	ldi	r24, 0x78	; 120
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	02 c0       	rjmp	.+4      	; 0x21aa <vfprintf+0x352>
    21a6:	88 e5       	ldi	r24, 0x58	; 88
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	b6 01       	movw	r22, r12
    21ac:	0c c0       	rjmp	.+24     	; 0x21c6 <vfprintf+0x36e>
    21ae:	8a 2d       	mov	r24, r10
    21b0:	86 78       	andi	r24, 0x86	; 134
    21b2:	59 f0       	breq	.+22     	; 0x21ca <vfprintf+0x372>
    21b4:	a1 fe       	sbrs	r10, 1
    21b6:	02 c0       	rjmp	.+4      	; 0x21bc <vfprintf+0x364>
    21b8:	8b e2       	ldi	r24, 0x2B	; 43
    21ba:	01 c0       	rjmp	.+2      	; 0x21be <vfprintf+0x366>
    21bc:	80 e2       	ldi	r24, 0x20	; 32
    21be:	a7 fc       	sbrc	r10, 7
    21c0:	8d e2       	ldi	r24, 0x2D	; 45
    21c2:	b6 01       	movw	r22, r12
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    21ca:	89 14       	cp	r8, r9
    21cc:	38 f4       	brcc	.+14     	; 0x21dc <vfprintf+0x384>
    21ce:	b6 01       	movw	r22, r12
    21d0:	80 e3       	ldi	r24, 0x30	; 48
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    21d8:	9a 94       	dec	r9
    21da:	f7 cf       	rjmp	.-18     	; 0x21ca <vfprintf+0x372>
    21dc:	8a 94       	dec	r8
    21de:	f3 01       	movw	r30, r6
    21e0:	e8 0d       	add	r30, r8
    21e2:	f1 1d       	adc	r31, r1
    21e4:	80 81       	ld	r24, Z
    21e6:	b6 01       	movw	r22, r12
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    21ee:	81 10       	cpse	r8, r1
    21f0:	f5 cf       	rjmp	.-22     	; 0x21dc <vfprintf+0x384>
    21f2:	22 20       	and	r2, r2
    21f4:	09 f4       	brne	.+2      	; 0x21f8 <vfprintf+0x3a0>
    21f6:	42 ce       	rjmp	.-892    	; 0x1e7c <vfprintf+0x24>
    21f8:	b6 01       	movw	r22, r12
    21fa:	80 e2       	ldi	r24, 0x20	; 32
    21fc:	90 e0       	ldi	r25, 0x00	; 0
    21fe:	0e 94 33 11 	call	0x2266	; 0x2266 <fputc>
    2202:	2a 94       	dec	r2
    2204:	f6 cf       	rjmp	.-20     	; 0x21f2 <vfprintf+0x39a>
    2206:	f6 01       	movw	r30, r12
    2208:	86 81       	ldd	r24, Z+6	; 0x06
    220a:	97 81       	ldd	r25, Z+7	; 0x07
    220c:	02 c0       	rjmp	.+4      	; 0x2212 <vfprintf+0x3ba>
    220e:	8f ef       	ldi	r24, 0xFF	; 255
    2210:	9f ef       	ldi	r25, 0xFF	; 255
    2212:	2b 96       	adiw	r28, 0x0b	; 11
    2214:	e2 e1       	ldi	r30, 0x12	; 18
    2216:	0c 94 e9 11 	jmp	0x23d2	; 0x23d2 <__epilogue_restores__>

0000221a <strnlen_P>:
    221a:	fc 01       	movw	r30, r24
    221c:	05 90       	lpm	r0, Z+
    221e:	61 50       	subi	r22, 0x01	; 1
    2220:	70 40       	sbci	r23, 0x00	; 0
    2222:	01 10       	cpse	r0, r1
    2224:	d8 f7       	brcc	.-10     	; 0x221c <strnlen_P+0x2>
    2226:	80 95       	com	r24
    2228:	90 95       	com	r25
    222a:	8e 0f       	add	r24, r30
    222c:	9f 1f       	adc	r25, r31
    222e:	08 95       	ret

00002230 <strnlen>:
    2230:	fc 01       	movw	r30, r24
    2232:	61 50       	subi	r22, 0x01	; 1
    2234:	70 40       	sbci	r23, 0x00	; 0
    2236:	01 90       	ld	r0, Z+
    2238:	01 10       	cpse	r0, r1
    223a:	d8 f7       	brcc	.-10     	; 0x2232 <strnlen+0x2>
    223c:	80 95       	com	r24
    223e:	90 95       	com	r25
    2240:	8e 0f       	add	r24, r30
    2242:	9f 1f       	adc	r25, r31
    2244:	08 95       	ret

00002246 <strrev>:
    2246:	dc 01       	movw	r26, r24
    2248:	fc 01       	movw	r30, r24
    224a:	67 2f       	mov	r22, r23
    224c:	71 91       	ld	r23, Z+
    224e:	77 23       	and	r23, r23
    2250:	e1 f7       	brne	.-8      	; 0x224a <strrev+0x4>
    2252:	32 97       	sbiw	r30, 0x02	; 2
    2254:	04 c0       	rjmp	.+8      	; 0x225e <strrev+0x18>
    2256:	7c 91       	ld	r23, X
    2258:	6d 93       	st	X+, r22
    225a:	70 83       	st	Z, r23
    225c:	62 91       	ld	r22, -Z
    225e:	ae 17       	cp	r26, r30
    2260:	bf 07       	cpc	r27, r31
    2262:	c8 f3       	brcs	.-14     	; 0x2256 <strrev+0x10>
    2264:	08 95       	ret

00002266 <fputc>:
    2266:	0f 93       	push	r16
    2268:	1f 93       	push	r17
    226a:	cf 93       	push	r28
    226c:	df 93       	push	r29
    226e:	fb 01       	movw	r30, r22
    2270:	23 81       	ldd	r18, Z+3	; 0x03
    2272:	21 fd       	sbrc	r18, 1
    2274:	03 c0       	rjmp	.+6      	; 0x227c <fputc+0x16>
    2276:	8f ef       	ldi	r24, 0xFF	; 255
    2278:	9f ef       	ldi	r25, 0xFF	; 255
    227a:	2c c0       	rjmp	.+88     	; 0x22d4 <fputc+0x6e>
    227c:	22 ff       	sbrs	r18, 2
    227e:	16 c0       	rjmp	.+44     	; 0x22ac <fputc+0x46>
    2280:	46 81       	ldd	r20, Z+6	; 0x06
    2282:	57 81       	ldd	r21, Z+7	; 0x07
    2284:	24 81       	ldd	r18, Z+4	; 0x04
    2286:	35 81       	ldd	r19, Z+5	; 0x05
    2288:	42 17       	cp	r20, r18
    228a:	53 07       	cpc	r21, r19
    228c:	44 f4       	brge	.+16     	; 0x229e <fputc+0x38>
    228e:	a0 81       	ld	r26, Z
    2290:	b1 81       	ldd	r27, Z+1	; 0x01
    2292:	9d 01       	movw	r18, r26
    2294:	2f 5f       	subi	r18, 0xFF	; 255
    2296:	3f 4f       	sbci	r19, 0xFF	; 255
    2298:	31 83       	std	Z+1, r19	; 0x01
    229a:	20 83       	st	Z, r18
    229c:	8c 93       	st	X, r24
    229e:	26 81       	ldd	r18, Z+6	; 0x06
    22a0:	37 81       	ldd	r19, Z+7	; 0x07
    22a2:	2f 5f       	subi	r18, 0xFF	; 255
    22a4:	3f 4f       	sbci	r19, 0xFF	; 255
    22a6:	37 83       	std	Z+7, r19	; 0x07
    22a8:	26 83       	std	Z+6, r18	; 0x06
    22aa:	14 c0       	rjmp	.+40     	; 0x22d4 <fputc+0x6e>
    22ac:	8b 01       	movw	r16, r22
    22ae:	ec 01       	movw	r28, r24
    22b0:	fb 01       	movw	r30, r22
    22b2:	00 84       	ldd	r0, Z+8	; 0x08
    22b4:	f1 85       	ldd	r31, Z+9	; 0x09
    22b6:	e0 2d       	mov	r30, r0
    22b8:	09 95       	icall
    22ba:	89 2b       	or	r24, r25
    22bc:	e1 f6       	brne	.-72     	; 0x2276 <fputc+0x10>
    22be:	d8 01       	movw	r26, r16
    22c0:	16 96       	adiw	r26, 0x06	; 6
    22c2:	8d 91       	ld	r24, X+
    22c4:	9c 91       	ld	r25, X
    22c6:	17 97       	sbiw	r26, 0x07	; 7
    22c8:	01 96       	adiw	r24, 0x01	; 1
    22ca:	17 96       	adiw	r26, 0x07	; 7
    22cc:	9c 93       	st	X, r25
    22ce:	8e 93       	st	-X, r24
    22d0:	16 97       	sbiw	r26, 0x06	; 6
    22d2:	ce 01       	movw	r24, r28
    22d4:	df 91       	pop	r29
    22d6:	cf 91       	pop	r28
    22d8:	1f 91       	pop	r17
    22da:	0f 91       	pop	r16
    22dc:	08 95       	ret

000022de <__ultoa_invert>:
    22de:	fa 01       	movw	r30, r20
    22e0:	aa 27       	eor	r26, r26
    22e2:	28 30       	cpi	r18, 0x08	; 8
    22e4:	51 f1       	breq	.+84     	; 0x233a <__ultoa_invert+0x5c>
    22e6:	20 31       	cpi	r18, 0x10	; 16
    22e8:	81 f1       	breq	.+96     	; 0x234a <__ultoa_invert+0x6c>
    22ea:	e8 94       	clt
    22ec:	6f 93       	push	r22
    22ee:	6e 7f       	andi	r22, 0xFE	; 254
    22f0:	6e 5f       	subi	r22, 0xFE	; 254
    22f2:	7f 4f       	sbci	r23, 0xFF	; 255
    22f4:	8f 4f       	sbci	r24, 0xFF	; 255
    22f6:	9f 4f       	sbci	r25, 0xFF	; 255
    22f8:	af 4f       	sbci	r26, 0xFF	; 255
    22fa:	b1 e0       	ldi	r27, 0x01	; 1
    22fc:	3e d0       	rcall	.+124    	; 0x237a <__ultoa_invert+0x9c>
    22fe:	b4 e0       	ldi	r27, 0x04	; 4
    2300:	3c d0       	rcall	.+120    	; 0x237a <__ultoa_invert+0x9c>
    2302:	67 0f       	add	r22, r23
    2304:	78 1f       	adc	r23, r24
    2306:	89 1f       	adc	r24, r25
    2308:	9a 1f       	adc	r25, r26
    230a:	a1 1d       	adc	r26, r1
    230c:	68 0f       	add	r22, r24
    230e:	79 1f       	adc	r23, r25
    2310:	8a 1f       	adc	r24, r26
    2312:	91 1d       	adc	r25, r1
    2314:	a1 1d       	adc	r26, r1
    2316:	6a 0f       	add	r22, r26
    2318:	71 1d       	adc	r23, r1
    231a:	81 1d       	adc	r24, r1
    231c:	91 1d       	adc	r25, r1
    231e:	a1 1d       	adc	r26, r1
    2320:	20 d0       	rcall	.+64     	; 0x2362 <__ultoa_invert+0x84>
    2322:	09 f4       	brne	.+2      	; 0x2326 <__ultoa_invert+0x48>
    2324:	68 94       	set
    2326:	3f 91       	pop	r19
    2328:	2a e0       	ldi	r18, 0x0A	; 10
    232a:	26 9f       	mul	r18, r22
    232c:	11 24       	eor	r1, r1
    232e:	30 19       	sub	r19, r0
    2330:	30 5d       	subi	r19, 0xD0	; 208
    2332:	31 93       	st	Z+, r19
    2334:	de f6       	brtc	.-74     	; 0x22ec <__ultoa_invert+0xe>
    2336:	cf 01       	movw	r24, r30
    2338:	08 95       	ret
    233a:	46 2f       	mov	r20, r22
    233c:	47 70       	andi	r20, 0x07	; 7
    233e:	40 5d       	subi	r20, 0xD0	; 208
    2340:	41 93       	st	Z+, r20
    2342:	b3 e0       	ldi	r27, 0x03	; 3
    2344:	0f d0       	rcall	.+30     	; 0x2364 <__ultoa_invert+0x86>
    2346:	c9 f7       	brne	.-14     	; 0x233a <__ultoa_invert+0x5c>
    2348:	f6 cf       	rjmp	.-20     	; 0x2336 <__ultoa_invert+0x58>
    234a:	46 2f       	mov	r20, r22
    234c:	4f 70       	andi	r20, 0x0F	; 15
    234e:	40 5d       	subi	r20, 0xD0	; 208
    2350:	4a 33       	cpi	r20, 0x3A	; 58
    2352:	18 f0       	brcs	.+6      	; 0x235a <__ultoa_invert+0x7c>
    2354:	49 5d       	subi	r20, 0xD9	; 217
    2356:	31 fd       	sbrc	r19, 1
    2358:	40 52       	subi	r20, 0x20	; 32
    235a:	41 93       	st	Z+, r20
    235c:	02 d0       	rcall	.+4      	; 0x2362 <__ultoa_invert+0x84>
    235e:	a9 f7       	brne	.-22     	; 0x234a <__ultoa_invert+0x6c>
    2360:	ea cf       	rjmp	.-44     	; 0x2336 <__ultoa_invert+0x58>
    2362:	b4 e0       	ldi	r27, 0x04	; 4
    2364:	a6 95       	lsr	r26
    2366:	97 95       	ror	r25
    2368:	87 95       	ror	r24
    236a:	77 95       	ror	r23
    236c:	67 95       	ror	r22
    236e:	ba 95       	dec	r27
    2370:	c9 f7       	brne	.-14     	; 0x2364 <__ultoa_invert+0x86>
    2372:	00 97       	sbiw	r24, 0x00	; 0
    2374:	61 05       	cpc	r22, r1
    2376:	71 05       	cpc	r23, r1
    2378:	08 95       	ret
    237a:	9b 01       	movw	r18, r22
    237c:	ac 01       	movw	r20, r24
    237e:	0a 2e       	mov	r0, r26
    2380:	06 94       	lsr	r0
    2382:	57 95       	ror	r21
    2384:	47 95       	ror	r20
    2386:	37 95       	ror	r19
    2388:	27 95       	ror	r18
    238a:	ba 95       	dec	r27
    238c:	c9 f7       	brne	.-14     	; 0x2380 <__ultoa_invert+0xa2>
    238e:	62 0f       	add	r22, r18
    2390:	73 1f       	adc	r23, r19
    2392:	84 1f       	adc	r24, r20
    2394:	95 1f       	adc	r25, r21
    2396:	a0 1d       	adc	r26, r0
    2398:	08 95       	ret

0000239a <__prologue_saves__>:
    239a:	2f 92       	push	r2
    239c:	3f 92       	push	r3
    239e:	4f 92       	push	r4
    23a0:	5f 92       	push	r5
    23a2:	6f 92       	push	r6
    23a4:	7f 92       	push	r7
    23a6:	8f 92       	push	r8
    23a8:	9f 92       	push	r9
    23aa:	af 92       	push	r10
    23ac:	bf 92       	push	r11
    23ae:	cf 92       	push	r12
    23b0:	df 92       	push	r13
    23b2:	ef 92       	push	r14
    23b4:	ff 92       	push	r15
    23b6:	0f 93       	push	r16
    23b8:	1f 93       	push	r17
    23ba:	cf 93       	push	r28
    23bc:	df 93       	push	r29
    23be:	cd b7       	in	r28, 0x3d	; 61
    23c0:	de b7       	in	r29, 0x3e	; 62
    23c2:	ca 1b       	sub	r28, r26
    23c4:	db 0b       	sbc	r29, r27
    23c6:	0f b6       	in	r0, 0x3f	; 63
    23c8:	f8 94       	cli
    23ca:	de bf       	out	0x3e, r29	; 62
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	cd bf       	out	0x3d, r28	; 61
    23d0:	09 94       	ijmp

000023d2 <__epilogue_restores__>:
    23d2:	2a 88       	ldd	r2, Y+18	; 0x12
    23d4:	39 88       	ldd	r3, Y+17	; 0x11
    23d6:	48 88       	ldd	r4, Y+16	; 0x10
    23d8:	5f 84       	ldd	r5, Y+15	; 0x0f
    23da:	6e 84       	ldd	r6, Y+14	; 0x0e
    23dc:	7d 84       	ldd	r7, Y+13	; 0x0d
    23de:	8c 84       	ldd	r8, Y+12	; 0x0c
    23e0:	9b 84       	ldd	r9, Y+11	; 0x0b
    23e2:	aa 84       	ldd	r10, Y+10	; 0x0a
    23e4:	b9 84       	ldd	r11, Y+9	; 0x09
    23e6:	c8 84       	ldd	r12, Y+8	; 0x08
    23e8:	df 80       	ldd	r13, Y+7	; 0x07
    23ea:	ee 80       	ldd	r14, Y+6	; 0x06
    23ec:	fd 80       	ldd	r15, Y+5	; 0x05
    23ee:	0c 81       	ldd	r16, Y+4	; 0x04
    23f0:	1b 81       	ldd	r17, Y+3	; 0x03
    23f2:	aa 81       	ldd	r26, Y+2	; 0x02
    23f4:	b9 81       	ldd	r27, Y+1	; 0x01
    23f6:	ce 0f       	add	r28, r30
    23f8:	d1 1d       	adc	r29, r1
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	ed 01       	movw	r28, r26
    2406:	08 95       	ret

00002408 <_exit>:
    2408:	f8 94       	cli

0000240a <__stop_program>:
    240a:	ff cf       	rjmp	.-2      	; 0x240a <__stop_program>
