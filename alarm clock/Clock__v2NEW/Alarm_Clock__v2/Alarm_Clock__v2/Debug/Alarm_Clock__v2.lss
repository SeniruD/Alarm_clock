
Alarm_Clock__v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006b4  00800100  0000295e  000029f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000295e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000073  008007b4  008007b4  000030a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000030a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003104  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00003144  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032fe  00000000  00000000  000032c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ba  00000000  00000000  000065c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001938  00000000  00000000  00006f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  000088b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c05  00000000  00000000  00008cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012f1  00000000  00000000  000098cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000abbe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 42 00 	jmp	0x84	; 0x84 <__ctors_end>
       4:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       8:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      10:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      14:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      18:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      1c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      20:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      24:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      28:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      30:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      3c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      44:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      48:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      50:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      54:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      58:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      5c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      60:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      68:	32 0a       	sbc	r3, r18
      6a:	35 0a       	sbc	r3, r21
      6c:	38 0a       	sbc	r3, r24
      6e:	3b 0a       	sbc	r3, r27
      70:	3e 0a       	sbc	r3, r30
      72:	41 0a       	sbc	r4, r17
      74:	44 0a       	sbc	r4, r20
      76:	5d 0a       	sbc	r5, r29
      78:	47 0a       	sbc	r4, r23
      7a:	4a 0a       	sbc	r4, r26
      7c:	4d 0a       	sbc	r4, r29
      7e:	50 0a       	sbc	r5, r16
      80:	57 0a       	sbc	r5, r23

00000082 <__ctors_start>:
      82:	b2 0f       	add	r27, r18

00000084 <__ctors_end>:
      84:	11 24       	eor	r1, r1
      86:	1f be       	out	0x3f, r1	; 63
      88:	cf ef       	ldi	r28, 0xFF	; 255
      8a:	d8 e0       	ldi	r29, 0x08	; 8
      8c:	de bf       	out	0x3e, r29	; 62
      8e:	cd bf       	out	0x3d, r28	; 61

00000090 <__do_copy_data>:
      90:	17 e0       	ldi	r17, 0x07	; 7
      92:	a0 e0       	ldi	r26, 0x00	; 0
      94:	b1 e0       	ldi	r27, 0x01	; 1
      96:	ee e5       	ldi	r30, 0x5E	; 94
      98:	f9 e2       	ldi	r31, 0x29	; 41
      9a:	02 c0       	rjmp	.+4      	; 0xa0 <__do_copy_data+0x10>
      9c:	05 90       	lpm	r0, Z+
      9e:	0d 92       	st	X+, r0
      a0:	a4 3b       	cpi	r26, 0xB4	; 180
      a2:	b1 07       	cpc	r27, r17
      a4:	d9 f7       	brne	.-10     	; 0x9c <__do_copy_data+0xc>

000000a6 <__do_clear_bss>:
      a6:	28 e0       	ldi	r18, 0x08	; 8
      a8:	a4 eb       	ldi	r26, 0xB4	; 180
      aa:	b7 e0       	ldi	r27, 0x07	; 7
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
      ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
      b0:	a7 32       	cpi	r26, 0x27	; 39
      b2:	b2 07       	cpc	r27, r18
      b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>

000000b6 <__do_global_ctors>:
      b6:	10 e0       	ldi	r17, 0x00	; 0
      b8:	c2 e4       	ldi	r28, 0x42	; 66
      ba:	d0 e0       	ldi	r29, 0x00	; 0
      bc:	04 c0       	rjmp	.+8      	; 0xc6 <__do_global_ctors+0x10>
      be:	21 97       	sbiw	r28, 0x01	; 1
      c0:	fe 01       	movw	r30, r28
      c2:	0e 94 31 11 	call	0x2262	; 0x2262 <__tablejump2__>
      c6:	c1 34       	cpi	r28, 0x41	; 65
      c8:	d1 07       	cpc	r29, r17
      ca:	c9 f7       	brne	.-14     	; 0xbe <__do_global_ctors+0x8>
      cc:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <main>
      d0:	0c 94 ad 14 	jmp	0x295a	; 0x295a <_exit>

000000d4 <__bad_interrupt>:
      d4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d8 <_Z41__static_initialization_and_destruction_0ii>:
	turnBacklightOn();
}


void setContrast()
{
      d8:	01 97       	sbiw	r24, 0x01	; 1
      da:	b9 f5       	brne	.+110    	; 0x14a <_Z41__static_initialization_and_destruction_0ii+0x72>
      dc:	6f 3f       	cpi	r22, 0xFF	; 255
      de:	7f 4f       	sbci	r23, 0xFF	; 255
      e0:	a1 f5       	brne	.+104    	; 0x14a <_Z41__static_initialization_and_destruction_0ii+0x72>
      e2:	a0 91 17 08 	lds	r26, 0x0817	; 0x800817 <startmins>
      e6:	b0 91 18 08 	lds	r27, 0x0818	; 0x800818 <startmins+0x1>
      ea:	b0 93 de 07 	sts	0x07DE, r27	; 0x8007de <mins+0x1>
      ee:	a0 93 dd 07 	sts	0x07DD, r26	; 0x8007dd <mins>
      f2:	60 91 19 08 	lds	r22, 0x0819	; 0x800819 <starthour>
      f6:	70 91 1a 08 	lds	r23, 0x081A	; 0x80081a <starthour+0x1>
      fa:	70 93 dc 07 	sts	0x07DC, r23	; 0x8007dc <hours+0x1>
      fe:	60 93 db 07 	sts	0x07DB, r22	; 0x8007db <hours>
     102:	40 91 15 08 	lds	r20, 0x0815	; 0x800815 <startdate>
     106:	50 91 16 08 	lds	r21, 0x0816	; 0x800816 <startdate+0x1>
     10a:	50 93 da 07 	sts	0x07DA, r21	; 0x8007da <date+0x1>
     10e:	40 93 d9 07 	sts	0x07D9, r20	; 0x8007d9 <date>
     112:	20 91 13 08 	lds	r18, 0x0813	; 0x800813 <startmnth>
     116:	30 91 14 08 	lds	r19, 0x0814	; 0x800814 <startmnth+0x1>
     11a:	30 93 d8 07 	sts	0x07D8, r19	; 0x8007d8 <month+0x1>
     11e:	20 93 d7 07 	sts	0x07D7, r18	; 0x8007d7 <month>
     122:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <startyr>
     126:	90 91 12 08 	lds	r25, 0x0812	; 0x800812 <startyr+0x1>
     12a:	90 93 d6 07 	sts	0x07D6, r25	; 0x8007d6 <yr+0x1>
     12e:	80 93 d5 07 	sts	0x07D5, r24	; 0x8007d5 <yr>
     132:	eb ec       	ldi	r30, 0xCB	; 203
     134:	f7 e0       	ldi	r31, 0x07	; 7
     136:	b1 83       	std	Z+1, r27	; 0x01
     138:	a0 83       	st	Z, r26
     13a:	73 83       	std	Z+3, r23	; 0x03
     13c:	62 83       	std	Z+2, r22	; 0x02
     13e:	55 83       	std	Z+5, r21	; 0x05
     140:	44 83       	std	Z+4, r20	; 0x04
     142:	37 83       	std	Z+7, r19	; 0x07
     144:	26 83       	std	Z+6, r18	; 0x06
     146:	91 87       	std	Z+9, r25	; 0x09
     148:	80 87       	std	Z+8, r24	; 0x08
     14a:	08 95       	ret

0000014c <_Z11lcdCmdWritec>:
     14c:	98 2f       	mov	r25, r24
     14e:	90 7f       	andi	r25, 0xF0	; 240
     150:	95 b9       	out	0x05, r25	; 5
     152:	95 b1       	in	r25, 0x05	; 5
     154:	9e 7f       	andi	r25, 0xFE	; 254
     156:	95 b9       	out	0x05, r25	; 5
     158:	95 b1       	in	r25, 0x05	; 5
     15a:	92 60       	ori	r25, 0x02	; 2
     15c:	95 b9       	out	0x05, r25	; 5
     15e:	ef ee       	ldi	r30, 0xEF	; 239
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <_Z11lcdCmdWritec+0x16>
     166:	00 c0       	rjmp	.+0      	; 0x168 <_Z11lcdCmdWritec+0x1c>
     168:	00 00       	nop
     16a:	95 b1       	in	r25, 0x05	; 5
     16c:	9d 7f       	andi	r25, 0xFD	; 253
     16e:	95 b9       	out	0x05, r25	; 5
     170:	fa e1       	ldi	r31, 0x1A	; 26
     172:	fa 95       	dec	r31
     174:	f1 f7       	brne	.-4      	; 0x172 <_Z11lcdCmdWritec+0x26>
     176:	00 c0       	rjmp	.+0      	; 0x178 <_Z11lcdCmdWritec+0x2c>
     178:	20 e1       	ldi	r18, 0x10	; 16
     17a:	82 9f       	mul	r24, r18
     17c:	c0 01       	movw	r24, r0
     17e:	11 24       	eor	r1, r1
     180:	85 b9       	out	0x05, r24	; 5
     182:	85 b1       	in	r24, 0x05	; 5
     184:	8e 7f       	andi	r24, 0xFE	; 254
     186:	85 b9       	out	0x05, r24	; 5
     188:	85 b1       	in	r24, 0x05	; 5
     18a:	82 60       	ori	r24, 0x02	; 2
     18c:	85 b9       	out	0x05, r24	; 5
     18e:	8f ee       	ldi	r24, 0xEF	; 239
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <_Z11lcdCmdWritec+0x46>
     196:	00 c0       	rjmp	.+0      	; 0x198 <_Z11lcdCmdWritec+0x4c>
     198:	00 00       	nop
     19a:	85 b1       	in	r24, 0x05	; 5
     19c:	8d 7f       	andi	r24, 0xFD	; 253
     19e:	85 b9       	out	0x05, r24	; 5
     1a0:	ef ec       	ldi	r30, 0xCF	; 207
     1a2:	f7 e0       	ldi	r31, 0x07	; 7
     1a4:	31 97       	sbiw	r30, 0x01	; 1
     1a6:	f1 f7       	brne	.-4      	; 0x1a4 <_Z11lcdCmdWritec+0x58>
     1a8:	00 c0       	rjmp	.+0      	; 0x1aa <_Z11lcdCmdWritec+0x5e>
     1aa:	00 00       	nop
     1ac:	08 95       	ret

000001ae <_Z7lcdInitv>:
     1ae:	8f e3       	ldi	r24, 0x3F	; 63
     1b0:	9c e9       	ldi	r25, 0x9C	; 156
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <_Z7lcdInitv+0x4>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <_Z7lcdInitv+0xa>
     1b8:	00 00       	nop
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1c0:	88 e2       	ldi	r24, 0x28	; 40
     1c2:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1c6:	8c e0       	ldi	r24, 0x0C	; 12
     1c8:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1d8:	80 e8       	ldi	r24, 0x80	; 128
     1da:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     1de:	08 95       	ret

000001e0 <_Z12lcdDataWritec>:
     1e0:	98 2f       	mov	r25, r24
     1e2:	90 7f       	andi	r25, 0xF0	; 240
     1e4:	95 b9       	out	0x05, r25	; 5
     1e6:	95 b1       	in	r25, 0x05	; 5
     1e8:	91 60       	ori	r25, 0x01	; 1
     1ea:	95 b9       	out	0x05, r25	; 5
     1ec:	95 b1       	in	r25, 0x05	; 5
     1ee:	92 60       	ori	r25, 0x02	; 2
     1f0:	95 b9       	out	0x05, r25	; 5
     1f2:	ef ee       	ldi	r30, 0xEF	; 239
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	31 97       	sbiw	r30, 0x01	; 1
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <_Z12lcdDataWritec+0x16>
     1fa:	00 c0       	rjmp	.+0      	; 0x1fc <_Z12lcdDataWritec+0x1c>
     1fc:	00 00       	nop
     1fe:	95 b1       	in	r25, 0x05	; 5
     200:	9d 7f       	andi	r25, 0xFD	; 253
     202:	95 b9       	out	0x05, r25	; 5
     204:	fa e1       	ldi	r31, 0x1A	; 26
     206:	fa 95       	dec	r31
     208:	f1 f7       	brne	.-4      	; 0x206 <_Z12lcdDataWritec+0x26>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <_Z12lcdDataWritec+0x2c>
     20c:	20 e1       	ldi	r18, 0x10	; 16
     20e:	82 9f       	mul	r24, r18
     210:	c0 01       	movw	r24, r0
     212:	11 24       	eor	r1, r1
     214:	85 b9       	out	0x05, r24	; 5
     216:	85 b1       	in	r24, 0x05	; 5
     218:	81 60       	ori	r24, 0x01	; 1
     21a:	85 b9       	out	0x05, r24	; 5
     21c:	85 b1       	in	r24, 0x05	; 5
     21e:	82 60       	ori	r24, 0x02	; 2
     220:	85 b9       	out	0x05, r24	; 5
     222:	8f ee       	ldi	r24, 0xEF	; 239
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	01 97       	sbiw	r24, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <_Z12lcdDataWritec+0x46>
     22a:	00 c0       	rjmp	.+0      	; 0x22c <_Z12lcdDataWritec+0x4c>
     22c:	00 00       	nop
     22e:	85 b1       	in	r24, 0x05	; 5
     230:	8d 7f       	andi	r24, 0xFD	; 253
     232:	85 b9       	out	0x05, r24	; 5
     234:	ef ec       	ldi	r30, 0xCF	; 207
     236:	f7 e0       	ldi	r31, 0x07	; 7
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <_Z12lcdDataWritec+0x58>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <_Z12lcdDataWritec+0x5e>
     23e:	00 00       	nop
     240:	08 95       	ret

00000242 <_Z8lcdClearv>:
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     248:	80 e8       	ldi	r24, 0x80	; 128
     24a:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     24e:	08 95       	ret

00000250 <_Z8lcdPrintPc>:
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	ec 01       	movw	r28, r24
     256:	88 81       	ld	r24, Y
     258:	88 23       	and	r24, r24
     25a:	21 f0       	breq	.+8      	; 0x264 <_Z8lcdPrintPc+0x14>
     25c:	21 96       	adiw	r28, 0x01	; 1
     25e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z12lcdDataWritec>
     262:	f9 cf       	rjmp	.-14     	; 0x256 <_Z8lcdPrintPc+0x6>
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	08 95       	ret

0000026a <_Z12lcdSetCursorcc>:
     26a:	61 11       	cpse	r22, r1
     26c:	07 c0       	rjmp	.+14     	; 0x27c <_Z12lcdSetCursorcc+0x12>
     26e:	80 31       	cpi	r24, 0x10	; 16
     270:	28 f4       	brcc	.+10     	; 0x27c <_Z12lcdSetCursorcc+0x12>
     272:	8f 70       	andi	r24, 0x0F	; 15
     274:	80 68       	ori	r24, 0x80	; 128
     276:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     27a:	1a c0       	rjmp	.+52     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     27c:	61 30       	cpi	r22, 0x01	; 1
     27e:	39 f4       	brne	.+14     	; 0x28e <_Z12lcdSetCursorcc+0x24>
     280:	80 31       	cpi	r24, 0x10	; 16
     282:	28 f4       	brcc	.+10     	; 0x28e <_Z12lcdSetCursorcc+0x24>
     284:	8f 70       	andi	r24, 0x0F	; 15
     286:	80 6c       	ori	r24, 0xC0	; 192
     288:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     28c:	11 c0       	rjmp	.+34     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     28e:	62 30       	cpi	r22, 0x02	; 2
     290:	39 f4       	brne	.+14     	; 0x2a0 <_Z12lcdSetCursorcc+0x36>
     292:	80 31       	cpi	r24, 0x10	; 16
     294:	28 f4       	brcc	.+10     	; 0x2a0 <_Z12lcdSetCursorcc+0x36>
     296:	8f 70       	andi	r24, 0x0F	; 15
     298:	80 69       	ori	r24, 0x90	; 144
     29a:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     29e:	08 c0       	rjmp	.+16     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a0:	63 30       	cpi	r22, 0x03	; 3
     2a2:	31 f4       	brne	.+12     	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a4:	80 31       	cpi	r24, 0x10	; 16
     2a6:	20 f4       	brcc	.+8      	; 0x2b0 <_Z12lcdSetCursorcc+0x46>
     2a8:	8f 70       	andi	r24, 0x0F	; 15
     2aa:	80 6d       	ori	r24, 0xD0	; 208
     2ac:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     2b0:	8c e0       	ldi	r24, 0x0C	; 12
     2b2:	0e 94 a6 00 	call	0x14c	; 0x14c <_Z11lcdCmdWritec>
     2b6:	08 95       	ret

000002b8 <_Z12lcdClearLinei>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	6f ef       	ldi	r22, 0xFF	; 255
     2be:	68 0f       	add	r22, r24
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     2c6:	c0 e0       	ldi	r28, 0x00	; 0
     2c8:	d0 e0       	ldi	r29, 0x00	; 0
     2ca:	c0 31       	cpi	r28, 0x10	; 16
     2cc:	d1 05       	cpc	r29, r1
     2ce:	34 f4       	brge	.+12     	; 0x2dc <_Z12lcdClearLinei+0x24>
     2d0:	8e e2       	ldi	r24, 0x2E	; 46
     2d2:	97 e0       	ldi	r25, 0x07	; 7
     2d4:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     2d8:	21 96       	adiw	r28, 0x01	; 1
     2da:	f7 cf       	rjmp	.-18     	; 0x2ca <_Z12lcdClearLinei+0x12>
     2dc:	df 91       	pop	r29
     2de:	cf 91       	pop	r28
     2e0:	08 95       	ret

000002e2 <_Z11digitalReadi>:
     2e2:	29 b1       	in	r18, 0x09	; 9
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	20 95       	com	r18
     2e8:	30 95       	com	r19
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <_Z11digitalReadi+0xe>
     2ec:	35 95       	asr	r19
     2ee:	27 95       	ror	r18
     2f0:	8a 95       	dec	r24
     2f2:	e2 f7       	brpl	.-8      	; 0x2ec <_Z11digitalReadi+0xa>
     2f4:	c9 01       	movw	r24, r18
     2f6:	81 70       	andi	r24, 0x01	; 1
     2f8:	99 27       	eor	r25, r25
     2fa:	20 ff       	sbrs	r18, 0
     2fc:	02 c0       	rjmp	.+4      	; 0x302 <_Z11digitalReadi+0x20>
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	08 95       	ret

00000304 <_Z8i2c_initv>:
     304:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     308:	80 e2       	ldi	r24, 0x20	; 32
     30a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     30e:	08 95       	ret

00000310 <_Z9i2c_startv>:
     310:	84 ea       	ldi	r24, 0xA4	; 164
     312:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     316:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     31a:	88 23       	and	r24, r24
     31c:	e4 f7       	brge	.-8      	; 0x316 <_Z9i2c_startv+0x6>
     31e:	08 95       	ret

00000320 <_Z8i2c_stopv>:
     320:	84 e9       	ldi	r24, 0x94	; 148
     322:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     326:	08 95       	ret

00000328 <_Z9i2c_writec>:
     328:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     32c:	84 e8       	ldi	r24, 0x84	; 132
     32e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     332:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     336:	88 23       	and	r24, r24
     338:	e4 f7       	brge	.-8      	; 0x332 <_Z9i2c_writec+0xa>
     33a:	08 95       	ret

0000033c <_Z8i2c_readv>:
     33c:	84 ec       	ldi	r24, 0xC4	; 196
     33e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     342:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     346:	88 23       	and	r24, r24
     348:	e4 f7       	brge	.-8      	; 0x342 <_Z8i2c_readv+0x6>
     34a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     34e:	08 95       	ret

00000350 <_Z11i2c_readNakv>:
     350:	84 e8       	ldi	r24, 0x84	; 132
     352:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     356:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     35a:	88 23       	and	r24, r24
     35c:	e4 f7       	brge	.-8      	; 0x356 <_Z11i2c_readNakv+0x6>
     35e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     362:	08 95       	ret

00000364 <_Z8time_setv>:
     364:	0e 94 82 01 	call	0x304	; 0x304 <_Z8i2c_initv>
     368:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     36c:	80 ed       	ldi	r24, 0xD0	; 208
     36e:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     372:	87 e0       	ldi	r24, 0x07	; 7
     374:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     37e:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     382:	8f e9       	ldi	r24, 0x9F	; 159
     384:	9f e0       	ldi	r25, 0x0F	; 15
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <_Z8time_setv+0x22>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <_Z8time_setv+0x28>
     38c:	00 00       	nop
     38e:	08 95       	ret

00000390 <_Z14RTC_Read_ClockP5rtc_t>:
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	ec 01       	movw	r28, r24
     396:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     39a:	80 ed       	ldi	r24, 0xD0	; 208
     39c:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3a6:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     3aa:	0e 94 88 01 	call	0x310	; 0x310 <_Z9i2c_startv>
     3ae:	81 ed       	ldi	r24, 0xD1	; 209
     3b0:	0e 94 94 01 	call	0x328	; 0x328 <_Z9i2c_writec>
     3b4:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3b8:	88 83       	st	Y, r24
     3ba:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3be:	89 83       	std	Y+1, r24	; 0x01
     3c0:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3c4:	8a 83       	std	Y+2, r24	; 0x02
     3c6:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3ca:	8b 83       	std	Y+3, r24	; 0x03
     3cc:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3d0:	8c 83       	std	Y+4, r24	; 0x04
     3d2:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z8i2c_readv>
     3d6:	8d 83       	std	Y+5, r24	; 0x05
     3d8:	0e 94 a8 01 	call	0x350	; 0x350 <_Z11i2c_readNakv>
     3dc:	8e 83       	std	Y+6, r24	; 0x06
     3de:	0e 94 90 01 	call	0x320	; 0x320 <_Z8i2c_stopv>
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <_Z14timeDisplayIntv>:
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	cd b7       	in	r28, 0x3d	; 61
     3f6:	de b7       	in	r29, 0x3e	; 62
     3f8:	a5 97       	sbiw	r28, 0x25	; 37
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	f8 94       	cli
     3fe:	de bf       	out	0x3e, r29	; 62
     400:	0f be       	out	0x3f, r0	; 63
     402:	cd bf       	out	0x3d, r28	; 61
     404:	0e 94 82 01 	call	0x304	; 0x304 <_Z8i2c_initv>
     408:	0e 94 b2 01 	call	0x364	; 0x364 <_Z8time_setv>
     40c:	ce 01       	movw	r24, r28
     40e:	4f 96       	adiw	r24, 0x1f	; 31
     410:	0e 94 c8 01 	call	0x390	; 0x390 <_Z14RTC_Read_ClockP5rtc_t>
     414:	4f 8d       	ldd	r20, Y+31	; 0x1f
     416:	84 2f       	mov	r24, r20
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	90 93 26 08 	sts	0x0826, r25	; 0x800826 <secs+0x1>
     41e:	80 93 25 08 	sts	0x0825, r24	; 0x800825 <secs>
     422:	38 a1       	ldd	r19, Y+32	; 0x20
     424:	83 2f       	mov	r24, r19
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <min+0x1>
     42c:	80 93 21 08 	sts	0x0821, r24	; 0x800821 <min>
     430:	29 a1       	ldd	r18, Y+33	; 0x21
     432:	82 2f       	mov	r24, r18
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <hor+0x1>
     43a:	80 93 23 08 	sts	0x0823, r24	; 0x800823 <hor>
     43e:	8d a1       	ldd	r24, Y+37	; 0x25
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	90 93 20 08 	sts	0x0820, r25	; 0x800820 <y+0x1>
     446:	80 93 1f 08 	sts	0x081F, r24	; 0x80081f <y>
     44a:	8c a1       	ldd	r24, Y+36	; 0x24
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	90 93 1e 08 	sts	0x081E, r25	; 0x80081e <m+0x1>
     452:	80 93 1d 08 	sts	0x081D, r24	; 0x80081d <m>
     456:	8b a1       	ldd	r24, Y+35	; 0x23
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	90 93 1c 08 	sts	0x081C, r25	; 0x80081c <d+0x1>
     45e:	80 93 1b 08 	sts	0x081B, r24	; 0x80081b <d>
     462:	1f 92       	push	r1
     464:	4f 93       	push	r20
     466:	1f 92       	push	r1
     468:	3f 93       	push	r19
     46a:	1f 92       	push	r1
     46c:	2f 93       	push	r18
     46e:	06 ed       	ldi	r16, 0xD6	; 214
     470:	15 e0       	ldi	r17, 0x05	; 5
     472:	1f 93       	push	r17
     474:	0f 93       	push	r16
     476:	ce 01       	movw	r24, r28
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	7c 01       	movw	r14, r24
     47c:	9f 93       	push	r25
     47e:	8f 93       	push	r24
     480:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
     484:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <y+0x1>
     488:	8f 93       	push	r24
     48a:	80 91 1f 08 	lds	r24, 0x081F	; 0x80081f <y>
     48e:	8f 93       	push	r24
     490:	80 91 1e 08 	lds	r24, 0x081E	; 0x80081e <m+0x1>
     494:	8f 93       	push	r24
     496:	80 91 1d 08 	lds	r24, 0x081D	; 0x80081d <m>
     49a:	8f 93       	push	r24
     49c:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <d+0x1>
     4a0:	8f 93       	push	r24
     4a2:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <d>
     4a6:	8f 93       	push	r24
     4a8:	1f 93       	push	r17
     4aa:	0f 93       	push	r16
     4ac:	8e 01       	movw	r16, r28
     4ae:	05 5f       	subi	r16, 0xF5	; 245
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	1f 93       	push	r17
     4b4:	0f 93       	push	r16
     4b6:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	84 e0       	ldi	r24, 0x04	; 4
     4be:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     4c2:	c7 01       	movw	r24, r14
     4c4:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     4c8:	61 e0       	ldi	r22, 0x01	; 1
     4ca:	84 e0       	ldi	r24, 0x04	; 4
     4cc:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     4d0:	c8 01       	movw	r24, r16
     4d2:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     4d6:	0f b6       	in	r0, 0x3f	; 63
     4d8:	f8 94       	cli
     4da:	de bf       	out	0x3e, r29	; 62
     4dc:	0f be       	out	0x3f, r0	; 63
     4de:	cd bf       	out	0x3d, r28	; 61
     4e0:	a5 96       	adiw	r28, 0x25	; 37
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	f8 94       	cli
     4e6:	de bf       	out	0x3e, r29	; 62
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	cd bf       	out	0x3d, r28	; 61
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	08 95       	ret

000004fa <_Z11mainMenuIntv>:
     4fa:	60 e0       	ldi	r22, 0x00	; 0
     4fc:	84 e0       	ldi	r24, 0x04	; 4
     4fe:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     502:	85 ee       	ldi	r24, 0xE5	; 229
     504:	95 e0       	ldi	r25, 0x05	; 5
     506:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     50a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     50e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     512:	81 30       	cpi	r24, 0x01	; 1
     514:	91 05       	cpc	r25, r1
     516:	49 f4       	brne	.+18     	; 0x52a <_Z11mainMenuIntv+0x30>
     518:	61 e0       	ldi	r22, 0x01	; 1
     51a:	83 e0       	ldi	r24, 0x03	; 3
     51c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     520:	8f ee       	ldi	r24, 0xEF	; 239
     522:	95 e0       	ldi	r25, 0x05	; 5
     524:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     528:	08 95       	ret
     52a:	82 30       	cpi	r24, 0x02	; 2
     52c:	91 05       	cpc	r25, r1
     52e:	49 f4       	brne	.+18     	; 0x542 <_Z11mainMenuIntv+0x48>
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     538:	8b ef       	ldi	r24, 0xFB	; 251
     53a:	95 e0       	ldi	r25, 0x05	; 5
     53c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     540:	08 95       	ret
     542:	03 97       	sbiw	r24, 0x03	; 3
     544:	41 f4       	brne	.+16     	; 0x556 <_Z11mainMenuIntv+0x5c>
     546:	61 e0       	ldi	r22, 0x01	; 1
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     54e:	8b e0       	ldi	r24, 0x0B	; 11
     550:	96 e0       	ldi	r25, 0x06	; 6
     552:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     556:	08 95       	ret

00000558 <_Z12alarmMenuIntv>:
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	84 e0       	ldi	r24, 0x04	; 4
     55c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     560:	8a e1       	ldi	r24, 0x1A	; 26
     562:	96 e0       	ldi	r25, 0x06	; 6
     564:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     568:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     56c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     570:	81 30       	cpi	r24, 0x01	; 1
     572:	91 05       	cpc	r25, r1
     574:	49 f4       	brne	.+18     	; 0x588 <_Z12alarmMenuIntv+0x30>
     576:	61 e0       	ldi	r22, 0x01	; 1
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     57e:	85 e2       	ldi	r24, 0x25	; 37
     580:	96 e0       	ldi	r25, 0x06	; 6
     582:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     586:	08 95       	ret
     588:	02 97       	sbiw	r24, 0x02	; 2
     58a:	41 f4       	brne	.+16     	; 0x59c <_Z12alarmMenuIntv+0x44>
     58c:	61 e0       	ldi	r22, 0x01	; 1
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     594:	85 e3       	ldi	r24, 0x35	; 53
     596:	96 e0       	ldi	r25, 0x06	; 6
     598:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     59c:	08 95       	ret

0000059e <_Z14settingMenuIntv>:
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	84 e0       	ldi	r24, 0x04	; 4
     5a2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5a6:	83 ed       	ldi	r24, 0xD3	; 211
     5a8:	96 e0       	ldi	r25, 0x06	; 6
     5aa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	91 05       	cpc	r25, r1
     5ba:	49 f4       	brne	.+18     	; 0x5ce <_Z14settingMenuIntv+0x30>
     5bc:	61 e0       	ldi	r22, 0x01	; 1
     5be:	83 e0       	ldi	r24, 0x03	; 3
     5c0:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5c4:	83 e4       	ldi	r24, 0x43	; 67
     5c6:	96 e0       	ldi	r25, 0x06	; 6
     5c8:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5cc:	08 95       	ret
     5ce:	82 30       	cpi	r24, 0x02	; 2
     5d0:	91 05       	cpc	r25, r1
     5d2:	49 f4       	brne	.+18     	; 0x5e6 <_Z14settingMenuIntv+0x48>
     5d4:	61 e0       	ldi	r22, 0x01	; 1
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5dc:	8e e4       	ldi	r24, 0x4E	; 78
     5de:	96 e0       	ldi	r25, 0x06	; 6
     5e0:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5e4:	08 95       	ret
     5e6:	03 97       	sbiw	r24, 0x03	; 3
     5e8:	41 f4       	brne	.+16     	; 0x5fa <_Z14settingMenuIntv+0x5c>
     5ea:	61 e0       	ldi	r22, 0x01	; 1
     5ec:	84 e0       	ldi	r24, 0x04	; 4
     5ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     5f2:	8b e5       	ldi	r24, 0x5B	; 91
     5f4:	96 e0       	ldi	r25, 0x06	; 6
     5f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     5fa:	08 95       	ret

000005fc <_Z9volumeIntv>:
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
     604:	2a 97       	sbiw	r28, 0x0a	; 10
     606:	0f b6       	in	r0, 0x3f	; 63
     608:	f8 94       	cli
     60a:	de bf       	out	0x3e, r29	; 62
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	cd bf       	out	0x3d, r28	; 61
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	85 e0       	ldi	r24, 0x05	; 5
     614:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     618:	85 e6       	ldi	r24, 0x65	; 101
     61a:	96 e0       	ldi	r25, 0x06	; 6
     61c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     620:	61 e0       	ldi	r22, 0x01	; 1
     622:	87 e0       	ldi	r24, 0x07	; 7
     624:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     628:	4a e0       	ldi	r20, 0x0A	; 10
     62a:	be 01       	movw	r22, r28
     62c:	6f 5f       	subi	r22, 0xFF	; 255
     62e:	7f 4f       	sbci	r23, 0xFF	; 255
     630:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
     634:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
     638:	0e 94 86 11 	call	0x230c	; 0x230c <__itoa_ncheck>
     63c:	ce 01       	movw	r24, r28
     63e:	01 96       	adiw	r24, 0x01	; 1
     640:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     644:	2a 96       	adiw	r28, 0x0a	; 10
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	de bf       	out	0x3e, r29	; 62
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	cd bf       	out	0x3d, r28	; 61
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <_Z11contrastIntv>:
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	2a 97       	sbiw	r28, 0x0a	; 10
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	60 e0       	ldi	r22, 0x00	; 0
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     672:	82 e7       	ldi	r24, 0x72	; 114
     674:	96 e0       	ldi	r25, 0x06	; 6
     676:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	87 e0       	ldi	r24, 0x07	; 7
     67e:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     682:	4a e0       	ldi	r20, 0x0A	; 10
     684:	be 01       	movw	r22, r28
     686:	6f 5f       	subi	r22, 0xFF	; 255
     688:	7f 4f       	sbci	r23, 0xFF	; 255
     68a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
     68e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
     692:	0e 94 86 11 	call	0x230c	; 0x230c <__itoa_ncheck>
     696:	ce 01       	movw	r24, r28
     698:	01 96       	adiw	r24, 0x01	; 1
     69a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     69e:	2a 96       	adiw	r28, 0x0a	; 10
     6a0:	0f b6       	in	r0, 0x3f	; 63
     6a2:	f8 94       	cli
     6a4:	de bf       	out	0x3e, r29	; 62
     6a6:	0f be       	out	0x3f, r0	; 63
     6a8:	cd bf       	out	0x3d, r28	; 61
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <_Z13alarmTonesIntv>:
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	83 e0       	ldi	r24, 0x03	; 3
     6b4:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6b8:	8f e7       	ldi	r24, 0x7F	; 127
     6ba:	96 e0       	ldi	r25, 0x06	; 6
     6bc:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6c8:	81 30       	cpi	r24, 0x01	; 1
     6ca:	91 05       	cpc	r25, r1
     6cc:	49 f4       	brne	.+18     	; 0x6e0 <_Z13alarmTonesIntv+0x30>
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	82 e0       	ldi	r24, 0x02	; 2
     6d2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6d6:	8b e8       	ldi	r24, 0x8B	; 139
     6d8:	96 e0       	ldi	r25, 0x06	; 6
     6da:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6de:	08 95       	ret
     6e0:	82 30       	cpi	r24, 0x02	; 2
     6e2:	91 05       	cpc	r25, r1
     6e4:	49 f4       	brne	.+18     	; 0x6f8 <_Z13alarmTonesIntv+0x48>
     6e6:	61 e0       	ldi	r22, 0x01	; 1
     6e8:	82 e0       	ldi	r24, 0x02	; 2
     6ea:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     6ee:	87 e9       	ldi	r24, 0x97	; 151
     6f0:	96 e0       	ldi	r25, 0x06	; 6
     6f2:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     6f6:	08 95       	ret
     6f8:	83 30       	cpi	r24, 0x03	; 3
     6fa:	91 05       	cpc	r25, r1
     6fc:	49 f4       	brne	.+18     	; 0x710 <_Z13alarmTonesIntv+0x60>
     6fe:	61 e0       	ldi	r22, 0x01	; 1
     700:	82 e0       	ldi	r24, 0x02	; 2
     702:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     706:	86 ea       	ldi	r24, 0xA6	; 166
     708:	96 e0       	ldi	r25, 0x06	; 6
     70a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     70e:	08 95       	ret
     710:	84 30       	cpi	r24, 0x04	; 4
     712:	91 05       	cpc	r25, r1
     714:	49 f4       	brne	.+18     	; 0x728 <_Z13alarmTonesIntv+0x78>
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	82 e0       	ldi	r24, 0x02	; 2
     71a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     71e:	82 eb       	ldi	r24, 0xB2	; 178
     720:	96 e0       	ldi	r25, 0x06	; 6
     722:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     726:	08 95       	ret
     728:	05 97       	sbiw	r24, 0x05	; 5
     72a:	41 f4       	brne	.+16     	; 0x73c <_Z13alarmTonesIntv+0x8c>
     72c:	61 e0       	ldi	r22, 0x01	; 1
     72e:	82 e0       	ldi	r24, 0x02	; 2
     730:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     734:	81 ec       	ldi	r24, 0xC1	; 193
     736:	96 e0       	ldi	r25, 0x06	; 6
     738:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     73c:	08 95       	ret

0000073e <_Z15alarmSettingIntv>:
     73e:	60 e0       	ldi	r22, 0x00	; 0
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     746:	8d ec       	ldi	r24, 0xCD	; 205
     748:	96 e0       	ldi	r25, 0x06	; 6
     74a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     74e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     752:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     756:	81 30       	cpi	r24, 0x01	; 1
     758:	91 05       	cpc	r25, r1
     75a:	49 f4       	brne	.+18     	; 0x76e <_Z15alarmSettingIntv+0x30>
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     764:	8c ed       	ldi	r24, 0xDC	; 220
     766:	96 e0       	ldi	r25, 0x06	; 6
     768:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     76c:	08 95       	ret
     76e:	02 97       	sbiw	r24, 0x02	; 2
     770:	41 f4       	brne	.+16     	; 0x782 <_Z15alarmSettingIntv+0x44>
     772:	61 e0       	ldi	r22, 0x01	; 1
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
     77a:	89 ee       	ldi	r24, 0xE9	; 233
     77c:	96 e0       	ldi	r25, 0x06	; 6
     77e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     782:	08 95       	ret

00000784 <_Z15turnBacklightOnv>:
	//lcd.backlight(contrast);
}

void turnBacklightOn()
{
	setBit(PORTD,0);
     784:	8b b1       	in	r24, 0x0b	; 11
     786:	81 60       	ori	r24, 0x01	; 1
     788:	8b b9       	out	0x0b, r24	; 11
     78a:	08 95       	ret

0000078c <_Z13resetDefaultsv>:
	}
}

void resetDefaults()
{
	volume = 10;
     78c:	8a e0       	ldi	r24, 0x0A	; 10
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
     794:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
	contrast = 50;
     798:	82 e3       	ldi	r24, 0x32	; 50
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
     7a0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
	setContrast();
	backlight = true;
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <backlight>
	turnBacklightOn();
     7aa:	0e 94 c2 03 	call	0x784	; 0x784 <_Z15turnBacklightOnv>
     7ae:	08 95       	ret

000007b0 <_Z16turnBacklightOffv>:
	setBit(PORTD,0);
}

void turnBacklightOff()
{
	clearBit(PORTD,0);
     7b0:	8b b1       	in	r24, 0x0b	; 11
     7b2:	8e 7f       	andi	r24, 0xFE	; 254
     7b4:	8b b9       	out	0x0b, r24	; 11
     7b6:	08 95       	ret

000007b8 <_Z14pressed_buttoni>:
	}
}

bool pressed_button (int btn)		//determines whether the given button is pressed or not
{
	if (!(PIND & (1<<btn)))
     7b8:	29 b1       	in	r18, 0x09	; 9
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <_Z14pressed_buttoni+0xa>
     7be:	35 95       	asr	r19
     7c0:	27 95       	ror	r18
     7c2:	8a 95       	dec	r24
     7c4:	e2 f7       	brpl	.-8      	; 0x7be <_Z14pressed_buttoni+0x6>
     7c6:	20 fd       	sbrc	r18, 0
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <_Z14pressed_buttoni+0x16>
	{
		return true;
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	08 95       	ret
	}
	else
	{
		return false;
     7ce:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     7d0:	08 95       	ret

000007d2 <_Z14dateTimeSetIntv>:
void deleteAlarm(int alarmNo);



void dateTimeSetInt()		//set date and time
{
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	cd b7       	in	r28, 0x3d	; 61
     7dc:	de b7       	in	r29, 0x3e	; 62
     7de:	2a 97       	sbiw	r28, 0x0a	; 10
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	de bf       	out	0x3e, r29	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	cd bf       	out	0x3d, r28	; 61
	while(true)
	{
		
		
		
		lcdSetCursor(0,0);
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Hr:    ");
     7f2:	88 ef       	ldi	r24, 0xF8	; 248
     7f4:	96 e0       	ldi	r25, 0x06	; 6
     7f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_sthour[10];
		sprintf(str_sthour,"%x",hours);
     7fa:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <hours+0x1>
     7fe:	8f 93       	push	r24
     800:	80 91 db 07 	lds	r24, 0x07DB	; 0x8007db <hours>
     804:	8f 93       	push	r24
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	97 e0       	ldi	r25, 0x07	; 7
     80a:	9f 93       	push	r25
     80c:	8f 93       	push	r24
     80e:	8e 01       	movw	r16, r28
     810:	0f 5f       	subi	r16, 0xFF	; 255
     812:	1f 4f       	sbci	r17, 0xFF	; 255
     814:	1f 93       	push	r17
     816:	0f 93       	push	r16
     818:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     81c:	61 e0       	ldi	r22, 0x01	; 1
     81e:	87 e0       	ldi	r24, 0x07	; 7
     820:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_sthour);
     824:	c8 01       	movw	r24, r16
     826:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     82a:	8e e2       	ldi	r24, 0x2E	; 46
     82c:	97 e0       	ldi	r25, 0x07	; 7
     82e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	0f 90       	pop	r0
     846:	88 23       	and	r24, r24
     848:	71 f0       	breq	.+28     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
		{
			hours++;
     84a:	80 91 db 07 	lds	r24, 0x07DB	; 0x8007db <hours>
     84e:	90 91 dc 07 	lds	r25, 0x07DC	; 0x8007dc <hours+0x1>
     852:	01 96       	adiw	r24, 0x01	; 1
			hours%=24;
     854:	68 e1       	ldi	r22, 0x18	; 24
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
     85c:	90 93 dc 07 	sts	0x07DC, r25	; 0x8007dc <hours+0x1>
     860:	80 93 db 07 	sts	0x07DB, r24	; 0x8007db <hours>
     864:	31 c0       	rjmp	.+98     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
		}
		else if (pressed_button(PIND7))
     866:	87 e0       	ldi	r24, 0x07	; 7
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     86e:	88 23       	and	r24, r24
     870:	b1 f0       	breq	.+44     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
		{
			hours--;
     872:	80 91 db 07 	lds	r24, 0x07DB	; 0x8007db <hours>
     876:	90 91 dc 07 	lds	r25, 0x07DC	; 0x8007dc <hours+0x1>
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	90 93 dc 07 	sts	0x07DC, r25	; 0x8007dc <hours+0x1>
     880:	80 93 db 07 	sts	0x07DB, r24	; 0x8007db <hours>
			if (hor<0)
     884:	80 91 23 08 	lds	r24, 0x0823	; 0x800823 <hor>
     888:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <hor+0x1>
     88c:	99 23       	and	r25, r25
     88e:	e4 f4       	brge	.+56     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
			{
				hours=23;
     890:	87 e1       	ldi	r24, 0x17	; 23
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	90 93 dc 07 	sts	0x07DC, r25	; 0x8007dc <hours+0x1>
     898:	80 93 db 07 	sts	0x07DB, r24	; 0x8007db <hours>
     89c:	15 c0       	rjmp	.+42     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
			}
		}
		else if (pressed_button(PIND6))
     89e:	86 e0       	ldi	r24, 0x06	; 6
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     8a6:	88 23       	and	r24, r24
     8a8:	49 f0       	breq	.+18     	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
		{
			hor=hours;
     8aa:	80 91 db 07 	lds	r24, 0x07DB	; 0x8007db <hours>
     8ae:	90 91 dc 07 	lds	r25, 0x07DC	; 0x8007dc <hours+0x1>
     8b2:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <hor+0x1>
     8b6:	80 93 23 08 	sts	0x0823, r24	; 0x800823 <hor>
			break;
     8ba:	10 c0       	rjmp	.+32     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
		}
		else if (pressed_button(PIND4))
     8bc:	84 e0       	ldi	r24, 0x04	; 4
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     8c4:	81 11       	cpse	r24, r1
     8c6:	0a c0       	rjmp	.+20     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8c8:	2f ef       	ldi	r18, 0xFF	; 255
     8ca:	81 ee       	ldi	r24, 0xE1	; 225
     8cc:	94 e0       	ldi	r25, 0x04	; 4
     8ce:	21 50       	subi	r18, 0x01	; 1
     8d0:	80 40       	sbci	r24, 0x00	; 0
     8d2:	90 40       	sbci	r25, 0x00	; 0
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8d8:	00 00       	nop

void dateTimeSetInt()		//set date and time
{
	
	
	while(true)
     8da:	87 cf       	rjmp	.-242    	; 0x7ea <_Z14dateTimeSetIntv+0x18>
     8dc:	2f ef       	ldi	r18, 0xFF	; 255
     8de:	81 ee       	ldi	r24, 0xE1	; 225
     8e0:	94 e0       	ldi	r25, 0x04	; 4
     8e2:	21 50       	subi	r18, 0x01	; 1
     8e4:	80 40       	sbci	r24, 0x00	; 0
     8e6:	90 40       	sbci	r25, 0x00	; 0
     8e8:	e1 f7       	brne	.-8      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
     8ea:	00 c0       	rjmp	.+0      	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
     8ec:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     8ee:	60 e0       	ldi	r22, 0x00	; 0
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Mins :  ");
     8f6:	8c e0       	ldi	r24, 0x0C	; 12
     8f8:	97 e0       	ldi	r25, 0x07	; 7
     8fa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_stmin[10];
		sprintf(str_stmin,"%x",min);
     8fe:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <min+0x1>
     902:	8f 93       	push	r24
     904:	80 91 21 08 	lds	r24, 0x0821	; 0x800821 <min>
     908:	8f 93       	push	r24
     90a:	89 e0       	ldi	r24, 0x09	; 9
     90c:	97 e0       	ldi	r25, 0x07	; 7
     90e:	9f 93       	push	r25
     910:	8f 93       	push	r24
     912:	8e 01       	movw	r16, r28
     914:	0f 5f       	subi	r16, 0xFF	; 255
     916:	1f 4f       	sbci	r17, 0xFF	; 255
     918:	1f 93       	push	r17
     91a:	0f 93       	push	r16
     91c:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     920:	61 e0       	ldi	r22, 0x01	; 1
     922:	87 e0       	ldi	r24, 0x07	; 7
     924:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_stmin);
     928:	c8 01       	movw	r24, r16
     92a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     92e:	8e e2       	ldi	r24, 0x2E	; 46
     930:	97 e0       	ldi	r25, 0x07	; 7
     932:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     936:	85 e0       	ldi	r24, 0x05	; 5
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	0f 90       	pop	r0
     94a:	88 23       	and	r24, r24
     94c:	71 f0       	breq	.+28     	; 0x96a <__stack+0x6b>
		{
			mins++;
     94e:	80 91 dd 07 	lds	r24, 0x07DD	; 0x8007dd <mins>
     952:	90 91 de 07 	lds	r25, 0x07DE	; 0x8007de <mins+0x1>
     956:	01 96       	adiw	r24, 0x01	; 1
			mins%=60;
     958:	6c e3       	ldi	r22, 0x3C	; 60
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
     960:	90 93 de 07 	sts	0x07DE, r25	; 0x8007de <mins+0x1>
     964:	80 93 dd 07 	sts	0x07DD, r24	; 0x8007dd <mins>
     968:	2d c0       	rjmp	.+90     	; 0x9c4 <__stack+0xc5>
		}
		else if (pressed_button(PIND7))
     96a:	87 e0       	ldi	r24, 0x07	; 7
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     972:	88 23       	and	r24, r24
     974:	91 f0       	breq	.+36     	; 0x99a <__stack+0x9b>
		{
			mins--;
     976:	80 91 dd 07 	lds	r24, 0x07DD	; 0x8007dd <mins>
     97a:	90 91 de 07 	lds	r25, 0x07DE	; 0x8007de <mins+0x1>
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	90 93 de 07 	sts	0x07DE, r25	; 0x8007de <mins+0x1>
     984:	80 93 dd 07 	sts	0x07DD, r24	; 0x8007dd <mins>
			if (mins<0)
     988:	99 23       	and	r25, r25
     98a:	e4 f4       	brge	.+56     	; 0x9c4 <__stack+0xc5>
			{
				mins=59;
     98c:	8b e3       	ldi	r24, 0x3B	; 59
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	90 93 de 07 	sts	0x07DE, r25	; 0x8007de <mins+0x1>
     994:	80 93 dd 07 	sts	0x07DD, r24	; 0x8007dd <mins>
     998:	15 c0       	rjmp	.+42     	; 0x9c4 <__stack+0xc5>
			}
		}
		else if(pressed_button(PIND6))
     99a:	86 e0       	ldi	r24, 0x06	; 6
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     9a2:	88 23       	and	r24, r24
     9a4:	49 f0       	breq	.+18     	; 0x9b8 <__stack+0xb9>
		{
			min=mins;
     9a6:	80 91 dd 07 	lds	r24, 0x07DD	; 0x8007dd <mins>
     9aa:	90 91 de 07 	lds	r25, 0x07DE	; 0x8007de <mins+0x1>
     9ae:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <min+0x1>
     9b2:	80 93 21 08 	sts	0x0821, r24	; 0x800821 <min>
			break;
     9b6:	10 c0       	rjmp	.+32     	; 0x9d8 <__stack+0xd9>
		}
		else if (pressed_button(PIND4))
     9b8:	84 e0       	ldi	r24, 0x04	; 4
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     9c0:	81 11       	cpse	r24, r1
     9c2:	0a c0       	rjmp	.+20     	; 0x9d8 <__stack+0xd9>
     9c4:	2f ef       	ldi	r18, 0xFF	; 255
     9c6:	81 ee       	ldi	r24, 0xE1	; 225
     9c8:	94 e0       	ldi	r25, 0x04	; 4
     9ca:	21 50       	subi	r18, 0x01	; 1
     9cc:	80 40       	sbci	r24, 0x00	; 0
     9ce:	90 40       	sbci	r25, 0x00	; 0
     9d0:	e1 f7       	brne	.-8      	; 0x9ca <__stack+0xcb>
     9d2:	00 c0       	rjmp	.+0      	; 0x9d4 <__stack+0xd5>
     9d4:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     9d6:	8b cf       	rjmp	.-234    	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     9d8:	2f ef       	ldi	r18, 0xFF	; 255
     9da:	81 ee       	ldi	r24, 0xE1	; 225
     9dc:	94 e0       	ldi	r25, 0x04	; 4
     9de:	21 50       	subi	r18, 0x01	; 1
     9e0:	80 40       	sbci	r24, 0x00	; 0
     9e2:	90 40       	sbci	r25, 0x00	; 0
     9e4:	e1 f7       	brne	.-8      	; 0x9de <__stack+0xdf>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <__stack+0xe9>
     9e8:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Date:    ");
     9f2:	8d e1       	ldi	r24, 0x1D	; 29
     9f4:	97 e0       	ldi	r25, 0x07	; 7
     9f6:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_date[10];
		sprintf(str_date,"%d",startdate);
     9fa:	80 91 16 08 	lds	r24, 0x0816	; 0x800816 <startdate+0x1>
     9fe:	8f 93       	push	r24
     a00:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <startdate>
     a04:	8f 93       	push	r24
     a06:	80 e3       	ldi	r24, 0x30	; 48
     a08:	97 e0       	ldi	r25, 0x07	; 7
     a0a:	9f 93       	push	r25
     a0c:	8f 93       	push	r24
     a0e:	8e 01       	movw	r16, r28
     a10:	0f 5f       	subi	r16, 0xFF	; 255
     a12:	1f 4f       	sbci	r17, 0xFF	; 255
     a14:	1f 93       	push	r17
     a16:	0f 93       	push	r16
     a18:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     a1c:	61 e0       	ldi	r22, 0x01	; 1
     a1e:	87 e0       	ldi	r24, 0x07	; 7
     a20:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_date);
     a24:	c8 01       	movw	r24, r16
     a26:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     a2a:	8e e2       	ldi	r24, 0x2E	; 46
     a2c:	97 e0       	ldi	r25, 0x07	; 7
     a2e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     a32:	85 e0       	ldi	r24, 0x05	; 5
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
     a44:	0f 90       	pop	r0
     a46:	88 23       	and	r24, r24
     a48:	91 f0       	breq	.+36     	; 0xa6e <__stack+0x16f>
		{
			startdate++;
     a4a:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <startdate>
     a4e:	90 91 16 08 	lds	r25, 0x0816	; 0x800816 <startdate+0x1>
     a52:	01 96       	adiw	r24, 0x01	; 1
			startdate%=32;
     a54:	8f 71       	andi	r24, 0x1F	; 31
     a56:	90 78       	andi	r25, 0x80	; 128
     a58:	99 23       	and	r25, r25
     a5a:	24 f4       	brge	.+8      	; 0xa64 <__stack+0x165>
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	80 6e       	ori	r24, 0xE0	; 224
     a60:	9f 6f       	ori	r25, 0xFF	; 255
     a62:	01 96       	adiw	r24, 0x01	; 1
     a64:	90 93 16 08 	sts	0x0816, r25	; 0x800816 <startdate+0x1>
     a68:	80 93 15 08 	sts	0x0815, r24	; 0x800815 <startdate>
     a6c:	2e c0       	rjmp	.+92     	; 0xaca <__stack+0x1cb>
			
		}
		else if (pressed_button(PIND7))
     a6e:	87 e0       	ldi	r24, 0x07	; 7
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     a76:	88 23       	and	r24, r24
     a78:	99 f0       	breq	.+38     	; 0xaa0 <__stack+0x1a1>
		{
			startdate--;
     a7a:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <startdate>
     a7e:	90 91 16 08 	lds	r25, 0x0816	; 0x800816 <startdate+0x1>
     a82:	01 97       	sbiw	r24, 0x01	; 1
     a84:	90 93 16 08 	sts	0x0816, r25	; 0x800816 <startdate+0x1>
     a88:	80 93 15 08 	sts	0x0815, r24	; 0x800815 <startdate>
			if (startdate<1)
     a8c:	18 16       	cp	r1, r24
     a8e:	19 06       	cpc	r1, r25
     a90:	e4 f0       	brlt	.+56     	; 0xaca <__stack+0x1cb>
			{
				startdate=31;
     a92:	8f e1       	ldi	r24, 0x1F	; 31
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	90 93 16 08 	sts	0x0816, r25	; 0x800816 <startdate+0x1>
     a9a:	80 93 15 08 	sts	0x0815, r24	; 0x800815 <startdate>
     a9e:	15 c0       	rjmp	.+42     	; 0xaca <__stack+0x1cb>
			}
		}
		else if (pressed_button(PIND6))
     aa0:	86 e0       	ldi	r24, 0x06	; 6
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     aa8:	88 23       	and	r24, r24
     aaa:	49 f0       	breq	.+18     	; 0xabe <__stack+0x1bf>
		{
			date=startdate;
     aac:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <startdate>
     ab0:	90 91 16 08 	lds	r25, 0x0816	; 0x800816 <startdate+0x1>
     ab4:	90 93 da 07 	sts	0x07DA, r25	; 0x8007da <date+0x1>
     ab8:	80 93 d9 07 	sts	0x07D9, r24	; 0x8007d9 <date>
			break;
     abc:	10 c0       	rjmp	.+32     	; 0xade <__stack+0x1df>
		}
		else if (pressed_button(PIND4))
     abe:	84 e0       	ldi	r24, 0x04	; 4
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ac6:	81 11       	cpse	r24, r1
     ac8:	0a c0       	rjmp	.+20     	; 0xade <__stack+0x1df>
     aca:	2f ef       	ldi	r18, 0xFF	; 255
     acc:	81 ee       	ldi	r24, 0xE1	; 225
     ace:	94 e0       	ldi	r25, 0x04	; 4
     ad0:	21 50       	subi	r18, 0x01	; 1
     ad2:	80 40       	sbci	r24, 0x00	; 0
     ad4:	90 40       	sbci	r25, 0x00	; 0
     ad6:	e1 f7       	brne	.-8      	; 0xad0 <__stack+0x1d1>
     ad8:	00 c0       	rjmp	.+0      	; 0xada <__stack+0x1db>
     ada:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     adc:	86 cf       	rjmp	.-244    	; 0x9ea <__stack+0xeb>
     ade:	2f ef       	ldi	r18, 0xFF	; 255
     ae0:	81 ee       	ldi	r24, 0xE1	; 225
     ae2:	94 e0       	ldi	r25, 0x04	; 4
     ae4:	21 50       	subi	r18, 0x01	; 1
     ae6:	80 40       	sbci	r24, 0x00	; 0
     ae8:	90 40       	sbci	r25, 0x00	; 0
     aea:	e1 f7       	brne	.-8      	; 0xae4 <__stack+0x1e5>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <__stack+0x1ef>
     aee:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Month:    ");
     af8:	83 e3       	ldi	r24, 0x33	; 51
     afa:	97 e0       	ldi	r25, 0x07	; 7
     afc:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_mnth[10];
		sprintf(str_mnth,"%d",startmnth);
     b00:	80 91 14 08 	lds	r24, 0x0814	; 0x800814 <startmnth+0x1>
     b04:	8f 93       	push	r24
     b06:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <startmnth>
     b0a:	8f 93       	push	r24
     b0c:	80 e3       	ldi	r24, 0x30	; 48
     b0e:	97 e0       	ldi	r25, 0x07	; 7
     b10:	9f 93       	push	r25
     b12:	8f 93       	push	r24
     b14:	8e 01       	movw	r16, r28
     b16:	0f 5f       	subi	r16, 0xFF	; 255
     b18:	1f 4f       	sbci	r17, 0xFF	; 255
     b1a:	1f 93       	push	r17
     b1c:	0f 93       	push	r16
     b1e:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     b22:	61 e0       	ldi	r22, 0x01	; 1
     b24:	87 e0       	ldi	r24, 0x07	; 7
     b26:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_mnth);
     b2a:	c8 01       	movw	r24, r16
     b2c:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     b30:	8e e2       	ldi	r24, 0x2E	; 46
     b32:	97 e0       	ldi	r25, 0x07	; 7
     b34:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     b38:	85 e0       	ldi	r24, 0x05	; 5
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	0f 90       	pop	r0
     b46:	0f 90       	pop	r0
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
     b4c:	88 23       	and	r24, r24
     b4e:	71 f0       	breq	.+28     	; 0xb6c <__stack+0x26d>
		{
			startmnth++;
     b50:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <startmnth>
     b54:	90 91 14 08 	lds	r25, 0x0814	; 0x800814 <startmnth+0x1>
     b58:	01 96       	adiw	r24, 0x01	; 1
			startmnth%=13;
     b5a:	6d e0       	ldi	r22, 0x0D	; 13
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
     b62:	90 93 14 08 	sts	0x0814, r25	; 0x800814 <startmnth+0x1>
     b66:	80 93 13 08 	sts	0x0813, r24	; 0x800813 <startmnth>
     b6a:	2e c0       	rjmp	.+92     	; 0xbc8 <__stack+0x2c9>
			
		}
		else if (pressed_button(PIND7))
     b6c:	87 e0       	ldi	r24, 0x07	; 7
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     b74:	88 23       	and	r24, r24
     b76:	99 f0       	breq	.+38     	; 0xb9e <__stack+0x29f>
		{
			startmnth--;
     b78:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <startmnth>
     b7c:	90 91 14 08 	lds	r25, 0x0814	; 0x800814 <startmnth+0x1>
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	90 93 14 08 	sts	0x0814, r25	; 0x800814 <startmnth+0x1>
     b86:	80 93 13 08 	sts	0x0813, r24	; 0x800813 <startmnth>
			if (startmnth<1)
     b8a:	18 16       	cp	r1, r24
     b8c:	19 06       	cpc	r1, r25
     b8e:	e4 f0       	brlt	.+56     	; 0xbc8 <__stack+0x2c9>
			{
				startmnth=12;
     b90:	8c e0       	ldi	r24, 0x0C	; 12
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	90 93 14 08 	sts	0x0814, r25	; 0x800814 <startmnth+0x1>
     b98:	80 93 13 08 	sts	0x0813, r24	; 0x800813 <startmnth>
     b9c:	15 c0       	rjmp	.+42     	; 0xbc8 <__stack+0x2c9>
			}
		}
		else if (pressed_button(PIND6))
     b9e:	86 e0       	ldi	r24, 0x06	; 6
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ba6:	88 23       	and	r24, r24
     ba8:	49 f0       	breq	.+18     	; 0xbbc <__stack+0x2bd>
		{
			month=startmnth;
     baa:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <startmnth>
     bae:	90 91 14 08 	lds	r25, 0x0814	; 0x800814 <startmnth+0x1>
     bb2:	90 93 d8 07 	sts	0x07D8, r25	; 0x8007d8 <month+0x1>
     bb6:	80 93 d7 07 	sts	0x07D7, r24	; 0x8007d7 <month>
			break;
     bba:	10 c0       	rjmp	.+32     	; 0xbdc <__stack+0x2dd>
		}
		else if (pressed_button(PIND4))
     bbc:	84 e0       	ldi	r24, 0x04	; 4
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     bc4:	81 11       	cpse	r24, r1
     bc6:	0a c0       	rjmp	.+20     	; 0xbdc <__stack+0x2dd>
     bc8:	2f ef       	ldi	r18, 0xFF	; 255
     bca:	81 ee       	ldi	r24, 0xE1	; 225
     bcc:	94 e0       	ldi	r25, 0x04	; 4
     bce:	21 50       	subi	r18, 0x01	; 1
     bd0:	80 40       	sbci	r24, 0x00	; 0
     bd2:	90 40       	sbci	r25, 0x00	; 0
     bd4:	e1 f7       	brne	.-8      	; 0xbce <__stack+0x2cf>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <__stack+0x2d9>
     bd8:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     bda:	8a cf       	rjmp	.-236    	; 0xaf0 <__stack+0x1f1>
     bdc:	2f ef       	ldi	r18, 0xFF	; 255
     bde:	81 ee       	ldi	r24, 0xE1	; 225
     be0:	94 e0       	ldi	r25, 0x04	; 4
     be2:	21 50       	subi	r18, 0x01	; 1
     be4:	80 40       	sbci	r24, 0x00	; 0
     be6:	90 40       	sbci	r25, 0x00	; 0
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <__stack+0x2e3>
     bea:	00 c0       	rjmp	.+0      	; 0xbec <__stack+0x2ed>
     bec:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Year:    ");
     bf6:	86 e4       	ldi	r24, 0x46	; 70
     bf8:	97 e0       	ldi	r25, 0x07	; 7
     bfa:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_yr[10];
		sprintf(str_yr,"%d",startyr);
     bfe:	80 91 12 08 	lds	r24, 0x0812	; 0x800812 <startyr+0x1>
     c02:	8f 93       	push	r24
     c04:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <startyr>
     c08:	8f 93       	push	r24
     c0a:	80 e3       	ldi	r24, 0x30	; 48
     c0c:	97 e0       	ldi	r25, 0x07	; 7
     c0e:	9f 93       	push	r25
     c10:	8f 93       	push	r24
     c12:	8e 01       	movw	r16, r28
     c14:	0f 5f       	subi	r16, 0xFF	; 255
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	1f 93       	push	r17
     c1a:	0f 93       	push	r16
     c1c:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(5,1);
     c20:	61 e0       	ldi	r22, 0x01	; 1
     c22:	85 e0       	ldi	r24, 0x05	; 5
     c24:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_yr);
     c28:	c8 01       	movw	r24, r16
     c2a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     c2e:	8e e2       	ldi	r24, 0x2E	; 46
     c30:	97 e0       	ldi	r25, 0x07	; 7
     c32:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     c36:	85 e0       	ldi	r24, 0x05	; 5
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c3e:	0f 90       	pop	r0
     c40:	0f 90       	pop	r0
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	0f 90       	pop	r0
     c4a:	88 23       	and	r24, r24
     c4c:	51 f0       	breq	.+20     	; 0xc62 <__stack+0x363>
		{
			startyr++;
     c4e:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <startyr>
     c52:	90 91 12 08 	lds	r25, 0x0812	; 0x800812 <startyr+0x1>
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	90 93 12 08 	sts	0x0812, r25	; 0x800812 <startyr+0x1>
     c5c:	80 93 11 08 	sts	0x0811, r24	; 0x800811 <startyr>
     c60:	25 c0       	rjmp	.+74     	; 0xcac <__stack+0x3ad>
			
		}
		else if (pressed_button(PIND7))
     c62:	87 e0       	ldi	r24, 0x07	; 7
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c6a:	88 23       	and	r24, r24
     c6c:	51 f0       	breq	.+20     	; 0xc82 <__stack+0x383>
		{
			startyr--;
     c6e:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <startyr>
     c72:	90 91 12 08 	lds	r25, 0x0812	; 0x800812 <startyr+0x1>
     c76:	01 97       	sbiw	r24, 0x01	; 1
     c78:	90 93 12 08 	sts	0x0812, r25	; 0x800812 <startyr+0x1>
     c7c:	80 93 11 08 	sts	0x0811, r24	; 0x800811 <startyr>
     c80:	15 c0       	rjmp	.+42     	; 0xcac <__stack+0x3ad>
		}
		else if (pressed_button(PIND6))
     c82:	86 e0       	ldi	r24, 0x06	; 6
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     c8a:	88 23       	and	r24, r24
     c8c:	49 f0       	breq	.+18     	; 0xca0 <__stack+0x3a1>
		{
			yr=startyr;
     c8e:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <startyr>
     c92:	90 91 12 08 	lds	r25, 0x0812	; 0x800812 <startyr+0x1>
     c96:	90 93 d6 07 	sts	0x07D6, r25	; 0x8007d6 <yr+0x1>
     c9a:	80 93 d5 07 	sts	0x07D5, r24	; 0x8007d5 <yr>
			break;
     c9e:	10 c0       	rjmp	.+32     	; 0xcc0 <__stack+0x3c1>
		}
		else if (pressed_button(PIND4))
     ca0:	84 e0       	ldi	r24, 0x04	; 4
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     ca8:	81 11       	cpse	r24, r1
     caa:	0a c0       	rjmp	.+20     	; 0xcc0 <__stack+0x3c1>
     cac:	2f ef       	ldi	r18, 0xFF	; 255
     cae:	81 ee       	ldi	r24, 0xE1	; 225
     cb0:	94 e0       	ldi	r25, 0x04	; 4
     cb2:	21 50       	subi	r18, 0x01	; 1
     cb4:	80 40       	sbci	r24, 0x00	; 0
     cb6:	90 40       	sbci	r25, 0x00	; 0
     cb8:	e1 f7       	brne	.-8      	; 0xcb2 <__stack+0x3b3>
     cba:	00 c0       	rjmp	.+0      	; 0xcbc <__stack+0x3bd>
     cbc:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     cbe:	97 cf       	rjmp	.-210    	; 0xbee <__stack+0x2ef>
		{
			break;
		}
		_delay_ms(del);
	}
	lcdClear();
     cc0:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	lcdPrint("  Time is set!   ");
     cc4:	88 e5       	ldi	r24, 0x58	; 88
     cc6:	97 e0       	ldi	r25, 0x07	; 7
     cc8:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     ccc:	2f ef       	ldi	r18, 0xFF	; 255
     cce:	89 e6       	ldi	r24, 0x69	; 105
     cd0:	98 e1       	ldi	r25, 0x18	; 24
     cd2:	21 50       	subi	r18, 0x01	; 1
     cd4:	80 40       	sbci	r24, 0x00	; 0
     cd6:	90 40       	sbci	r25, 0x00	; 0
     cd8:	e1 f7       	brne	.-8      	; 0xcd2 <__stack+0x3d3>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <__stack+0x3dd>
     cdc:	00 00       	nop
	_delay_ms(1000);
	lcdClear();
     cde:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	page=1;
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
     cea:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
}
     cee:	2a 96       	adiw	r28, 0x0a	; 10
     cf0:	0f b6       	in	r0, 0x3f	; 63
     cf2:	f8 94       	cli
     cf4:	de bf       	out	0x3e, r29	; 62
     cf6:	0f be       	out	0x3f, r0	; 63
     cf8:	cd bf       	out	0x3d, r28	; 61
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	1f 91       	pop	r17
     d00:	0f 91       	pop	r16
     d02:	08 95       	ret

00000d04 <_Z12editAlarmInti>:
		alarmDisplay(alarmNo);
	}
}

void editAlarmInt(int currentAlarm)		//set or modify alarms
{
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	2a 97       	sbiw	r28, 0x0a	; 10
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	7c 01       	movw	r14, r24
	while(true)
	{
		lcdSetCursor(0,0);
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("   Enter Hr:    ");
     d2a:	88 ef       	ldi	r24, 0xF8	; 248
     d2c:	96 e0       	ldi	r25, 0x06	; 6
     d2e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_sthour[10];
		sprintf(str_sthour,"%d",startAlarmHr);
     d32:	80 91 10 08 	lds	r24, 0x0810	; 0x800810 <startAlarmHr+0x1>
     d36:	8f 93       	push	r24
     d38:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <startAlarmHr>
     d3c:	8f 93       	push	r24
     d3e:	80 e3       	ldi	r24, 0x30	; 48
     d40:	97 e0       	ldi	r25, 0x07	; 7
     d42:	9f 93       	push	r25
     d44:	8f 93       	push	r24
     d46:	8e 01       	movw	r16, r28
     d48:	0f 5f       	subi	r16, 0xFF	; 255
     d4a:	1f 4f       	sbci	r17, 0xFF	; 255
     d4c:	1f 93       	push	r17
     d4e:	0f 93       	push	r16
     d50:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     d54:	61 e0       	ldi	r22, 0x01	; 1
     d56:	87 e0       	ldi	r24, 0x07	; 7
     d58:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_sthour);
     d5c:	c8 01       	movw	r24, r16
     d5e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     d62:	8e e2       	ldi	r24, 0x2E	; 46
     d64:	97 e0       	ldi	r25, 0x07	; 7
     d66:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     d6a:	85 e0       	ldi	r24, 0x05	; 5
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     d72:	0f 90       	pop	r0
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	88 23       	and	r24, r24
     d80:	71 f0       	breq	.+28     	; 0xd9e <_Z12editAlarmInti+0x9a>
		{
			startAlarmHr++;
     d82:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <startAlarmHr>
     d86:	90 91 10 08 	lds	r25, 0x0810	; 0x800810 <startAlarmHr+0x1>
     d8a:	01 96       	adiw	r24, 0x01	; 1
			startAlarmHr%=24;
     d8c:	68 e1       	ldi	r22, 0x18	; 24
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
     d94:	90 93 10 08 	sts	0x0810, r25	; 0x800810 <startAlarmHr+0x1>
     d98:	80 93 0f 08 	sts	0x080F, r24	; 0x80080f <startAlarmHr>
     d9c:	31 c0       	rjmp	.+98     	; 0xe00 <_Z12editAlarmInti+0xfc>
		}
		else if (pressed_button(PIND7))
     d9e:	87 e0       	ldi	r24, 0x07	; 7
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     da6:	88 23       	and	r24, r24
     da8:	91 f0       	breq	.+36     	; 0xdce <_Z12editAlarmInti+0xca>
		{
			startAlarmHr--;
     daa:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <startAlarmHr>
     dae:	90 91 10 08 	lds	r25, 0x0810	; 0x800810 <startAlarmHr+0x1>
     db2:	01 97       	sbiw	r24, 0x01	; 1
     db4:	90 93 10 08 	sts	0x0810, r25	; 0x800810 <startAlarmHr+0x1>
     db8:	80 93 0f 08 	sts	0x080F, r24	; 0x80080f <startAlarmHr>
			if (startAlarmHr<0)
     dbc:	99 23       	and	r25, r25
     dbe:	04 f5       	brge	.+64     	; 0xe00 <_Z12editAlarmInti+0xfc>
			{
				startAlarmHr=23;
     dc0:	87 e1       	ldi	r24, 0x17	; 23
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	90 93 10 08 	sts	0x0810, r25	; 0x800810 <startAlarmHr+0x1>
     dc8:	80 93 0f 08 	sts	0x080F, r24	; 0x80080f <startAlarmHr>
     dcc:	19 c0       	rjmp	.+50     	; 0xe00 <_Z12editAlarmInti+0xfc>
			}
		}
		else if (pressed_button(PIND6))
     dce:	86 e0       	ldi	r24, 0x06	; 6
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     dd6:	88 23       	and	r24, r24
     dd8:	69 f0       	breq	.+26     	; 0xdf4 <_Z12editAlarmInti+0xf0>
		{
			alarmHoursList[currentAlarm-1]=startAlarmHr;
     dda:	f7 01       	movw	r30, r14
     ddc:	31 97       	sbiw	r30, 0x01	; 1
     dde:	ee 0f       	add	r30, r30
     de0:	ff 1f       	adc	r31, r31
     de2:	e1 50       	subi	r30, 0x01	; 1
     de4:	f8 4f       	sbci	r31, 0xF8	; 248
     de6:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <startAlarmHr>
     dea:	90 91 10 08 	lds	r25, 0x0810	; 0x800810 <startAlarmHr+0x1>
     dee:	91 83       	std	Z+1, r25	; 0x01
     df0:	80 83       	st	Z, r24
			
			break;
     df2:	10 c0       	rjmp	.+32     	; 0xe14 <_Z12editAlarmInti+0x110>
		}
		else if (pressed_button(PIND4))
     df4:	84 e0       	ldi	r24, 0x04	; 4
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     dfc:	81 11       	cpse	r24, r1
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <_Z12editAlarmInti+0x110>
     e00:	2f ef       	ldi	r18, 0xFF	; 255
     e02:	81 ee       	ldi	r24, 0xE1	; 225
     e04:	94 e0       	ldi	r25, 0x04	; 4
     e06:	21 50       	subi	r18, 0x01	; 1
     e08:	80 40       	sbci	r24, 0x00	; 0
     e0a:	90 40       	sbci	r25, 0x00	; 0
     e0c:	e1 f7       	brne	.-8      	; 0xe06 <_Z12editAlarmInti+0x102>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <_Z12editAlarmInti+0x10c>
     e10:	00 00       	nop
	}
}

void editAlarmInt(int currentAlarm)		//set or modify alarms
{
	while(true)
     e12:	87 cf       	rjmp	.-242    	; 0xd22 <_Z12editAlarmInti+0x1e>
     e14:	2f ef       	ldi	r18, 0xFF	; 255
     e16:	81 ee       	ldi	r24, 0xE1	; 225
     e18:	94 e0       	ldi	r25, 0x04	; 4
     e1a:	21 50       	subi	r18, 0x01	; 1
     e1c:	80 40       	sbci	r24, 0x00	; 0
     e1e:	90 40       	sbci	r25, 0x00	; 0
     e20:	e1 f7       	brne	.-8      	; 0xe1a <_Z12editAlarmInti+0x116>
     e22:	00 c0       	rjmp	.+0      	; 0xe24 <_Z12editAlarmInti+0x120>
     e24:	00 00       	nop
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
	{
		lcdSetCursor(0,0);
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("  Enter Mins :  ");
     e2e:	8c e0       	ldi	r24, 0x0C	; 12
     e30:	97 e0       	ldi	r25, 0x07	; 7
     e32:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		char str_stmin[10];
		sprintf(str_stmin,"%d",startAlarmMin);
     e36:	80 91 0e 08 	lds	r24, 0x080E	; 0x80080e <startAlarmMin+0x1>
     e3a:	8f 93       	push	r24
     e3c:	80 91 0d 08 	lds	r24, 0x080D	; 0x80080d <startAlarmMin>
     e40:	8f 93       	push	r24
     e42:	80 e3       	ldi	r24, 0x30	; 48
     e44:	97 e0       	ldi	r25, 0x07	; 7
     e46:	9f 93       	push	r25
     e48:	8f 93       	push	r24
     e4a:	8e 01       	movw	r16, r28
     e4c:	0f 5f       	subi	r16, 0xFF	; 255
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	1f 93       	push	r17
     e52:	0f 93       	push	r16
     e54:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
		lcdSetCursor(7,1);
     e58:	61 e0       	ldi	r22, 0x01	; 1
     e5a:	87 e0       	ldi	r24, 0x07	; 7
     e5c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(str_stmin);
     e60:	c8 01       	movw	r24, r16
     e62:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdPrint(" ");
     e66:	8e e2       	ldi	r24, 0x2E	; 46
     e68:	97 e0       	ldi	r25, 0x07	; 7
     e6a:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		
		if (pressed_button(PIND5))
     e6e:	85 e0       	ldi	r24, 0x05	; 5
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	0f 90       	pop	r0
     e7e:	0f 90       	pop	r0
     e80:	0f 90       	pop	r0
     e82:	88 23       	and	r24, r24
     e84:	71 f0       	breq	.+28     	; 0xea2 <_Z12editAlarmInti+0x19e>
		{
			startAlarmMin++;
     e86:	80 91 0d 08 	lds	r24, 0x080D	; 0x80080d <startAlarmMin>
     e8a:	90 91 0e 08 	lds	r25, 0x080E	; 0x80080e <startAlarmMin+0x1>
     e8e:	01 96       	adiw	r24, 0x01	; 1
			startAlarmMin%=60;
     e90:	6c e3       	ldi	r22, 0x3C	; 60
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
     e98:	90 93 0e 08 	sts	0x080E, r25	; 0x80080e <startAlarmMin+0x1>
     e9c:	80 93 0d 08 	sts	0x080D, r24	; 0x80080d <startAlarmMin>
     ea0:	31 c0       	rjmp	.+98     	; 0xf04 <_Z12editAlarmInti+0x200>
		}
		else if (pressed_button(PIND7))
     ea2:	87 e0       	ldi	r24, 0x07	; 7
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     eaa:	88 23       	and	r24, r24
     eac:	91 f0       	breq	.+36     	; 0xed2 <_Z12editAlarmInti+0x1ce>
		{
			startAlarmMin--;
     eae:	80 91 0d 08 	lds	r24, 0x080D	; 0x80080d <startAlarmMin>
     eb2:	90 91 0e 08 	lds	r25, 0x080E	; 0x80080e <startAlarmMin+0x1>
     eb6:	01 97       	sbiw	r24, 0x01	; 1
     eb8:	90 93 0e 08 	sts	0x080E, r25	; 0x80080e <startAlarmMin+0x1>
     ebc:	80 93 0d 08 	sts	0x080D, r24	; 0x80080d <startAlarmMin>
			if (startAlarmMin<0)
     ec0:	99 23       	and	r25, r25
     ec2:	04 f5       	brge	.+64     	; 0xf04 <_Z12editAlarmInti+0x200>
			{
				startAlarmMin=59;
     ec4:	8b e3       	ldi	r24, 0x3B	; 59
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	90 93 0e 08 	sts	0x080E, r25	; 0x80080e <startAlarmMin+0x1>
     ecc:	80 93 0d 08 	sts	0x080D, r24	; 0x80080d <startAlarmMin>
     ed0:	19 c0       	rjmp	.+50     	; 0xf04 <_Z12editAlarmInti+0x200>
			}
		}
		else if(pressed_button(PIND6))
     ed2:	86 e0       	ldi	r24, 0x06	; 6
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     eda:	88 23       	and	r24, r24
     edc:	69 f0       	breq	.+26     	; 0xef8 <_Z12editAlarmInti+0x1f4>
		{
			alarmMinsList[currentAlarm-1]=startAlarmMin;
     ede:	f7 01       	movw	r30, r14
     ee0:	31 97       	sbiw	r30, 0x01	; 1
     ee2:	ee 0f       	add	r30, r30
     ee4:	ff 1f       	adc	r31, r31
     ee6:	ef 50       	subi	r30, 0x0F	; 15
     ee8:	f8 4f       	sbci	r31, 0xF8	; 248
     eea:	80 91 0d 08 	lds	r24, 0x080D	; 0x80080d <startAlarmMin>
     eee:	90 91 0e 08 	lds	r25, 0x080E	; 0x80080e <startAlarmMin+0x1>
     ef2:	91 83       	std	Z+1, r25	; 0x01
     ef4:	80 83       	st	Z, r24
			
			break;
     ef6:	10 c0       	rjmp	.+32     	; 0xf18 <_Z12editAlarmInti+0x214>
		}
		else if (pressed_button(PIND4))
     ef8:	84 e0       	ldi	r24, 0x04	; 4
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Z14pressed_buttoni>
     f00:	81 11       	cpse	r24, r1
     f02:	0a c0       	rjmp	.+20     	; 0xf18 <_Z12editAlarmInti+0x214>
     f04:	2f ef       	ldi	r18, 0xFF	; 255
     f06:	81 ee       	ldi	r24, 0xE1	; 225
     f08:	94 e0       	ldi	r25, 0x04	; 4
     f0a:	21 50       	subi	r18, 0x01	; 1
     f0c:	80 40       	sbci	r24, 0x00	; 0
     f0e:	90 40       	sbci	r25, 0x00	; 0
     f10:	e1 f7       	brne	.-8      	; 0xf0a <_Z12editAlarmInti+0x206>
     f12:	00 c0       	rjmp	.+0      	; 0xf14 <_Z12editAlarmInti+0x210>
     f14:	00 00       	nop
			break;
		}
		_delay_ms(del);
	}
	_delay_ms(del);
	while(true)
     f16:	87 cf       	rjmp	.-242    	; 0xe26 <_Z12editAlarmInti+0x122>
		{
			break;
		}
		_delay_ms(del);
	}
	if (alarmStatus[currentAlarm-1]==0)
     f18:	21 e0       	ldi	r18, 0x01	; 1
     f1a:	e2 1a       	sub	r14, r18
     f1c:	f1 08       	sbc	r15, r1
     f1e:	f7 01       	movw	r30, r14
     f20:	ee 0f       	add	r30, r30
     f22:	ff 1f       	adc	r31, r31
     f24:	ed 51       	subi	r30, 0x1D	; 29
     f26:	f8 4f       	sbci	r31, 0xF8	; 248
     f28:	80 81       	ld	r24, Z
     f2a:	91 81       	ldd	r25, Z+1	; 0x01
     f2c:	89 2b       	or	r24, r25
     f2e:	59 f5       	brne	.+86     	; 0xf86 <_Z12editAlarmInti+0x282>
	{
		alarmStatus[currentAlarm-1]=1;
     f30:	c7 01       	movw	r24, r14
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	fc 01       	movw	r30, r24
     f38:	ed 51       	subi	r30, 0x1D	; 29
     f3a:	f8 4f       	sbci	r31, 0xF8	; 248
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
		noOfSetAlarms+=1;
     f44:	80 91 e1 07 	lds	r24, 0x07E1	; 0x8007e1 <noOfSetAlarms>
     f48:	90 91 e2 07 	lds	r25, 0x07E2	; 0x8007e2 <noOfSetAlarms+0x1>
     f4c:	01 96       	adiw	r24, 0x01	; 1
     f4e:	90 93 e2 07 	sts	0x07E2, r25	; 0x8007e2 <noOfSetAlarms+0x1>
     f52:	80 93 e1 07 	sts	0x07E1, r24	; 0x8007e1 <noOfSetAlarms>
		lcdClear();
     f56:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
		lcdPrint("  Alarm is set!   ");
     f5a:	8a e6       	ldi	r24, 0x6A	; 106
     f5c:	97 e0       	ldi	r25, 0x07	; 7
     f5e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	99 e6       	ldi	r25, 0x69	; 105
     f66:	28 e1       	ldi	r18, 0x18	; 24
     f68:	81 50       	subi	r24, 0x01	; 1
     f6a:	90 40       	sbci	r25, 0x00	; 0
     f6c:	20 40       	sbci	r18, 0x00	; 0
     f6e:	e1 f7       	brne	.-8      	; 0xf68 <_Z12editAlarmInti+0x264>
     f70:	00 c0       	rjmp	.+0      	; 0xf72 <_Z12editAlarmInti+0x26e>
     f72:	00 00       	nop
		_delay_ms(1000);
		page = 8;
     f74:	88 e0       	ldi	r24, 0x08	; 8
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
     f7c:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
		lcdClear();
     f80:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
     f84:	17 c0       	rjmp	.+46     	; 0xfb4 <_Z12editAlarmInti+0x2b0>
	}
	else
	{
		lcdClear();
     f86:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
		lcdPrint("  Alarm is set!   ");
     f8a:	8a e6       	ldi	r24, 0x6A	; 106
     f8c:	97 e0       	ldi	r25, 0x07	; 7
     f8e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
     f92:	8f ef       	ldi	r24, 0xFF	; 255
     f94:	99 e6       	ldi	r25, 0x69	; 105
     f96:	28 e1       	ldi	r18, 0x18	; 24
     f98:	81 50       	subi	r24, 0x01	; 1
     f9a:	90 40       	sbci	r25, 0x00	; 0
     f9c:	20 40       	sbci	r18, 0x00	; 0
     f9e:	e1 f7       	brne	.-8      	; 0xf98 <_Z12editAlarmInti+0x294>
     fa0:	00 c0       	rjmp	.+0      	; 0xfa2 <_Z12editAlarmInti+0x29e>
     fa2:	00 00       	nop
		_delay_ms(1000);
		page = 8;
     fa4:	88 e0       	ldi	r24, 0x08	; 8
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
     fac:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
		lcdClear();
     fb0:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	}
}
     fb4:	2a 96       	adiw	r28, 0x0a	; 10
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	ff 90       	pop	r15
     fca:	ef 90       	pop	r14
     fcc:	08 95       	ret

00000fce <_Z12alarmDisplayi>:
		return false;
	}
}

void alarmDisplay(int alarmNo)		
{
     fce:	ef 92       	push	r14
     fd0:	ff 92       	push	r15
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	64 97       	sbiw	r28, 0x14	; 20
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
	char Hr[10];
	sprintf(Hr,"%d",alarmHoursList[alarmNo-1]);
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	8c 01       	movw	r16, r24
     fee:	00 0f       	add	r16, r16
     ff0:	11 1f       	adc	r17, r17
     ff2:	f8 01       	movw	r30, r16
     ff4:	e1 50       	subi	r30, 0x01	; 1
     ff6:	f8 4f       	sbci	r31, 0xF8	; 248
     ff8:	80 81       	ld	r24, Z
     ffa:	91 81       	ldd	r25, Z+1	; 0x01
     ffc:	9f 93       	push	r25
     ffe:	8f 93       	push	r24
    1000:	0f 2e       	mov	r0, r31
    1002:	f0 e3       	ldi	r31, 0x30	; 48
    1004:	ef 2e       	mov	r14, r31
    1006:	f7 e0       	ldi	r31, 0x07	; 7
    1008:	ff 2e       	mov	r15, r31
    100a:	f0 2d       	mov	r31, r0
    100c:	ff 92       	push	r15
    100e:	ef 92       	push	r14
    1010:	ce 01       	movw	r24, r28
    1012:	01 96       	adiw	r24, 0x01	; 1
    1014:	9f 93       	push	r25
    1016:	8f 93       	push	r24
    1018:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
	
	char Min[10];
	sprintf(Min,"%d",alarmMinsList[alarmNo-1]);
    101c:	f8 01       	movw	r30, r16
    101e:	ef 50       	subi	r30, 0x0F	; 15
    1020:	f8 4f       	sbci	r31, 0xF8	; 248
    1022:	80 81       	ld	r24, Z
    1024:	91 81       	ldd	r25, Z+1	; 0x01
    1026:	9f 93       	push	r25
    1028:	8f 93       	push	r24
    102a:	ff 92       	push	r15
    102c:	ef 92       	push	r14
    102e:	ce 01       	movw	r24, r28
    1030:	0b 96       	adiw	r24, 0x0b	; 11
    1032:	9f 93       	push	r25
    1034:	8f 93       	push	r24
    1036:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
	
	if (alarmStatus[alarmNo-1]==1)
    103a:	f8 01       	movw	r30, r16
    103c:	ed 51       	subi	r30, 0x1D	; 29
    103e:	f8 4f       	sbci	r31, 0xF8	; 248
    1040:	80 81       	ld	r24, Z
    1042:	91 81       	ldd	r25, Z+1	; 0x01
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	f8 94       	cli
    1048:	de bf       	out	0x3e, r29	; 62
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	cd bf       	out	0x3d, r28	; 61
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	c9 f4       	brne	.+50     	; 0x1084 <_Z12alarmDisplayi+0xb6>
	{
		lcdSetCursor(5, 1);
    1052:	61 e0       	ldi	r22, 0x01	; 1
    1054:	85 e0       	ldi	r24, 0x05	; 5
    1056:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(Hr);
    105a:	ce 01       	movw	r24, r28
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdSetCursor(7, 1);
    1062:	61 e0       	ldi	r22, 0x01	; 1
    1064:	87 e0       	ldi	r24, 0x07	; 7
    1066:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(":");
    106a:	8d e7       	ldi	r24, 0x7D	; 125
    106c:	97 e0       	ldi	r25, 0x07	; 7
    106e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
		lcdSetCursor(10, 1);
    1072:	61 e0       	ldi	r22, 0x01	; 1
    1074:	8a e0       	ldi	r24, 0x0A	; 10
    1076:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint(Min);
    107a:	ce 01       	movw	r24, r28
    107c:	0b 96       	adiw	r24, 0x0b	; 11
    107e:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
    1082:	08 c0       	rjmp	.+16     	; 0x1094 <_Z12alarmDisplayi+0xc6>
	}
	else
	{
		lcdSetCursor(1, 1);
    1084:	61 e0       	ldi	r22, 0x01	; 1
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
		lcdPrint("<<Empty Alarm>>");
    108c:	8f e7       	ldi	r24, 0x7F	; 127
    108e:	97 e0       	ldi	r25, 0x07	; 7
    1090:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
	}
}
    1094:	64 96       	adiw	r28, 0x14	; 20
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	f8 94       	cli
    109a:	de bf       	out	0x3e, r29	; 62
    109c:	0f be       	out	0x3f, r0	; 63
    109e:	cd bf       	out	0x3d, r28	; 61
    10a0:	df 91       	pop	r29
    10a2:	cf 91       	pop	r28
    10a4:	1f 91       	pop	r17
    10a6:	0f 91       	pop	r16
    10a8:	ff 90       	pop	r15
    10aa:	ef 90       	pop	r14
    10ac:	08 95       	ret

000010ae <_Z12alarmListIntv>:
	page=1;
}

void alarmListInt(){		//prints list of alarms
	
	lcdSetCursor(3, 0);
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	83 e0       	ldi	r24, 0x03	; 3
    10b2:	0e 94 35 01 	call	0x26a	; 0x26a <_Z12lcdSetCursorcc>
	lcdPrint("ALARM LIST");
    10b6:	8f e8       	ldi	r24, 0x8F	; 143
    10b8:	97 e0       	ldi	r25, 0x07	; 7
    10ba:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
	if (menuitem == 1)
    10be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	91 05       	cpc	r25, r1
    10ca:	49 f4       	brne	.+18     	; 0x10de <_Z12alarmListIntv+0x30>
	{
		alarmNo = 1;
    10cc:	81 e0       	ldi	r24, 0x01	; 1
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    10d4:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    10d8:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    10dc:	08 95       	ret
	}
	else if (menuitem == 2)
    10de:	82 30       	cpi	r24, 0x02	; 2
    10e0:	91 05       	cpc	r25, r1
    10e2:	49 f4       	brne	.+18     	; 0x10f6 <_Z12alarmListIntv+0x48>
	{
		alarmNo = 2;
    10e4:	82 e0       	ldi	r24, 0x02	; 2
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    10ec:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    10f0:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    10f4:	08 95       	ret
	}
	else if (menuitem == 3)
    10f6:	83 30       	cpi	r24, 0x03	; 3
    10f8:	91 05       	cpc	r25, r1
    10fa:	49 f4       	brne	.+18     	; 0x110e <_Z12alarmListIntv+0x60>
	{
		alarmNo = 3;
    10fc:	83 e0       	ldi	r24, 0x03	; 3
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    1104:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    1108:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    110c:	08 95       	ret
	}
	else if (menuitem == 4)
    110e:	84 30       	cpi	r24, 0x04	; 4
    1110:	91 05       	cpc	r25, r1
    1112:	49 f4       	brne	.+18     	; 0x1126 <_Z12alarmListIntv+0x78>
	{
		alarmNo = 4;
    1114:	84 e0       	ldi	r24, 0x04	; 4
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    111c:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    1120:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    1124:	08 95       	ret
	}
	else if (menuitem == 5)
    1126:	85 30       	cpi	r24, 0x05	; 5
    1128:	91 05       	cpc	r25, r1
    112a:	49 f4       	brne	.+18     	; 0x113e <_Z12alarmListIntv+0x90>
	{
		alarmNo = 5;
    112c:	85 e0       	ldi	r24, 0x05	; 5
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    1134:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    1138:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    113c:	08 95       	ret
	}
	else if (menuitem == 6)
    113e:	86 30       	cpi	r24, 0x06	; 6
    1140:	91 05       	cpc	r25, r1
    1142:	49 f4       	brne	.+18     	; 0x1156 <_Z12alarmListIntv+0xa8>
	{
		alarmNo = 6;
    1144:	86 e0       	ldi	r24, 0x06	; 6
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    114c:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    1150:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    1154:	08 95       	ret
	}
	else if (menuitem == 7)
    1156:	07 97       	sbiw	r24, 0x07	; 7
    1158:	41 f4       	brne	.+16     	; 0x116a <_Z12alarmListIntv+0xbc>
	{
		alarmNo = 7;
    115a:	87 e0       	ldi	r24, 0x07	; 7
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	90 93 e0 07 	sts	0x07E0, r25	; 0x8007e0 <alarmNo+0x1>
    1162:	80 93 df 07 	sts	0x07DF, r24	; 0x8007df <alarmNo>
		alarmDisplay(alarmNo);
    1166:	0e 94 e7 07 	call	0xfce	; 0xfce <_Z12alarmDisplayi>
    116a:	08 95       	ret

0000116c <_Z11deleteAlarmi>:
	}
}

void deleteAlarm(int alarmNo)		//for changing alarm status (0 and 1)
{
	alarmStatus[alarmNo-1]=0;
    116c:	01 97       	sbiw	r24, 0x01	; 1
    116e:	fc 01       	movw	r30, r24
    1170:	ee 0f       	add	r30, r30
    1172:	ff 1f       	adc	r31, r31
    1174:	ed 51       	subi	r30, 0x1D	; 29
    1176:	f8 4f       	sbci	r31, 0xF8	; 248
    1178:	11 82       	std	Z+1, r1	; 0x01
    117a:	10 82       	st	Z, r1
	lcdClear();
    117c:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	lcdPrint("  Alarm Deleted ");
    1180:	8a e9       	ldi	r24, 0x9A	; 154
    1182:	97 e0       	ldi	r25, 0x07	; 7
    1184:	0e 94 28 01 	call	0x250	; 0x250 <_Z8lcdPrintPc>
    1188:	2f ef       	ldi	r18, 0xFF	; 255
    118a:	89 e6       	ldi	r24, 0x69	; 105
    118c:	98 e1       	ldi	r25, 0x18	; 24
    118e:	21 50       	subi	r18, 0x01	; 1
    1190:	80 40       	sbci	r24, 0x00	; 0
    1192:	90 40       	sbci	r25, 0x00	; 0
    1194:	e1 f7       	brne	.-8      	; 0x118e <_Z11deleteAlarmi+0x22>
    1196:	00 c0       	rjmp	.+0      	; 0x1198 <_Z11deleteAlarmi+0x2c>
    1198:	00 00       	nop
	_delay_ms(1000);
	lcdClear();
    119a:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
	page = 8;
    119e:	88 e0       	ldi	r24, 0x08	; 8
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    11a6:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    11aa:	08 95       	ret

000011ac <_Z11my_delay_usi>:
		}
	}
		
void my_delay_us(int us)
{
	while (0 < us)
    11ac:	18 16       	cp	r1, r24
    11ae:	19 06       	cpc	r1, r25
    11b0:	34 f4       	brge	.+12     	; 0x11be <_Z11my_delay_usi+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11b2:	22 e0       	ldi	r18, 0x02	; 2
    11b4:	2a 95       	dec	r18
    11b6:	f1 f7       	brne	.-4      	; 0x11b4 <_Z11my_delay_usi+0x8>
    11b8:	00 c0       	rjmp	.+0      	; 0x11ba <_Z11my_delay_usi+0xe>
	{
		_delay_us(1);
		--us;
    11ba:	01 97       	sbiw	r24, 0x01	; 1
		}
	}
		
void my_delay_us(int us)
{
	while (0 < us)
    11bc:	f7 cf       	rjmp	.-18     	; 0x11ac <_Z11my_delay_usi>
    11be:	08 95       	ret

000011c0 <_Z9musicplayPiiii>:
int melody4[] = { NOTE_D4, 4,NOTE_G4, -4, NOTE_AS4, 8, NOTE_A4, 4,NOTE_G4, 2, NOTE_D5, 4,NOTE_C5, -2, NOTE_A4, -2,NOTE_G4, -4, NOTE_AS4, 8, NOTE_A4, 4,NOTE_F4, 2, NOTE_GS4, 4,NOTE_D4, -1,NOTE_D4, 4,NOTE_G4, -4, NOTE_AS4, 8, NOTE_A4, 4,NOTE_G4, 2, NOTE_D5, 4,NOTE_F5, 2, NOTE_E5, 4,NOTE_DS5, 2, NOTE_B4, 4,NOTE_DS5, -4, NOTE_D5, 8, NOTE_CS5, 4,NOTE_CS4, 2, NOTE_B4, 4,NOTE_G4, -1,NOTE_AS4, 4,NOTE_D5, 2, NOTE_AS4, 4,NOTE_D5, 2, NOTE_AS4, 4,NOTE_DS5, 2, NOTE_D5, 4, NOTE_CS5, 2, NOTE_A4, 4, NOTE_AS4, -4, NOTE_D5, 8, NOTE_CS5, 4, NOTE_CS4, 2, NOTE_D4, 4,NOTE_D5, -1,REST,4, NOTE_AS4,4,NOTE_D5, 2, NOTE_AS4, 4,NOTE_D5, 2, NOTE_AS4, 4,NOTE_F5, 2, NOTE_E5, 4,NOTE_DS5, 2, NOTE_B4, 4,NOTE_DS5, -4, NOTE_D5, 8, NOTE_CS5, 4,NOTE_CS4, 2, NOTE_AS4, 4,NOTE_G4, -1};
//Song of storms - The Legend of Zelda Ocarina of Time
int melody5[] = {NOTE_D4,4, NOTE_A4,4, NOTE_A4,4,REST,8, NOTE_E4,8, NOTE_B4,2,NOTE_F4,4, NOTE_C5,4, NOTE_C5,4,REST,8, NOTE_E4,8, NOTE_B4,2,NOTE_D4,4, NOTE_A4,4, NOTE_A4,4,REST,8, NOTE_E4,8, NOTE_B4,2,NOTE_F4,4, NOTE_C5,4, NOTE_C5,4,REST,8, NOTE_E4,8, NOTE_B4,2,NOTE_D4,8, NOTE_F4,8, NOTE_D5,2, NOTE_D4,8, NOTE_F4,8, NOTE_D5,2,NOTE_E5,-4, NOTE_F5,8, NOTE_E5,8, NOTE_E5,8,NOTE_E5,8, NOTE_C5,8, NOTE_A4,2,NOTE_A4,4, NOTE_D4,4, NOTE_F4,8, NOTE_G4,8,NOTE_A4,-2,NOTE_A4,4, NOTE_D4,4, NOTE_F4,8, NOTE_G4,8,NOTE_E4,-2,NOTE_D4,8, NOTE_F4,8, NOTE_D5,2,NOTE_D4,8, NOTE_F4,8, NOTE_D5,2,NOTE_E5,-4, NOTE_F5,8, NOTE_E5,8, NOTE_E5,8,NOTE_E5,8, NOTE_C5,8, NOTE_A4,2,NOTE_A4,4, NOTE_D4,4, NOTE_F4,8, NOTE_G4,8,NOTE_A4,2, NOTE_A4,4,NOTE_D4,1};


void musicplay(int melody[],int sizex, int sizey, int tempo) {
    11c0:	6f 92       	push	r6
    11c2:	7f 92       	push	r7
    11c4:	8f 92       	push	r8
    11c6:	9f 92       	push	r9
    11c8:	af 92       	push	r10
    11ca:	bf 92       	push	r11
    11cc:	cf 92       	push	r12
    11ce:	df 92       	push	r13
    11d0:	ef 92       	push	r14
    11d2:	ff 92       	push	r15
    11d4:	0f 93       	push	r16
    11d6:	1f 93       	push	r17
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	6c 01       	movw	r12, r24
    11de:	cb 01       	movw	r24, r22
    menuitem = 0;
    11e0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11e4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	int notes = sizex/sizey/2 ;         //number of frequencies in melody list
    11e8:	ba 01       	movw	r22, r20
    11ea:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
    11ee:	5b 01       	movw	r10, r22
    11f0:	77 23       	and	r23, r23
    11f2:	1c f4       	brge	.+6      	; 0x11fa <_Z9musicplayPiiii+0x3a>
    11f4:	8f ef       	ldi	r24, 0xFF	; 255
    11f6:	a8 1a       	sub	r10, r24
    11f8:	b8 0a       	sbc	r11, r24
    11fa:	b5 94       	asr	r11
    11fc:	a7 94       	ror	r10
	int wholenote = (60000 * 4) / tempo;  
    11fe:	03 2e       	mov	r0, r19
    1200:	00 0c       	add	r0, r0
    1202:	44 0b       	sbc	r20, r20
    1204:	55 0b       	sbc	r21, r21
    1206:	60 e8       	ldi	r22, 0x80	; 128
    1208:	79 ea       	ldi	r23, 0xA9	; 169
    120a:	83 e0       	ldi	r24, 0x03	; 3
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 12 11 	call	0x2224	; 0x2224 <__divmodsi4>
    1212:	49 01       	movw	r8, r18
	int divider = 0, noteDuration = 0;
	
	for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
    1214:	00 e0       	ldi	r16, 0x00	; 0
    1216:	10 e0       	ldi	r17, 0x00	; 0

void musicplay(int melody[],int sizex, int sizey, int tempo) {
    menuitem = 0;
	int notes = sizex/sizey/2 ;         //number of frequencies in melody list
	int wholenote = (60000 * 4) / tempo;  
	int divider = 0, noteDuration = 0;
    1218:	e1 2c       	mov	r14, r1
    121a:	f1 2c       	mov	r15, r1
	
	for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
    121c:	c5 01       	movw	r24, r10
    121e:	88 0f       	add	r24, r24
    1220:	99 1f       	adc	r25, r25
    1222:	08 17       	cp	r16, r24
    1224:	19 07       	cpc	r17, r25
    1226:	0c f0       	brlt	.+2      	; 0x122a <_Z9musicplayPiiii+0x6a>
    1228:	87 c0       	rjmp	.+270    	; 0x1338 <_Z9musicplayPiiii+0x178>
		divider = melody[thisNote + 1];
    122a:	e8 01       	movw	r28, r16
    122c:	f8 01       	movw	r30, r16
    122e:	31 96       	adiw	r30, 0x01	; 1
    1230:	ee 0f       	add	r30, r30
    1232:	ff 1f       	adc	r31, r31
    1234:	ec 0d       	add	r30, r12
    1236:	fd 1d       	adc	r31, r13
    1238:	60 81       	ld	r22, Z
    123a:	71 81       	ldd	r23, Z+1	; 0x01
		
		if (divider > 0) {
    123c:	16 16       	cp	r1, r22
    123e:	17 06       	cpc	r1, r23
    1240:	2c f4       	brge	.+10     	; 0x124c <_Z9musicplayPiiii+0x8c>
			noteDuration = (wholenote) / divider;
    1242:	c4 01       	movw	r24, r8
    1244:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
    1248:	7b 01       	movw	r14, r22
    124a:	1c c0       	rjmp	.+56     	; 0x1284 <_Z9musicplayPiiii+0xc4>
		}
		else if (divider < 0) {
    124c:	77 23       	and	r23, r23
    124e:	d4 f4       	brge	.+52     	; 0x1284 <_Z9musicplayPiiii+0xc4>
			noteDuration = (wholenote) / abs(divider);
    1250:	9b 01       	movw	r18, r22
    1252:	77 23       	and	r23, r23
    1254:	24 f4       	brge	.+8      	; 0x125e <_Z9musicplayPiiii+0x9e>
    1256:	22 27       	eor	r18, r18
    1258:	33 27       	eor	r19, r19
    125a:	26 1b       	sub	r18, r22
    125c:	37 0b       	sbc	r19, r23
    125e:	c4 01       	movw	r24, r8
    1260:	b9 01       	movw	r22, r18
    1262:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
			noteDuration *= 1.5;
    1266:	07 2e       	mov	r0, r23
    1268:	00 0c       	add	r0, r0
    126a:	88 0b       	sbc	r24, r24
    126c:	99 0b       	sbc	r25, r25
    126e:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <__floatsisf>
    1272:	20 e0       	ldi	r18, 0x00	; 0
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	40 ec       	ldi	r20, 0xC0	; 192
    1278:	5f e3       	ldi	r21, 0x3F	; 63
    127a:	0e 94 55 10 	call	0x20aa	; 0x20aa <__mulsf3>
    127e:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__fixsfsi>
    1282:	7b 01       	movw	r14, r22
		}
		if (digitalRead(4)){      //check whether the stop button is pressed, if so, stop melody
    1284:	84 e0       	ldi	r24, 0x04	; 4
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    128c:	89 2b       	or	r24, r25
    128e:	41 f0       	breq	.+16     	; 0x12a0 <_Z9musicplayPiiii+0xe0>
			clearBit(PORTC,3);
    1290:	88 b1       	in	r24, 0x08	; 8
    1292:	87 7f       	andi	r24, 0xF7	; 247
    1294:	88 b9       	out	0x08, r24	; 8
    1296:	85 e3       	ldi	r24, 0x35	; 53
    1298:	8a 95       	dec	r24
    129a:	f1 f7       	brne	.-4      	; 0x1298 <_Z9musicplayPiiii+0xd8>
    129c:	00 00       	nop
    129e:	4c c0       	rjmp	.+152    	; 0x1338 <_Z9musicplayPiiii+0x178>
			_delay_us(20);
			break;
		}
		uint16_t delay = 1000000/(2*melody[thisNote]);    //time for one frequency(half period in micro seconds)
    12a0:	cc 0f       	add	r28, r28
    12a2:	dd 1f       	adc	r29, r29
    12a4:	cc 0d       	add	r28, r12
    12a6:	dd 1d       	adc	r29, r13
    12a8:	28 81       	ld	r18, Y
    12aa:	39 81       	ldd	r19, Y+1	; 0x01
    12ac:	22 0f       	add	r18, r18
    12ae:	33 1f       	adc	r19, r19
    12b0:	03 2e       	mov	r0, r19
    12b2:	00 0c       	add	r0, r0
    12b4:	44 0b       	sbc	r20, r20
    12b6:	55 0b       	sbc	r21, r21
    12b8:	60 e4       	ldi	r22, 0x40	; 64
    12ba:	72 e4       	ldi	r23, 0x42	; 66
    12bc:	8f e0       	ldi	r24, 0x0F	; 15
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 12 11 	call	0x2224	; 0x2224 <__divmodsi4>
    12c4:	62 2e       	mov	r6, r18
    12c6:	73 2e       	mov	r7, r19
		uint16_t tmp = 6*noteDuration;                  //speed of the sound track
    12c8:	c7 01       	movw	r24, r14
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	8e 0d       	add	r24, r14
    12d0:	9f 1d       	adc	r25, r15
    12d2:	fc 01       	movw	r30, r24
    12d4:	ee 0f       	add	r30, r30
    12d6:	ff 1f       	adc	r31, r31
		uint16_t delaysm = delay/50;               
    12d8:	36 95       	lsr	r19
    12da:	27 95       	ror	r18
    12dc:	ab e7       	ldi	r26, 0x7B	; 123
    12de:	b4 e1       	ldi	r27, 0x14	; 20
    12e0:	0e 94 37 11 	call	0x226e	; 0x226e <__umulhisi3>
    12e4:	bc 01       	movw	r22, r24
    12e6:	76 95       	lsr	r23
    12e8:	67 95       	ror	r22
		uint16_t cycles = tmp/delaysm;                
    12ea:	cf 01       	movw	r24, r30
    12ec:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <__udivmodhi4>
    12f0:	eb 01       	movw	r28, r22
		while (cycles>0)
    12f2:	20 97       	sbiw	r28, 0x00	; 0
    12f4:	f1 f0       	breq	.+60     	; 0x1332 <_Z9musicplayPiiii+0x172>
		{  //frequency generator loop
			if (digitalRead(4)){      //check whether the stop button is pressed, if so, stop melody
    12f6:	84 e0       	ldi	r24, 0x04	; 4
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    12fe:	89 2b       	or	r24, r25
    1300:	41 f0       	breq	.+16     	; 0x1312 <_Z9musicplayPiiii+0x152>
				clearBit(PORTC,3);
    1302:	88 b1       	in	r24, 0x08	; 8
    1304:	87 7f       	andi	r24, 0xF7	; 247
    1306:	88 b9       	out	0x08, r24	; 8
    1308:	85 e3       	ldi	r24, 0x35	; 53
    130a:	8a 95       	dec	r24
    130c:	f1 f7       	brne	.-4      	; 0x130a <_Z9musicplayPiiii+0x14a>
    130e:	00 00       	nop
    1310:	10 c0       	rjmp	.+32     	; 0x1332 <_Z9musicplayPiiii+0x172>
				_delay_us(20);
				break;
			}
			setBit(PORTC,3);
    1312:	88 b1       	in	r24, 0x08	; 8
    1314:	88 60       	ori	r24, 0x08	; 8
    1316:	88 b9       	out	0x08, r24	; 8
		    my_delay_us(delay);
    1318:	86 2d       	mov	r24, r6
    131a:	97 2d       	mov	r25, r7
    131c:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_Z11my_delay_usi>
			clearBit(PORTC,3);
    1320:	88 b1       	in	r24, 0x08	; 8
    1322:	87 7f       	andi	r24, 0xF7	; 247
    1324:	88 b9       	out	0x08, r24	; 8
			my_delay_us(delay);
    1326:	86 2d       	mov	r24, r6
    1328:	97 2d       	mov	r25, r7
    132a:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_Z11my_delay_usi>
			cycles--;		
    132e:	21 97       	sbiw	r28, 0x01	; 1
		}
		uint16_t delay = 1000000/(2*melody[thisNote]);    //time for one frequency(half period in micro seconds)
		uint16_t tmp = 6*noteDuration;                  //speed of the sound track
		uint16_t delaysm = delay/50;               
		uint16_t cycles = tmp/delaysm;                
		while (cycles>0)
    1330:	e0 cf       	rjmp	.-64     	; 0x12f2 <_Z9musicplayPiiii+0x132>
    menuitem = 0;
	int notes = sizex/sizey/2 ;         //number of frequencies in melody list
	int wholenote = (60000 * 4) / tempo;  
	int divider = 0, noteDuration = 0;
	
	for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {
    1332:	0e 5f       	subi	r16, 0xFE	; 254
    1334:	1f 4f       	sbci	r17, 0xFF	; 255
    1336:	72 cf       	rjmp	.-284    	; 0x121c <_Z9musicplayPiiii+0x5c>
			clearBit(PORTC,3);
			my_delay_us(delay);
			cycles--;		
		}
		}
	}
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	ff 90       	pop	r15
    1342:	ef 90       	pop	r14
    1344:	df 90       	pop	r13
    1346:	cf 90       	pop	r12
    1348:	bf 90       	pop	r11
    134a:	af 90       	pop	r10
    134c:	9f 90       	pop	r9
    134e:	8f 90       	pop	r8
    1350:	7f 90       	pop	r7
    1352:	6f 90       	pop	r6
    1354:	08 95       	ret

00001356 <_Z26checkIfDownButtonIsPressedv>:

	}
}
void checkIfDownButtonIsPressed()
{
	if (downButtonState != lastDownButtonState)
    1356:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <downButtonState>
    135a:	90 91 c3 07 	lds	r25, 0x07C3	; 0x8007c3 <downButtonState+0x1>
    135e:	20 91 ba 07 	lds	r18, 0x07BA	; 0x8007ba <lastDownButtonState>
    1362:	30 91 bb 07 	lds	r19, 0x07BB	; 0x8007bb <lastDownButtonState+0x1>
    1366:	82 17       	cp	r24, r18
    1368:	93 07       	cpc	r25, r19
    136a:	59 f0       	breq	.+22     	; 0x1382 <_Z26checkIfDownButtonIsPressedv+0x2c>
	{
		if (downButtonState == 0)
    136c:	89 2b       	or	r24, r25
    136e:	19 f4       	brne	.+6      	; 0x1376 <_Z26checkIfDownButtonIsPressedv+0x20>
		{
			down = true;
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	80 93 c6 07 	sts	0x07C6, r24	; 0x8007c6 <down>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1376:	8f e3       	ldi	r24, 0x3F	; 63
    1378:	9c e9       	ldi	r25, 0x9C	; 156
    137a:	01 97       	sbiw	r24, 0x01	; 1
    137c:	f1 f7       	brne	.-4      	; 0x137a <_Z26checkIfDownButtonIsPressedv+0x24>
    137e:	00 c0       	rjmp	.+0      	; 0x1380 <_Z26checkIfDownButtonIsPressedv+0x2a>
    1380:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastDownButtonState = downButtonState;
    1382:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <downButtonState>
    1386:	90 91 c3 07 	lds	r25, 0x07C3	; 0x8007c3 <downButtonState+0x1>
    138a:	90 93 bb 07 	sts	0x07BB, r25	; 0x8007bb <lastDownButtonState+0x1>
    138e:	80 93 ba 07 	sts	0x07BA, r24	; 0x8007ba <lastDownButtonState>
    1392:	08 95       	ret

00001394 <_Z24checkIfUpButtonIsPressedv>:
}

void checkIfUpButtonIsPressed()
{
	if (upButtonState != lastUpButtonState)
    1394:	80 91 c0 07 	lds	r24, 0x07C0	; 0x8007c0 <upButtonState>
    1398:	90 91 c1 07 	lds	r25, 0x07C1	; 0x8007c1 <upButtonState+0x1>
    139c:	20 91 b6 07 	lds	r18, 0x07B6	; 0x8007b6 <lastUpButtonState>
    13a0:	30 91 b7 07 	lds	r19, 0x07B7	; 0x8007b7 <lastUpButtonState+0x1>
    13a4:	82 17       	cp	r24, r18
    13a6:	93 07       	cpc	r25, r19
    13a8:	59 f0       	breq	.+22     	; 0x13c0 <_Z24checkIfUpButtonIsPressedv+0x2c>
	{
		if (upButtonState == 0) {
    13aa:	89 2b       	or	r24, r25
    13ac:	19 f4       	brne	.+6      	; 0x13b4 <_Z24checkIfUpButtonIsPressedv+0x20>
			up = true;
    13ae:	81 e0       	ldi	r24, 0x01	; 1
    13b0:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <up>
    13b4:	8f e3       	ldi	r24, 0x3F	; 63
    13b6:	9c e9       	ldi	r25, 0x9C	; 156
    13b8:	01 97       	sbiw	r24, 0x01	; 1
    13ba:	f1 f7       	brne	.-4      	; 0x13b8 <_Z24checkIfUpButtonIsPressedv+0x24>
    13bc:	00 c0       	rjmp	.+0      	; 0x13be <_Z24checkIfUpButtonIsPressedv+0x2a>
    13be:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastUpButtonState = upButtonState;
    13c0:	80 91 c0 07 	lds	r24, 0x07C0	; 0x8007c0 <upButtonState>
    13c4:	90 91 c1 07 	lds	r25, 0x07C1	; 0x8007c1 <upButtonState+0x1>
    13c8:	90 93 b7 07 	sts	0x07B7, r25	; 0x8007b7 <lastUpButtonState+0x1>
    13cc:	80 93 b6 07 	sts	0x07B6, r24	; 0x8007b6 <lastUpButtonState>
    13d0:	08 95       	ret

000013d2 <_Z28checkIfSelectButtonIsPressedv>:
}

void checkIfSelectButtonIsPressed()
{
	if (selectButtonState != lastSelectButtonState)
    13d2:	80 91 be 07 	lds	r24, 0x07BE	; 0x8007be <selectButtonState>
    13d6:	90 91 bf 07 	lds	r25, 0x07BF	; 0x8007bf <selectButtonState+0x1>
    13da:	20 91 b8 07 	lds	r18, 0x07B8	; 0x8007b8 <lastSelectButtonState>
    13de:	30 91 b9 07 	lds	r19, 0x07B9	; 0x8007b9 <lastSelectButtonState+0x1>
    13e2:	82 17       	cp	r24, r18
    13e4:	93 07       	cpc	r25, r19
    13e6:	59 f0       	breq	.+22     	; 0x13fe <_Z28checkIfSelectButtonIsPressedv+0x2c>
	{
		if (selectButtonState == 0) {
    13e8:	89 2b       	or	r24, r25
    13ea:	19 f4       	brne	.+6      	; 0x13f2 <_Z28checkIfSelectButtonIsPressedv+0x20>
			select = true;
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <select>
    13f2:	8f e3       	ldi	r24, 0x3F	; 63
    13f4:	9c e9       	ldi	r25, 0x9C	; 156
    13f6:	01 97       	sbiw	r24, 0x01	; 1
    13f8:	f1 f7       	brne	.-4      	; 0x13f6 <_Z28checkIfSelectButtonIsPressedv+0x24>
    13fa:	00 c0       	rjmp	.+0      	; 0x13fc <_Z28checkIfSelectButtonIsPressedv+0x2a>
    13fc:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastSelectButtonState = selectButtonState;
    13fe:	80 91 be 07 	lds	r24, 0x07BE	; 0x8007be <selectButtonState>
    1402:	90 91 bf 07 	lds	r25, 0x07BF	; 0x8007bf <selectButtonState+0x1>
    1406:	90 93 b9 07 	sts	0x07B9, r25	; 0x8007b9 <lastSelectButtonState+0x1>
    140a:	80 93 b8 07 	sts	0x07B8, r24	; 0x8007b8 <lastSelectButtonState>
    140e:	08 95       	ret

00001410 <_Z26checkIfBackButtonIsPressedv>:
}

void checkIfBackButtonIsPressed()
{
	if (backButtonState != lastBackButtonState)
    1410:	80 91 bc 07 	lds	r24, 0x07BC	; 0x8007bc <backButtonState>
    1414:	90 91 bd 07 	lds	r25, 0x07BD	; 0x8007bd <backButtonState+0x1>
    1418:	20 91 b4 07 	lds	r18, 0x07B4	; 0x8007b4 <__data_end>
    141c:	30 91 b5 07 	lds	r19, 0x07B5	; 0x8007b5 <__data_end+0x1>
    1420:	82 17       	cp	r24, r18
    1422:	93 07       	cpc	r25, r19
    1424:	59 f0       	breq	.+22     	; 0x143c <_Z26checkIfBackButtonIsPressedv+0x2c>
	{
		if (backButtonState == 0) {
    1426:	89 2b       	or	r24, r25
    1428:	19 f4       	brne	.+6      	; 0x1430 <_Z26checkIfBackButtonIsPressedv+0x20>
			back = true;
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	80 93 c4 07 	sts	0x07C4, r24	; 0x8007c4 <back>
    1430:	8f e3       	ldi	r24, 0x3F	; 63
    1432:	9c e9       	ldi	r25, 0x9C	; 156
    1434:	01 97       	sbiw	r24, 0x01	; 1
    1436:	f1 f7       	brne	.-4      	; 0x1434 <_Z26checkIfBackButtonIsPressedv+0x24>
    1438:	00 c0       	rjmp	.+0      	; 0x143a <_Z26checkIfBackButtonIsPressedv+0x2a>
    143a:	00 00       	nop
		}
		_delay_ms(20);
	}
	lastBackButtonState = backButtonState;
    143c:	80 91 bc 07 	lds	r24, 0x07BC	; 0x8007bc <backButtonState>
    1440:	90 91 bd 07 	lds	r25, 0x07BD	; 0x8007bd <backButtonState+0x1>
    1444:	90 93 b5 07 	sts	0x07B5, r25	; 0x8007b5 <__data_end+0x1>
    1448:	80 93 b4 07 	sts	0x07B4, r24	; 0x8007b4 <__data_end>
    144c:	08 95       	ret

0000144e <_Z8drawMenuv>:
}

void drawMenu()
{
	switch(page){
    144e:	e0 91 c8 07 	lds	r30, 0x07C8	; 0x8007c8 <page>
    1452:	f0 91 c9 07 	lds	r31, 0x07C9	; 0x8007c9 <page+0x1>
    1456:	ed 30       	cpi	r30, 0x0D	; 13
    1458:	f1 05       	cpc	r31, r1
    145a:	78 f5       	brcc	.+94     	; 0x14ba <_Z8drawMenuv+0x6c>
    145c:	ec 5c       	subi	r30, 0xCC	; 204
    145e:	ff 4f       	sbci	r31, 0xFF	; 255
    1460:	0c 94 31 11 	jmp	0x2262	; 0x2262 <__tablejump2__>
		case 0:
		timeDisplayInt();
    1464:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <_Z14timeDisplayIntv>
		break;
    1468:	08 95       	ret
		case 1:
		mainMenuInt();
    146a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_Z11mainMenuIntv>
		break;
    146e:	08 95       	ret
		case 2:
		dateTimeSetInt();
    1470:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <_Z14dateTimeSetIntv>
		break;
    1474:	08 95       	ret
		case 3:
		alarmMenuInt();
    1476:	0e 94 ac 02 	call	0x558	; 0x558 <_Z12alarmMenuIntv>
		break;
    147a:	08 95       	ret
		case 4:
		settingMenuInt();
    147c:	0e 94 cf 02 	call	0x59e	; 0x59e <_Z14settingMenuIntv>
		break;
    1480:	08 95       	ret
		case 5:
		volumeInt();
    1482:	0e 94 fe 02 	call	0x5fc	; 0x5fc <_Z9volumeIntv>
		break;
    1486:	08 95       	ret
		case 6:
		contrastInt();
    1488:	0e 94 2b 03 	call	0x656	; 0x656 <_Z11contrastIntv>
		break;
    148c:	08 95       	ret
		
		case 8:
		alarmListInt();
    148e:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z12alarmListIntv>
		break;
    1492:	08 95       	ret
		case 9:
		alarmTonesInt();
    1494:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_Z13alarmTonesIntv>
		break;
    1498:	08 95       	ret
		case 10:
		alarmSettingInt();
    149a:	0e 94 9f 03 	call	0x73e	; 0x73e <_Z15alarmSettingIntv>
		break;
    149e:	08 95       	ret
		case 11:
		editAlarmInt(alarmNo);
    14a0:	80 91 df 07 	lds	r24, 0x07DF	; 0x8007df <alarmNo>
    14a4:	90 91 e0 07 	lds	r25, 0x07E0	; 0x8007e0 <alarmNo+0x1>
    14a8:	0e 94 82 06 	call	0xd04	; 0xd04 <_Z12editAlarmInti>
		break;
    14ac:	08 95       	ret
		case 12:
		deleteAlarm(alarmNo);
    14ae:	80 91 df 07 	lds	r24, 0x07DF	; 0x8007df <alarmNo>
    14b2:	90 91 e0 07 	lds	r25, 0x07E0	; 0x8007e0 <alarmNo+0x1>
    14b6:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z11deleteAlarmi>
    14ba:	08 95       	ret

000014bc <main>:
void checkIfSelectButtonIsPressed();
void checkIfBackButtonIsPressed();


int main(void)
{
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	00 d0       	rcall	.+0      	; 0x14c2 <main+0x6>
    14c2:	00 d0       	rcall	.+0      	; 0x14c4 <main+0x8>
    14c4:	00 d0       	rcall	.+0      	; 0x14c6 <main+0xa>
    14c6:	cd b7       	in	r28, 0x3d	; 61
    14c8:	de b7       	in	r29, 0x3e	; 62
	
	DDRD = 0x01; //Set PORTD 4,5,6,7 pins as input pins & Set PORTD0 pin as output
    14ca:	81 e0       	ldi	r24, 0x01	; 1
    14cc:	8a b9       	out	0x0a, r24	; 10
    PORTD = 0xF0; //Set PD0, PD1, PD6, PD7 to INPUT PULL_UP and LOW pin0
    14ce:	80 ef       	ldi	r24, 0xF0	; 240
    14d0:	8b b9       	out	0x0b, r24	; 11
	DDRB = 0xFF; // Set all PORTB as output
    14d2:	8f ef       	ldi	r24, 0xFF	; 255
    14d4:	84 b9       	out	0x04, r24	; 4
	setBit(DDRC,3);
    14d6:	87 b1       	in	r24, 0x07	; 7
    14d8:	88 60       	ori	r24, 0x08	; 8
    14da:	87 b9       	out	0x07, r24	; 7
	//clearBit(PORTD,0);   //Turn backlight off 
	lcdInit();
    14dc:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_Z7lcdInitv>
	
	
    while (1) 
    {
		
		drawMenu();
    14e0:	0e 94 27 0a 	call	0x144e	; 0x144e <_Z8drawMenuv>

		downButtonState = digitalRead(7);
    14e4:	87 e0       	ldi	r24, 0x07	; 7
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    14ec:	90 93 c3 07 	sts	0x07C3, r25	; 0x8007c3 <downButtonState+0x1>
    14f0:	80 93 c2 07 	sts	0x07C2, r24	; 0x8007c2 <downButtonState>
		selectButtonState = digitalRead(6);
    14f4:	86 e0       	ldi	r24, 0x06	; 6
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    14fc:	90 93 bf 07 	sts	0x07BF, r25	; 0x8007bf <selectButtonState+0x1>
    1500:	80 93 be 07 	sts	0x07BE, r24	; 0x8007be <selectButtonState>
		upButtonState =   digitalRead(5);
    1504:	85 e0       	ldi	r24, 0x05	; 5
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    150c:	90 93 c1 07 	sts	0x07C1, r25	; 0x8007c1 <upButtonState+0x1>
    1510:	80 93 c0 07 	sts	0x07C0, r24	; 0x8007c0 <upButtonState>
		backButtonState =   digitalRead(4);
    1514:	84 e0       	ldi	r24, 0x04	; 4
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z11digitalReadi>
    151c:	90 93 bd 07 	sts	0x07BD, r25	; 0x8007bd <backButtonState+0x1>
    1520:	80 93 bc 07 	sts	0x07BC, r24	; 0x8007bc <backButtonState>

		checkIfDownButtonIsPressed();
    1524:	0e 94 ab 09 	call	0x1356	; 0x1356 <_Z26checkIfDownButtonIsPressedv>
		checkIfUpButtonIsPressed();
    1528:	0e 94 ca 09 	call	0x1394	; 0x1394 <_Z24checkIfUpButtonIsPressedv>
		checkIfSelectButtonIsPressed();
    152c:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z28checkIfSelectButtonIsPressedv>
		checkIfBackButtonIsPressed();
    1530:	0e 94 08 0a 	call	0x1410	; 0x1410 <_Z26checkIfBackButtonIsPressedv>
		char n[6];
		sprintf(n,"%02x%02x",(hor),(min));
    1534:	80 91 22 08 	lds	r24, 0x0822	; 0x800822 <min+0x1>
    1538:	8f 93       	push	r24
    153a:	80 91 21 08 	lds	r24, 0x0821	; 0x800821 <min>
    153e:	8f 93       	push	r24
    1540:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <hor+0x1>
    1544:	8f 93       	push	r24
    1546:	80 91 23 08 	lds	r24, 0x0823	; 0x800823 <hor>
    154a:	8f 93       	push	r24
    154c:	8b ea       	ldi	r24, 0xAB	; 171
    154e:	97 e0       	ldi	r25, 0x07	; 7
    1550:	9f 93       	push	r25
    1552:	8f 93       	push	r24
    1554:	ce 01       	movw	r24, r28
    1556:	01 96       	adiw	r24, 0x01	; 1
    1558:	9f 93       	push	r25
    155a:	8f 93       	push	r24
    155c:	0e 94 b3 11 	call	0x2366	; 0x2366 <sprintf>
    1560:	0f b6       	in	r0, 0x3f	; 63
    1562:	f8 94       	cli
    1564:	de bf       	out	0x3e, r29	; 62
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	cd bf       	out	0x3d, r28	; 61
		for (int i = 0; i <= alarmNo;i++){
    156a:	00 e0       	ldi	r16, 0x00	; 0
    156c:	10 e0       	ldi	r17, 0x00	; 0
    156e:	80 91 df 07 	lds	r24, 0x07DF	; 0x8007df <alarmNo>
    1572:	90 91 e0 07 	lds	r25, 0x07E0	; 0x8007e0 <alarmNo+0x1>
    1576:	80 17       	cp	r24, r16
    1578:	91 07       	cpc	r25, r17
    157a:	9c f1       	brlt	.+102    	; 0x15e2 <main+0x126>
			if ((alarmHoursList[i]==atoi(n)/100) && (alarmMinsList[i]==atoi(n)%100)){
    157c:	f8 01       	movw	r30, r16
    157e:	ee 0f       	add	r30, r30
    1580:	ff 1f       	adc	r31, r31
    1582:	e1 50       	subi	r30, 0x01	; 1
    1584:	f8 4f       	sbci	r31, 0xF8	; 248
    1586:	e0 80       	ld	r14, Z
    1588:	f1 80       	ldd	r15, Z+1	; 0x01
    158a:	ce 01       	movw	r24, r28
    158c:	01 96       	adiw	r24, 0x01	; 1
    158e:	0e 94 68 11 	call	0x22d0	; 0x22d0 <atoi>
    1592:	9c 01       	movw	r18, r24
    1594:	64 e6       	ldi	r22, 0x64	; 100
    1596:	70 e0       	ldi	r23, 0x00	; 0
    1598:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
    159c:	e6 16       	cp	r14, r22
    159e:	f7 06       	cpc	r15, r23
    15a0:	e1 f4       	brne	.+56     	; 0x15da <main+0x11e>
    15a2:	f8 01       	movw	r30, r16
    15a4:	ee 0f       	add	r30, r30
    15a6:	ff 1f       	adc	r31, r31
    15a8:	ef 50       	subi	r30, 0x0F	; 15
    15aa:	f8 4f       	sbci	r31, 0xF8	; 248
    15ac:	01 90       	ld	r0, Z+
    15ae:	f0 81       	ld	r31, Z
    15b0:	e0 2d       	mov	r30, r0
    15b2:	c9 01       	movw	r24, r18
    15b4:	64 e6       	ldi	r22, 0x64	; 100
    15b6:	70 e0       	ldi	r23, 0x00	; 0
    15b8:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__divmodhi4>
    15bc:	e8 17       	cp	r30, r24
    15be:	f9 07       	cpc	r31, r25
    15c0:	61 f4       	brne	.+24     	; 0x15da <main+0x11e>
				PORTC=(1<<PORTC3);
    15c2:	88 e0       	ldi	r24, 0x08	; 8
    15c4:	88 b9       	out	0x08, r24	; 8
    15c6:	9f ef       	ldi	r25, 0xFF	; 255
    15c8:	21 e1       	ldi	r18, 0x11	; 17
    15ca:	8a e7       	ldi	r24, 0x7A	; 122
    15cc:	91 50       	subi	r25, 0x01	; 1
    15ce:	20 40       	sbci	r18, 0x00	; 0
    15d0:	80 40       	sbci	r24, 0x00	; 0
    15d2:	e1 f7       	brne	.-8      	; 0x15cc <main+0x110>
    15d4:	00 c0       	rjmp	.+0      	; 0x15d6 <main+0x11a>
    15d6:	00 00       	nop
    15d8:	01 c0       	rjmp	.+2      	; 0x15dc <main+0x120>
				_delay_ms(5000);
			}
			else{
				PORTC=(0<<PORTC3);
    15da:	18 b8       	out	0x08, r1	; 8
		checkIfUpButtonIsPressed();
		checkIfSelectButtonIsPressed();
		checkIfBackButtonIsPressed();
		char n[6];
		sprintf(n,"%02x%02x",(hor),(min));
		for (int i = 0; i <= alarmNo;i++){
    15dc:	0f 5f       	subi	r16, 0xFF	; 255
    15de:	1f 4f       	sbci	r17, 0xFF	; 255
    15e0:	c6 cf       	rjmp	.-116    	; 0x156e <main+0xb2>
				PORTC=(0<<PORTC3);
			}
		}

        // --------------------------------UP button functions------------------------------------------------------------------
 		if (up && page == 1 ) {
    15e2:	80 91 c7 07 	lds	r24, 0x07C7	; 0x8007c7 <up>
    15e6:	88 23       	and	r24, r24
    15e8:	49 f0       	breq	.+18     	; 0x15fc <main+0x140>
    15ea:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    15ee:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    15f2:	21 30       	cpi	r18, 0x01	; 1
    15f4:	31 05       	cpc	r19, r1
    15f6:	19 f0       	breq	.+6      	; 0x15fe <main+0x142>
    15f8:	80 e0       	ldi	r24, 0x00	; 0
    15fa:	01 c0       	rjmp	.+2      	; 0x15fe <main+0x142>
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	88 23       	and	r24, r24
    1600:	c9 f0       	breq	.+50     	; 0x1634 <main+0x178>
			up = false;
    1602:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    1606:	82 e0       	ldi	r24, 0x02	; 2
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    160e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1612:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1616:	01 97       	sbiw	r24, 0x01	; 1
    1618:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    161c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0){
    1620:	89 2b       	or	r24, r25
    1622:	09 f0       	breq	.+2      	; 0x1626 <main+0x16a>
    1624:	14 c1       	rjmp	.+552    	; 0x184e <main+0x392>
				menuitem = 3;
    1626:	83 e0       	ldi	r24, 0x03	; 3
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    162e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1632:	0d c1       	rjmp	.+538    	; 0x184e <main+0x392>
			}
		 }
		else if (up && page == 2 ) {
    1634:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    1638:	99 23       	and	r25, r25
    163a:	41 f0       	breq	.+16     	; 0x164c <main+0x190>
    163c:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1640:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1644:	22 30       	cpi	r18, 0x02	; 2
    1646:	31 05       	cpc	r19, r1
    1648:	09 f4       	brne	.+2      	; 0x164c <main+0x190>
    164a:	89 2f       	mov	r24, r25
    164c:	88 23       	and	r24, r24
    164e:	19 f0       	breq	.+6      	; 0x1656 <main+0x19a>
			up = false;
    1650:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
    1654:	fc c0       	rjmp	.+504    	; 0x184e <main+0x392>
		}
	    else if (up && page == 3 ) {
    1656:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    165a:	99 23       	and	r25, r25
    165c:	41 f0       	breq	.+16     	; 0x166e <main+0x1b2>
    165e:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1662:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1666:	23 30       	cpi	r18, 0x03	; 3
    1668:	31 05       	cpc	r19, r1
    166a:	09 f4       	brne	.+2      	; 0x166e <main+0x1b2>
    166c:	89 2f       	mov	r24, r25
    166e:	88 23       	and	r24, r24
    1670:	c9 f0       	breq	.+50     	; 0x16a4 <main+0x1e8>
			up = false;
    1672:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    1676:	82 e0       	ldi	r24, 0x02	; 2
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    167e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1682:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1686:	01 97       	sbiw	r24, 0x01	; 1
    1688:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    168c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    1690:	89 2b       	or	r24, r25
    1692:	09 f0       	breq	.+2      	; 0x1696 <main+0x1da>
    1694:	dc c0       	rjmp	.+440    	; 0x184e <main+0x392>
			{
				menuitem = 2;
    1696:	82 e0       	ldi	r24, 0x02	; 2
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    169e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    16a2:	d5 c0       	rjmp	.+426    	; 0x184e <main+0x392>
			}
		}
		
		else if (up && page == 4 ) {
    16a4:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    16a8:	99 23       	and	r25, r25
    16aa:	41 f0       	breq	.+16     	; 0x16bc <main+0x200>
    16ac:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    16b0:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    16b4:	24 30       	cpi	r18, 0x04	; 4
    16b6:	31 05       	cpc	r19, r1
    16b8:	09 f4       	brne	.+2      	; 0x16bc <main+0x200>
    16ba:	89 2f       	mov	r24, r25
    16bc:	88 23       	and	r24, r24
    16be:	c9 f0       	breq	.+50     	; 0x16f2 <main+0x236>
			up = false;
    16c0:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    16c4:	82 e0       	ldi	r24, 0x02	; 2
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    16cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16d4:	01 97       	sbiw	r24, 0x01	; 1
    16d6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    16de:	89 2b       	or	r24, r25
    16e0:	09 f0       	breq	.+2      	; 0x16e4 <main+0x228>
    16e2:	b5 c0       	rjmp	.+362    	; 0x184e <main+0x392>
			{
				menuitem = 3;
    16e4:	83 e0       	ldi	r24, 0x03	; 3
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    16f0:	ae c0       	rjmp	.+348    	; 0x184e <main+0x392>
			}
		}
		else if (down && page == 5 ) {
    16f2:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    16f6:	99 23       	and	r25, r25
    16f8:	41 f0       	breq	.+16     	; 0x170a <main+0x24e>
    16fa:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    16fe:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1702:	25 30       	cpi	r18, 0x05	; 5
    1704:	31 05       	cpc	r19, r1
    1706:	09 f4       	brne	.+2      	; 0x170a <main+0x24e>
    1708:	89 2f       	mov	r24, r25
    170a:	88 23       	and	r24, r24
    170c:	81 f0       	breq	.+32     	; 0x172e <main+0x272>
			down = false;
    170e:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    1712:	82 e0       	ldi	r24, 0x02	; 2
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			volume++;
    171a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
    171e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
    1722:	01 96       	adiw	r24, 0x01	; 1
    1724:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
    1728:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
    172c:	90 c0       	rjmp	.+288    	; 0x184e <main+0x392>
		}
		else if (up && page == 6 ) {
    172e:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    1732:	99 23       	and	r25, r25
    1734:	41 f0       	breq	.+16     	; 0x1746 <main+0x28a>
    1736:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    173a:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    173e:	26 30       	cpi	r18, 0x06	; 6
    1740:	31 05       	cpc	r19, r1
    1742:	09 f4       	brne	.+2      	; 0x1746 <main+0x28a>
    1744:	89 2f       	mov	r24, r25
    1746:	88 23       	and	r24, r24
    1748:	81 f0       	breq	.+32     	; 0x176a <main+0x2ae>
			up = false;
    174a:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    174e:	82 e0       	ldi	r24, 0x02	; 2
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			contrast--;
    1756:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
    175a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
    175e:	01 97       	sbiw	r24, 0x01	; 1
    1760:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
    1764:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
    1768:	72 c0       	rjmp	.+228    	; 0x184e <main+0x392>
			//setContrast();
		}
		else if (up && page == 8 ) {
    176a:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    176e:	99 23       	and	r25, r25
    1770:	41 f0       	breq	.+16     	; 0x1782 <main+0x2c6>
    1772:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1776:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    177a:	28 30       	cpi	r18, 0x08	; 8
    177c:	31 05       	cpc	r19, r1
    177e:	09 f4       	brne	.+2      	; 0x1782 <main+0x2c6>
    1780:	89 2f       	mov	r24, r25
    1782:	88 23       	and	r24, r24
    1784:	c9 f0       	breq	.+50     	; 0x17b8 <main+0x2fc>
			up = false;
    1786:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    178a:	82 e0       	ldi	r24, 0x02	; 2
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    1792:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1796:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    17a4:	89 2b       	or	r24, r25
    17a6:	09 f0       	breq	.+2      	; 0x17aa <main+0x2ee>
    17a8:	52 c0       	rjmp	.+164    	; 0x184e <main+0x392>
			{
				menuitem = 7;
    17aa:	87 e0       	ldi	r24, 0x07	; 7
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    17b6:	4b c0       	rjmp	.+150    	; 0x184e <main+0x392>
			}
		}
		else if (up && page == 9 ) {
    17b8:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    17bc:	99 23       	and	r25, r25
    17be:	41 f0       	breq	.+16     	; 0x17d0 <main+0x314>
    17c0:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    17c4:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    17c8:	29 30       	cpi	r18, 0x09	; 9
    17ca:	31 05       	cpc	r19, r1
    17cc:	09 f4       	brne	.+2      	; 0x17d0 <main+0x314>
    17ce:	89 2f       	mov	r24, r25
    17d0:	88 23       	and	r24, r24
    17d2:	c1 f0       	breq	.+48     	; 0x1804 <main+0x348>
			up = false;
    17d4:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    17d8:	82 e0       	ldi	r24, 0x02	; 2
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    17e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    17e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    17f2:	89 2b       	or	r24, r25
    17f4:	61 f5       	brne	.+88     	; 0x184e <main+0x392>
			{
				menuitem = 5;
    17f6:	85 e0       	ldi	r24, 0x05	; 5
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1802:	25 c0       	rjmp	.+74     	; 0x184e <main+0x392>
			}
		}
		else if (up && page == 10 ) {
    1804:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    1808:	99 23       	and	r25, r25
    180a:	41 f0       	breq	.+16     	; 0x181c <main+0x360>
    180c:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1810:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1814:	2a 30       	cpi	r18, 0x0A	; 10
    1816:	31 05       	cpc	r19, r1
    1818:	09 f4       	brne	.+2      	; 0x181c <main+0x360>
    181a:	89 2f       	mov	r24, r25
    181c:	88 23       	and	r24, r24
    181e:	b9 f0       	breq	.+46     	; 0x184e <main+0x392>
			up = false;
    1820:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    1824:	82 e0       	ldi	r24, 0x02	; 2
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem--;
    182c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1830:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1834:	01 97       	sbiw	r24, 0x01	; 1
    1836:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    183a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 0)
    183e:	89 2b       	or	r24, r25
    1840:	31 f4       	brne	.+12     	; 0x184e <main+0x392>
			{
				menuitem = 2;
    1842:	82 e0       	ldi	r24, 0x02	; 2
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    184a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
		}


        //-------------------------------------- DOWN button functions------------------------------------------------------
		if (down && page == 1) {
    184e:	80 91 c6 07 	lds	r24, 0x07C6	; 0x8007c6 <down>
    1852:	88 23       	and	r24, r24
    1854:	49 f0       	breq	.+18     	; 0x1868 <main+0x3ac>
    1856:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    185a:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    185e:	21 30       	cpi	r18, 0x01	; 1
    1860:	31 05       	cpc	r19, r1
    1862:	19 f0       	breq	.+6      	; 0x186a <main+0x3ae>
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	01 c0       	rjmp	.+2      	; 0x186a <main+0x3ae>
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	88 23       	and	r24, r24
    186c:	c9 f0       	breq	.+50     	; 0x18a0 <main+0x3e4>
			down = false;
    186e:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    1872:	82 e0       	ldi	r24, 0x02	; 2
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    187a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    187e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1882:	01 96       	adiw	r24, 0x01	; 1
    1884:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1888:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 4)
    188c:	04 97       	sbiw	r24, 0x04	; 4
    188e:	09 f0       	breq	.+2      	; 0x1892 <main+0x3d6>
    1890:	14 c1       	rjmp	.+552    	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1892:	81 e0       	ldi	r24, 0x01	; 1
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    189a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    189e:	0d c1       	rjmp	.+538    	; 0x1aba <main+0x5fe>
			}
		}
		else if (down && page == 2) {
    18a0:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    18a4:	99 23       	and	r25, r25
    18a6:	41 f0       	breq	.+16     	; 0x18b8 <main+0x3fc>
    18a8:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    18ac:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    18b0:	22 30       	cpi	r18, 0x02	; 2
    18b2:	31 05       	cpc	r19, r1
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <main+0x3fc>
    18b6:	89 2f       	mov	r24, r25
    18b8:	88 23       	and	r24, r24
    18ba:	19 f0       	breq	.+6      	; 0x18c2 <main+0x406>
			down = false;
    18bc:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
    18c0:	fc c0       	rjmp	.+504    	; 0x1aba <main+0x5fe>
		}
		else if (down && page == 3) {
    18c2:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    18c6:	99 23       	and	r25, r25
    18c8:	41 f0       	breq	.+16     	; 0x18da <main+0x41e>
    18ca:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    18ce:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    18d2:	23 30       	cpi	r18, 0x03	; 3
    18d4:	31 05       	cpc	r19, r1
    18d6:	09 f4       	brne	.+2      	; 0x18da <main+0x41e>
    18d8:	89 2f       	mov	r24, r25
    18da:	88 23       	and	r24, r24
    18dc:	c9 f0       	breq	.+50     	; 0x1910 <main+0x454>
			down = false;
    18de:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    18e2:	82 e0       	ldi	r24, 0x02	; 2
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    18ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18f2:	01 96       	adiw	r24, 0x01	; 1
    18f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18f8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 3)
    18fc:	03 97       	sbiw	r24, 0x03	; 3
    18fe:	09 f0       	breq	.+2      	; 0x1902 <main+0x446>
    1900:	dc c0       	rjmp	.+440    	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1902:	81 e0       	ldi	r24, 0x01	; 1
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    190a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    190e:	d5 c0       	rjmp	.+426    	; 0x1aba <main+0x5fe>
			}
		}
		else if (down && page == 4) {
    1910:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    1914:	99 23       	and	r25, r25
    1916:	41 f0       	breq	.+16     	; 0x1928 <main+0x46c>
    1918:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    191c:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1920:	24 30       	cpi	r18, 0x04	; 4
    1922:	31 05       	cpc	r19, r1
    1924:	09 f4       	brne	.+2      	; 0x1928 <main+0x46c>
    1926:	89 2f       	mov	r24, r25
    1928:	88 23       	and	r24, r24
    192a:	c9 f0       	breq	.+50     	; 0x195e <main+0x4a2>
			down = false;
    192c:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    1930:	82 e0       	ldi	r24, 0x02	; 2
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    1938:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    193c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1940:	01 96       	adiw	r24, 0x01	; 1
    1942:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1946:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 4)
    194a:	04 97       	sbiw	r24, 0x04	; 4
    194c:	09 f0       	breq	.+2      	; 0x1950 <main+0x494>
    194e:	b5 c0       	rjmp	.+362    	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1950:	81 e0       	ldi	r24, 0x01	; 1
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1958:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    195c:	ae c0       	rjmp	.+348    	; 0x1aba <main+0x5fe>
			}
		}

		else if (up && page == 5 ) {
    195e:	90 91 c7 07 	lds	r25, 0x07C7	; 0x8007c7 <up>
    1962:	99 23       	and	r25, r25
    1964:	41 f0       	breq	.+16     	; 0x1976 <main+0x4ba>
    1966:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    196a:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    196e:	25 30       	cpi	r18, 0x05	; 5
    1970:	31 05       	cpc	r19, r1
    1972:	09 f4       	brne	.+2      	; 0x1976 <main+0x4ba>
    1974:	89 2f       	mov	r24, r25
    1976:	88 23       	and	r24, r24
    1978:	81 f0       	breq	.+32     	; 0x199a <main+0x4de>
			up = false;
    197a:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <up>
			lcdClearLine(2);
    197e:	82 e0       	ldi	r24, 0x02	; 2
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			volume--;
    1986:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <volume>
    198a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <volume+0x1>
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <volume+0x1>
    1994:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <volume>
    1998:	90 c0       	rjmp	.+288    	; 0x1aba <main+0x5fe>
		}
		
		else if (down && page == 6 ) {
    199a:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    199e:	99 23       	and	r25, r25
    19a0:	41 f0       	breq	.+16     	; 0x19b2 <main+0x4f6>
    19a2:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    19a6:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    19aa:	26 30       	cpi	r18, 0x06	; 6
    19ac:	31 05       	cpc	r19, r1
    19ae:	09 f4       	brne	.+2      	; 0x19b2 <main+0x4f6>
    19b0:	89 2f       	mov	r24, r25
    19b2:	88 23       	and	r24, r24
    19b4:	81 f0       	breq	.+32     	; 0x19d6 <main+0x51a>
			down = false;
    19b6:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    19ba:	82 e0       	ldi	r24, 0x02	; 2
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			contrast++;
    19c2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <contrast>
    19c6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <contrast+0x1>
    19ca:	01 96       	adiw	r24, 0x01	; 1
    19cc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <contrast+0x1>
    19d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <contrast>
    19d4:	72 c0       	rjmp	.+228    	; 0x1aba <main+0x5fe>
			//setContrast();
		}

		else if (down && page == 8) {
    19d6:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    19da:	99 23       	and	r25, r25
    19dc:	41 f0       	breq	.+16     	; 0x19ee <main+0x532>
    19de:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    19e2:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    19e6:	28 30       	cpi	r18, 0x08	; 8
    19e8:	31 05       	cpc	r19, r1
    19ea:	09 f4       	brne	.+2      	; 0x19ee <main+0x532>
    19ec:	89 2f       	mov	r24, r25
    19ee:	88 23       	and	r24, r24
    19f0:	c9 f0       	breq	.+50     	; 0x1a24 <main+0x568>
			down = false;
    19f2:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    19f6:	82 e0       	ldi	r24, 0x02	; 2
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    19fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a02:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a06:	01 96       	adiw	r24, 0x01	; 1
    1a08:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a0c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 8)
    1a10:	08 97       	sbiw	r24, 0x08	; 8
    1a12:	09 f0       	breq	.+2      	; 0x1a16 <main+0x55a>
    1a14:	52 c0       	rjmp	.+164    	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1a16:	81 e0       	ldi	r24, 0x01	; 1
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a1e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a22:	4b c0       	rjmp	.+150    	; 0x1aba <main+0x5fe>
			}
		}

		else if (down && page == 9) {
    1a24:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    1a28:	99 23       	and	r25, r25
    1a2a:	41 f0       	breq	.+16     	; 0x1a3c <main+0x580>
    1a2c:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1a30:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1a34:	29 30       	cpi	r18, 0x09	; 9
    1a36:	31 05       	cpc	r19, r1
    1a38:	09 f4       	brne	.+2      	; 0x1a3c <main+0x580>
    1a3a:	89 2f       	mov	r24, r25
    1a3c:	88 23       	and	r24, r24
    1a3e:	c1 f0       	breq	.+48     	; 0x1a70 <main+0x5b4>
			down = false;
    1a40:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    1a44:	82 e0       	ldi	r24, 0x02	; 2
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    1a4c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a50:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a54:	01 96       	adiw	r24, 0x01	; 1
    1a56:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a5a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 6)
    1a5e:	06 97       	sbiw	r24, 0x06	; 6
    1a60:	61 f5       	brne	.+88     	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1a62:	81 e0       	ldi	r24, 0x01	; 1
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a6a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a6e:	25 c0       	rjmp	.+74     	; 0x1aba <main+0x5fe>
			}
		}
		else if (down && page == 10 ) {
    1a70:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <down>
    1a74:	99 23       	and	r25, r25
    1a76:	41 f0       	breq	.+16     	; 0x1a88 <main+0x5cc>
    1a78:	20 91 c8 07 	lds	r18, 0x07C8	; 0x8007c8 <page>
    1a7c:	30 91 c9 07 	lds	r19, 0x07C9	; 0x8007c9 <page+0x1>
    1a80:	2a 30       	cpi	r18, 0x0A	; 10
    1a82:	31 05       	cpc	r19, r1
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <main+0x5cc>
    1a86:	89 2f       	mov	r24, r25
    1a88:	88 23       	and	r24, r24
    1a8a:	b9 f0       	breq	.+46     	; 0x1aba <main+0x5fe>
			down = false;
    1a8c:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <down>
			lcdClearLine(2);
    1a90:	82 e0       	ldi	r24, 0x02	; 2
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12lcdClearLinei>
			menuitem++;
    1a98:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a9c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aa0:	01 96       	adiw	r24, 0x01	; 1
    1aa2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aa6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (menuitem == 3)
    1aaa:	03 97       	sbiw	r24, 0x03	; 3
    1aac:	31 f4       	brne	.+12     	; 0x1aba <main+0x5fe>
			{
				menuitem = 1;
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ab6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>


		

        //---------------------------------------------SELECT button functions---------------------------------------
		if (select) {
    1aba:	80 91 c5 07 	lds	r24, 0x07C5	; 0x8007c5 <select>
    1abe:	88 23       	and	r24, r24
    1ac0:	09 f4       	brne	.+2      	; 0x1ac4 <main+0x608>
    1ac2:	8a c1       	rjmp	.+788    	; 0x1dd8 <main+0x91c>
			select = false;
    1ac4:	10 92 c5 07 	sts	0x07C5, r1	; 0x8007c5 <select>

			if (page == 0)
    1ac8:	80 91 c8 07 	lds	r24, 0x07C8	; 0x8007c8 <page>
    1acc:	90 91 c9 07 	lds	r25, 0x07C9	; 0x8007c9 <page+0x1>
    1ad0:	00 97       	sbiw	r24, 0x00	; 0
    1ad2:	69 f4       	brne	.+26     	; 0x1aee <main+0x632>
			{
				lcdClear();
    1ad4:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1ad8:	81 e0       	ldi	r24, 0x01	; 1
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1ae0:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1ae4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ae8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1aec:	75 c1       	rjmp	.+746    	; 0x1dd8 <main+0x91c>
				
			}
			else if (page == 1 && menuitem == 1)
    1aee:	81 30       	cpi	r24, 0x01	; 1
    1af0:	91 05       	cpc	r25, r1
    1af2:	b1 f4       	brne	.+44     	; 0x1b20 <main+0x664>
    1af4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1af8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1afc:	21 30       	cpi	r18, 0x01	; 1
    1afe:	31 05       	cpc	r19, r1
    1b00:	79 f4       	brne	.+30     	; 0x1b20 <main+0x664>
			{
				lcdClear();
    1b02:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1b06:	83 e0       	ldi	r24, 0x03	; 3
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1b0e:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b1a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b1e:	5c c1       	rjmp	.+696    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 1 && menuitem == 2)
    1b20:	81 30       	cpi	r24, 0x01	; 1
    1b22:	91 05       	cpc	r25, r1
    1b24:	81 f4       	brne	.+32     	; 0x1b46 <main+0x68a>
    1b26:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b2a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b2e:	22 30       	cpi	r18, 0x02	; 2
    1b30:	31 05       	cpc	r19, r1
    1b32:	49 f4       	brne	.+18     	; 0x1b46 <main+0x68a>
			{
				lcdClear();
    1b34:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 2;
    1b38:	82 e0       	ldi	r24, 0x02	; 2
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1b40:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    1b44:	49 c1       	rjmp	.+658    	; 0x1dd8 <main+0x91c>
			}

			else if (page == 1 && menuitem == 3)
    1b46:	81 30       	cpi	r24, 0x01	; 1
    1b48:	91 05       	cpc	r25, r1
    1b4a:	b1 f4       	brne	.+44     	; 0x1b78 <main+0x6bc>
    1b4c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b50:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b54:	23 30       	cpi	r18, 0x03	; 3
    1b56:	31 05       	cpc	r19, r1
    1b58:	79 f4       	brne	.+30     	; 0x1b78 <main+0x6bc>
			{
				lcdClear();
    1b5a:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1b5e:	84 e0       	ldi	r24, 0x04	; 4
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1b66:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b72:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b76:	30 c1       	rjmp	.+608    	; 0x1dd8 <main+0x91c>

			}

			
			else if (page == 2)
    1b78:	82 30       	cpi	r24, 0x02	; 2
    1b7a:	91 05       	cpc	r25, r1
    1b7c:	49 f4       	brne	.+18     	; 0x1b90 <main+0x6d4>
			{
				lcdClear();
    1b7e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1b8a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    1b8e:	24 c1       	rjmp	.+584    	; 0x1dd8 <main+0x91c>
// 			else if (page == 3 && menuitem == 1)
// 			{
// 				lcdClear();
// 				page = 7;
// 			}
			else if (page == 3 && menuitem == 1)
    1b90:	83 30       	cpi	r24, 0x03	; 3
    1b92:	91 05       	cpc	r25, r1
    1b94:	b1 f4       	brne	.+44     	; 0x1bc2 <main+0x706>
    1b96:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b9a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b9e:	21 30       	cpi	r18, 0x01	; 1
    1ba0:	31 05       	cpc	r19, r1
    1ba2:	79 f4       	brne	.+30     	; 0x1bc2 <main+0x706>
			{
				lcdClear();
    1ba4:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 8;
    1ba8:	88 e0       	ldi	r24, 0x08	; 8
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1bb0:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bbc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bc0:	0b c1       	rjmp	.+534    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 3 && menuitem == 2)
    1bc2:	83 30       	cpi	r24, 0x03	; 3
    1bc4:	91 05       	cpc	r25, r1
    1bc6:	b1 f4       	brne	.+44     	; 0x1bf4 <main+0x738>
    1bc8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bcc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bd0:	22 30       	cpi	r18, 0x02	; 2
    1bd2:	31 05       	cpc	r19, r1
    1bd4:	79 f4       	brne	.+30     	; 0x1bf4 <main+0x738>
			{
				lcdClear();
    1bd6:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 9;
    1bda:	89 e0       	ldi	r24, 0x09	; 9
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1be2:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bf2:	f2 c0       	rjmp	.+484    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 4 && menuitem == 1)
    1bf4:	84 30       	cpi	r24, 0x04	; 4
    1bf6:	91 05       	cpc	r25, r1
    1bf8:	81 f4       	brne	.+32     	; 0x1c1a <main+0x75e>
    1bfa:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bfe:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c02:	21 30       	cpi	r18, 0x01	; 1
    1c04:	31 05       	cpc	r19, r1
    1c06:	49 f4       	brne	.+18     	; 0x1c1a <main+0x75e>
			{
				lcdClear();
    1c08:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 5;
    1c0c:	85 e0       	ldi	r24, 0x05	; 5
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1c14:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    1c18:	df c0       	rjmp	.+446    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 4 && menuitem == 2)
    1c1a:	84 30       	cpi	r24, 0x04	; 4
    1c1c:	91 05       	cpc	r25, r1
    1c1e:	81 f4       	brne	.+32     	; 0x1c40 <main+0x784>
    1c20:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c24:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c28:	22 30       	cpi	r18, 0x02	; 2
    1c2a:	31 05       	cpc	r19, r1
    1c2c:	49 f4       	brne	.+18     	; 0x1c40 <main+0x784>
			{
				lcdClear();
    1c2e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 6;
    1c32:	86 e0       	ldi	r24, 0x06	; 6
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1c3a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    1c3e:	cc c0       	rjmp	.+408    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 4 && menuitem == 3)
    1c40:	84 30       	cpi	r24, 0x04	; 4
    1c42:	91 05       	cpc	r25, r1
    1c44:	51 f4       	brne	.+20     	; 0x1c5a <main+0x79e>
    1c46:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c4a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c4e:	23 30       	cpi	r18, 0x03	; 3
    1c50:	31 05       	cpc	r19, r1
    1c52:	19 f4       	brne	.+6      	; 0x1c5a <main+0x79e>
			{
				resetDefaults();
    1c54:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z13resetDefaultsv>
    1c58:	bf c0       	rjmp	.+382    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 5)
    1c5a:	85 30       	cpi	r24, 0x05	; 5
    1c5c:	91 05       	cpc	r25, r1
    1c5e:	79 f4       	brne	.+30     	; 0x1c7e <main+0x7c2>
			{
				lcdClear();
    1c60:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1c64:	84 e0       	ldi	r24, 0x04	; 4
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1c6c:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1c70:	81 e0       	ldi	r24, 0x01	; 1
    1c72:	90 e0       	ldi	r25, 0x00	; 0
    1c74:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c78:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c7c:	ad c0       	rjmp	.+346    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 6)
    1c7e:	86 30       	cpi	r24, 0x06	; 6
    1c80:	91 05       	cpc	r25, r1
    1c82:	79 f4       	brne	.+30     	; 0x1ca2 <main+0x7e6>
			{
				lcdClear();
    1c84:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1c88:	84 e0       	ldi	r24, 0x04	; 4
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1c90:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 2;
    1c94:	82 e0       	ldi	r24, 0x02	; 2
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c9c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ca0:	9b c0       	rjmp	.+310    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 7)
    1ca2:	87 30       	cpi	r24, 0x07	; 7
    1ca4:	91 05       	cpc	r25, r1
    1ca6:	79 f4       	brne	.+30     	; 0x1cc6 <main+0x80a>
			{
				lcdClear();
    1ca8:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1cac:	83 e0       	ldi	r24, 0x03	; 3
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1cb4:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cc0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cc4:	89 c0       	rjmp	.+274    	; 0x1dd8 <main+0x91c>
			}else if (page == 8)
    1cc6:	88 30       	cpi	r24, 0x08	; 8
    1cc8:	91 05       	cpc	r25, r1
    1cca:	79 f4       	brne	.+30     	; 0x1cea <main+0x82e>
			{
				lcdClear();
    1ccc:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 10;
    1cd0:	8a e0       	ldi	r24, 0x0A	; 10
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1cd8:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1cdc:	81 e0       	ldi	r24, 0x01	; 1
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ce4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ce8:	77 c0       	rjmp	.+238    	; 0x1dd8 <main+0x91c>
			}else if (page == 10 && menuitem == 1)
    1cea:	8a 30       	cpi	r24, 0x0A	; 10
    1cec:	91 05       	cpc	r25, r1
    1cee:	81 f4       	brne	.+32     	; 0x1d10 <main+0x854>
    1cf0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cf4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cf8:	21 30       	cpi	r18, 0x01	; 1
    1cfa:	31 05       	cpc	r19, r1
    1cfc:	49 f4       	brne	.+18     	; 0x1d10 <main+0x854>
			{
				lcdClear();
    1cfe:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 11;
    1d02:	8b e0       	ldi	r24, 0x0B	; 11
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1d0a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
    1d0e:	64 c0       	rjmp	.+200    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 10 && menuitem == 2)
    1d10:	8a 30       	cpi	r24, 0x0A	; 10
    1d12:	91 05       	cpc	r25, r1
    1d14:	b1 f4       	brne	.+44     	; 0x1d42 <main+0x886>
    1d16:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d1a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d1e:	22 30       	cpi	r18, 0x02	; 2
    1d20:	31 05       	cpc	r19, r1
    1d22:	79 f4       	brne	.+30     	; 0x1d42 <main+0x886>
			{
				lcdClear();
    1d24:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 12;
    1d28:	8c e0       	ldi	r24, 0x0C	; 12
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1d30:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1d34:	81 e0       	ldi	r24, 0x01	; 1
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d3c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d40:	4b c0       	rjmp	.+150    	; 0x1dd8 <main+0x91c>
			}
			else if (page == 9)
    1d42:	09 97       	sbiw	r24, 0x09	; 9
    1d44:	09 f0       	breq	.+2      	; 0x1d48 <main+0x88c>
    1d46:	48 c0       	rjmp	.+144    	; 0x1dd8 <main+0x91c>
			{
					if(menuitem == 1){
    1d48:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d4c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d50:	81 30       	cpi	r24, 0x01	; 1
    1d52:	91 05       	cpc	r25, r1
    1d54:	59 f4       	brne	.+22     	; 0x1d6c <main+0x8b0>
						musicplay(melody1, sizeof(melody1), sizeof(melody1[0]),108);
    1d56:	2c e6       	ldi	r18, 0x6C	; 108
    1d58:	30 e0       	ldi	r19, 0x00	; 0
    1d5a:	42 e0       	ldi	r20, 0x02	; 2
    1d5c:	50 e0       	ldi	r21, 0x00	; 0
    1d5e:	60 ec       	ldi	r22, 0xC0	; 192
    1d60:	70 e0       	ldi	r23, 0x00	; 0
    1d62:	86 e1       	ldi	r24, 0x16	; 22
    1d64:	95 e0       	ldi	r25, 0x05	; 5
    1d66:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_Z9musicplayPiiii>
    1d6a:	36 c0       	rjmp	.+108    	; 0x1dd8 <main+0x91c>
					}
					else if(menuitem == 2){
    1d6c:	82 30       	cpi	r24, 0x02	; 2
    1d6e:	91 05       	cpc	r25, r1
    1d70:	59 f4       	brne	.+22     	; 0x1d88 <main+0x8cc>
						musicplay(melody2, sizeof(melody2), sizeof(melody2[0]),70);
    1d72:	26 e4       	ldi	r18, 0x46	; 70
    1d74:	30 e0       	ldi	r19, 0x00	; 0
    1d76:	42 e0       	ldi	r20, 0x02	; 2
    1d78:	50 e0       	ldi	r21, 0x00	; 0
    1d7a:	60 e1       	ldi	r22, 0x10	; 16
    1d7c:	71 e0       	ldi	r23, 0x01	; 1
    1d7e:	86 e0       	ldi	r24, 0x06	; 6
    1d80:	94 e0       	ldi	r25, 0x04	; 4
    1d82:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_Z9musicplayPiiii>
    1d86:	28 c0       	rjmp	.+80     	; 0x1dd8 <main+0x91c>
					}
					else if(menuitem == 3){
    1d88:	83 30       	cpi	r24, 0x03	; 3
    1d8a:	91 05       	cpc	r25, r1
    1d8c:	59 f4       	brne	.+22     	; 0x1da4 <main+0x8e8>
						musicplay(melody3, sizeof(melody3), sizeof(melody3[0]),140);
    1d8e:	2c e8       	ldi	r18, 0x8C	; 140
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	42 e0       	ldi	r20, 0x02	; 2
    1d94:	50 e0       	ldi	r21, 0x00	; 0
    1d96:	60 e0       	ldi	r22, 0x00	; 0
    1d98:	71 e0       	ldi	r23, 0x01	; 1
    1d9a:	86 e0       	ldi	r24, 0x06	; 6
    1d9c:	93 e0       	ldi	r25, 0x03	; 3
    1d9e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_Z9musicplayPiiii>
    1da2:	1a c0       	rjmp	.+52     	; 0x1dd8 <main+0x91c>
					}
					else if(menuitem == 4){
    1da4:	84 30       	cpi	r24, 0x04	; 4
    1da6:	91 05       	cpc	r25, r1
    1da8:	59 f4       	brne	.+22     	; 0x1dc0 <main+0x904>
						musicplay(melody4, sizeof(melody4), sizeof(melody4[0]),144);
    1daa:	20 e9       	ldi	r18, 0x90	; 144
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	42 e0       	ldi	r20, 0x02	; 2
    1db0:	50 e0       	ldi	r21, 0x00	; 0
    1db2:	64 ef       	ldi	r22, 0xF4	; 244
    1db4:	70 e0       	ldi	r23, 0x00	; 0
    1db6:	82 e1       	ldi	r24, 0x12	; 18
    1db8:	92 e0       	ldi	r25, 0x02	; 2
    1dba:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_Z9musicplayPiiii>
    1dbe:	0c c0       	rjmp	.+24     	; 0x1dd8 <main+0x91c>
					}
					else if(menuitem == 5){
    1dc0:	05 97       	sbiw	r24, 0x05	; 5
    1dc2:	51 f4       	brne	.+20     	; 0x1dd8 <main+0x91c>
						musicplay(melody5, sizeof(melody5), sizeof(melody5[0]),108);
    1dc4:	2c e6       	ldi	r18, 0x6C	; 108
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	42 e0       	ldi	r20, 0x02	; 2
    1dca:	50 e0       	ldi	r21, 0x00	; 0
    1dcc:	6c e0       	ldi	r22, 0x0C	; 12
    1dce:	71 e0       	ldi	r23, 0x01	; 1
    1dd0:	86 e0       	ldi	r24, 0x06	; 6
    1dd2:	91 e0       	ldi	r25, 0x01	; 1
    1dd4:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <_Z9musicplayPiiii>
					}
				}
			}
		
		//---------------------------------------BACK button functions-------------------------------------------------------------- 
		if (back) {
    1dd8:	80 91 c4 07 	lds	r24, 0x07C4	; 0x8007c4 <back>
    1ddc:	88 23       	and	r24, r24
    1dde:	09 f4       	brne	.+2      	; 0x1de2 <main+0x926>
    1de0:	7f cb       	rjmp	.-2306   	; 0x14e0 <main+0x24>
			back = false;
    1de2:	10 92 c4 07 	sts	0x07C4, r1	; 0x8007c4 <back>
			if (page == 0)
    1de6:	80 91 c8 07 	lds	r24, 0x07C8	; 0x8007c8 <page>
    1dea:	90 91 c9 07 	lds	r25, 0x07C9	; 0x8007c9 <page+0x1>
    1dee:	00 97       	sbiw	r24, 0x00	; 0
    1df0:	79 f4       	brne	.+30     	; 0x1e10 <main+0x954>
			{
				if (backlight)
    1df2:	80 91 ca 07 	lds	r24, 0x07CA	; 0x8007ca <backlight>
    1df6:	88 23       	and	r24, r24
    1df8:	29 f0       	breq	.+10     	; 0x1e04 <main+0x948>
				{
					backlight = false;
    1dfa:	10 92 ca 07 	sts	0x07CA, r1	; 0x8007ca <backlight>
					turnBacklightOff();
    1dfe:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <_Z16turnBacklightOffv>
    1e02:	6e cb       	rjmp	.-2340   	; 0x14e0 <main+0x24>
				}
				else
				{
					backlight = true;
    1e04:	81 e0       	ldi	r24, 0x01	; 1
    1e06:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <backlight>
					turnBacklightOn();
    1e0a:	0e 94 c2 03 	call	0x784	; 0x784 <_Z15turnBacklightOnv>
    1e0e:	68 cb       	rjmp	.-2352   	; 0x14e0 <main+0x24>
				}
			}
			else if (page == 1)
    1e10:	81 30       	cpi	r24, 0x01	; 1
    1e12:	91 05       	cpc	r25, r1
    1e14:	39 f4       	brne	.+14     	; 0x1e24 <main+0x968>
			{
				lcdClear();
    1e16:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 0;
    1e1a:	10 92 c9 07 	sts	0x07C9, r1	; 0x8007c9 <page+0x1>
    1e1e:	10 92 c8 07 	sts	0x07C8, r1	; 0x8007c8 <page>
    1e22:	5e cb       	rjmp	.-2372   	; 0x14e0 <main+0x24>
			}
			else if (page == 2)
    1e24:	82 30       	cpi	r24, 0x02	; 2
    1e26:	91 05       	cpc	r25, r1
    1e28:	79 f4       	brne	.+30     	; 0x1e48 <main+0x98c>
			{
				lcdClear();
    1e2a:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1e36:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 2;
    1e3a:	82 e0       	ldi	r24, 0x02	; 2
    1e3c:	90 e0       	ldi	r25, 0x00	; 0
    1e3e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e42:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e46:	4c cb       	rjmp	.-2408   	; 0x14e0 <main+0x24>
			}
			else if (page == 3)
    1e48:	83 30       	cpi	r24, 0x03	; 3
    1e4a:	91 05       	cpc	r25, r1
    1e4c:	69 f4       	brne	.+26     	; 0x1e68 <main+0x9ac>
			{
				lcdClear();
    1e4e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1e5a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1e5e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e62:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e66:	3c cb       	rjmp	.-2440   	; 0x14e0 <main+0x24>
			}
			else if (page == 4)
    1e68:	84 30       	cpi	r24, 0x04	; 4
    1e6a:	91 05       	cpc	r25, r1
    1e6c:	79 f4       	brne	.+30     	; 0x1e8c <main+0x9d0>
			{
				lcdClear();
    1e6e:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 1;
    1e72:	81 e0       	ldi	r24, 0x01	; 1
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1e7a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 3;
    1e7e:	83 e0       	ldi	r24, 0x03	; 3
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e86:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e8a:	2a cb       	rjmp	.-2476   	; 0x14e0 <main+0x24>
			}
			else if (page == 5)
    1e8c:	85 30       	cpi	r24, 0x05	; 5
    1e8e:	91 05       	cpc	r25, r1
    1e90:	79 f4       	brne	.+30     	; 0x1eb0 <main+0x9f4>
			{
				lcdClear();
    1e92:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1e96:	84 e0       	ldi	r24, 0x04	; 4
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1e9e:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1ea2:	81 e0       	ldi	r24, 0x01	; 1
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eaa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1eae:	18 cb       	rjmp	.-2512   	; 0x14e0 <main+0x24>
			}
			else if (page == 6)
    1eb0:	86 30       	cpi	r24, 0x06	; 6
    1eb2:	91 05       	cpc	r25, r1
    1eb4:	79 f4       	brne	.+30     	; 0x1ed4 <main+0xa18>
			{
				lcdClear();
    1eb6:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 4;
    1eba:	84 e0       	ldi	r24, 0x04	; 4
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1ec2:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 2;
    1ec6:	82 e0       	ldi	r24, 0x02	; 2
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ece:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ed2:	06 cb       	rjmp	.-2548   	; 0x14e0 <main+0x24>
			}

			else if (page == 7)
    1ed4:	87 30       	cpi	r24, 0x07	; 7
    1ed6:	91 05       	cpc	r25, r1
    1ed8:	79 f4       	brne	.+30     	; 0x1ef8 <main+0xa3c>
			{
				lcdClear();
    1eda:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1ede:	83 e0       	ldi	r24, 0x03	; 3
    1ee0:	90 e0       	ldi	r25, 0x00	; 0
    1ee2:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1ee6:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ef2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ef6:	f4 ca       	rjmp	.-2584   	; 0x14e0 <main+0x24>
			}
			else if (page == 8)
    1ef8:	88 30       	cpi	r24, 0x08	; 8
    1efa:	91 05       	cpc	r25, r1
    1efc:	79 f4       	brne	.+30     	; 0x1f1c <main+0xa60>
			{
				lcdClear();
    1efe:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1f02:	83 e0       	ldi	r24, 0x03	; 3
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1f0a:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 2;
    1f0e:	82 e0       	ldi	r24, 0x02	; 2
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f16:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f1a:	e2 ca       	rjmp	.-2620   	; 0x14e0 <main+0x24>
			}
			else if (page == 9)
    1f1c:	89 30       	cpi	r24, 0x09	; 9
    1f1e:	91 05       	cpc	r25, r1
    1f20:	79 f4       	brne	.+30     	; 0x1f40 <main+0xa84>
			{
				lcdClear();
    1f22:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 3;
    1f26:	83 e0       	ldi	r24, 0x03	; 3
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1f2e:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 2;
    1f32:	82 e0       	ldi	r24, 0x02	; 2
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f3a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f3e:	d0 ca       	rjmp	.-2656   	; 0x14e0 <main+0x24>
			}
			else if (page == 10)
    1f40:	0a 97       	sbiw	r24, 0x0a	; 10
    1f42:	09 f0       	breq	.+2      	; 0x1f46 <main+0xa8a>
    1f44:	cd ca       	rjmp	.-2662   	; 0x14e0 <main+0x24>
			{
				lcdClear();
    1f46:	0e 94 21 01 	call	0x242	; 0x242 <_Z8lcdClearv>
				page = 8;
    1f4a:	88 e0       	ldi	r24, 0x08	; 8
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <page+0x1>
    1f52:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <page>
				menuitem = 1;
    1f56:	81 e0       	ldi	r24, 0x01	; 1
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f5e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	setBit(DDRC,3);
	//clearBit(PORTD,0);   //Turn backlight off 
	lcdInit();
	
	
    while (1) 
    1f62:	be ca       	rjmp	.-2692   	; 0x14e0 <main+0x24>

00001f64 <_GLOBAL__sub_I__Z7lcdInitv>:
		// 		default:
		// 		editAlarmInt(alarmNo);
		
	}
	
}
    1f64:	6f ef       	ldi	r22, 0xFF	; 255
    1f66:	7f ef       	ldi	r23, 0xFF	; 255
    1f68:	81 e0       	ldi	r24, 0x01	; 1
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z41__static_initialization_and_destruction_0ii>
    1f70:	08 95       	ret

00001f72 <__fixsfsi>:
    1f72:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <__fixunssfsi>
    1f76:	68 94       	set
    1f78:	b1 11       	cpse	r27, r1
    1f7a:	0c 94 4f 10 	jmp	0x209e	; 0x209e <__fp_szero>
    1f7e:	08 95       	ret

00001f80 <__fixunssfsi>:
    1f80:	0e 94 34 10 	call	0x2068	; 0x2068 <__fp_splitA>
    1f84:	88 f0       	brcs	.+34     	; 0x1fa8 <__fixunssfsi+0x28>
    1f86:	9f 57       	subi	r25, 0x7F	; 127
    1f88:	98 f0       	brcs	.+38     	; 0x1fb0 <__fixunssfsi+0x30>
    1f8a:	b9 2f       	mov	r27, r25
    1f8c:	99 27       	eor	r25, r25
    1f8e:	b7 51       	subi	r27, 0x17	; 23
    1f90:	b0 f0       	brcs	.+44     	; 0x1fbe <__fixunssfsi+0x3e>
    1f92:	e1 f0       	breq	.+56     	; 0x1fcc <__fixunssfsi+0x4c>
    1f94:	66 0f       	add	r22, r22
    1f96:	77 1f       	adc	r23, r23
    1f98:	88 1f       	adc	r24, r24
    1f9a:	99 1f       	adc	r25, r25
    1f9c:	1a f0       	brmi	.+6      	; 0x1fa4 <__fixunssfsi+0x24>
    1f9e:	ba 95       	dec	r27
    1fa0:	c9 f7       	brne	.-14     	; 0x1f94 <__fixunssfsi+0x14>
    1fa2:	14 c0       	rjmp	.+40     	; 0x1fcc <__fixunssfsi+0x4c>
    1fa4:	b1 30       	cpi	r27, 0x01	; 1
    1fa6:	91 f0       	breq	.+36     	; 0x1fcc <__fixunssfsi+0x4c>
    1fa8:	0e 94 4e 10 	call	0x209c	; 0x209c <__fp_zero>
    1fac:	b1 e0       	ldi	r27, 0x01	; 1
    1fae:	08 95       	ret
    1fb0:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__fp_zero>
    1fb4:	67 2f       	mov	r22, r23
    1fb6:	78 2f       	mov	r23, r24
    1fb8:	88 27       	eor	r24, r24
    1fba:	b8 5f       	subi	r27, 0xF8	; 248
    1fbc:	39 f0       	breq	.+14     	; 0x1fcc <__fixunssfsi+0x4c>
    1fbe:	b9 3f       	cpi	r27, 0xF9	; 249
    1fc0:	cc f3       	brlt	.-14     	; 0x1fb4 <__fixunssfsi+0x34>
    1fc2:	86 95       	lsr	r24
    1fc4:	77 95       	ror	r23
    1fc6:	67 95       	ror	r22
    1fc8:	b3 95       	inc	r27
    1fca:	d9 f7       	brne	.-10     	; 0x1fc2 <__fixunssfsi+0x42>
    1fcc:	3e f4       	brtc	.+14     	; 0x1fdc <__fixunssfsi+0x5c>
    1fce:	90 95       	com	r25
    1fd0:	80 95       	com	r24
    1fd2:	70 95       	com	r23
    1fd4:	61 95       	neg	r22
    1fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd8:	8f 4f       	sbci	r24, 0xFF	; 255
    1fda:	9f 4f       	sbci	r25, 0xFF	; 255
    1fdc:	08 95       	ret

00001fde <__floatunsisf>:
    1fde:	e8 94       	clt
    1fe0:	09 c0       	rjmp	.+18     	; 0x1ff4 <__floatsisf+0x12>

00001fe2 <__floatsisf>:
    1fe2:	97 fb       	bst	r25, 7
    1fe4:	3e f4       	brtc	.+14     	; 0x1ff4 <__floatsisf+0x12>
    1fe6:	90 95       	com	r25
    1fe8:	80 95       	com	r24
    1fea:	70 95       	com	r23
    1fec:	61 95       	neg	r22
    1fee:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff4:	99 23       	and	r25, r25
    1ff6:	a9 f0       	breq	.+42     	; 0x2022 <__floatsisf+0x40>
    1ff8:	f9 2f       	mov	r31, r25
    1ffa:	96 e9       	ldi	r25, 0x96	; 150
    1ffc:	bb 27       	eor	r27, r27
    1ffe:	93 95       	inc	r25
    2000:	f6 95       	lsr	r31
    2002:	87 95       	ror	r24
    2004:	77 95       	ror	r23
    2006:	67 95       	ror	r22
    2008:	b7 95       	ror	r27
    200a:	f1 11       	cpse	r31, r1
    200c:	f8 cf       	rjmp	.-16     	; 0x1ffe <__floatsisf+0x1c>
    200e:	fa f4       	brpl	.+62     	; 0x204e <__floatsisf+0x6c>
    2010:	bb 0f       	add	r27, r27
    2012:	11 f4       	brne	.+4      	; 0x2018 <__floatsisf+0x36>
    2014:	60 ff       	sbrs	r22, 0
    2016:	1b c0       	rjmp	.+54     	; 0x204e <__floatsisf+0x6c>
    2018:	6f 5f       	subi	r22, 0xFF	; 255
    201a:	7f 4f       	sbci	r23, 0xFF	; 255
    201c:	8f 4f       	sbci	r24, 0xFF	; 255
    201e:	9f 4f       	sbci	r25, 0xFF	; 255
    2020:	16 c0       	rjmp	.+44     	; 0x204e <__floatsisf+0x6c>
    2022:	88 23       	and	r24, r24
    2024:	11 f0       	breq	.+4      	; 0x202a <__floatsisf+0x48>
    2026:	96 e9       	ldi	r25, 0x96	; 150
    2028:	11 c0       	rjmp	.+34     	; 0x204c <__floatsisf+0x6a>
    202a:	77 23       	and	r23, r23
    202c:	21 f0       	breq	.+8      	; 0x2036 <__floatsisf+0x54>
    202e:	9e e8       	ldi	r25, 0x8E	; 142
    2030:	87 2f       	mov	r24, r23
    2032:	76 2f       	mov	r23, r22
    2034:	05 c0       	rjmp	.+10     	; 0x2040 <__floatsisf+0x5e>
    2036:	66 23       	and	r22, r22
    2038:	71 f0       	breq	.+28     	; 0x2056 <__floatsisf+0x74>
    203a:	96 e8       	ldi	r25, 0x86	; 134
    203c:	86 2f       	mov	r24, r22
    203e:	70 e0       	ldi	r23, 0x00	; 0
    2040:	60 e0       	ldi	r22, 0x00	; 0
    2042:	2a f0       	brmi	.+10     	; 0x204e <__floatsisf+0x6c>
    2044:	9a 95       	dec	r25
    2046:	66 0f       	add	r22, r22
    2048:	77 1f       	adc	r23, r23
    204a:	88 1f       	adc	r24, r24
    204c:	da f7       	brpl	.-10     	; 0x2044 <__floatsisf+0x62>
    204e:	88 0f       	add	r24, r24
    2050:	96 95       	lsr	r25
    2052:	87 95       	ror	r24
    2054:	97 f9       	bld	r25, 7
    2056:	08 95       	ret

00002058 <__fp_split3>:
    2058:	57 fd       	sbrc	r21, 7
    205a:	90 58       	subi	r25, 0x80	; 128
    205c:	44 0f       	add	r20, r20
    205e:	55 1f       	adc	r21, r21
    2060:	59 f0       	breq	.+22     	; 0x2078 <__fp_splitA+0x10>
    2062:	5f 3f       	cpi	r21, 0xFF	; 255
    2064:	71 f0       	breq	.+28     	; 0x2082 <__fp_splitA+0x1a>
    2066:	47 95       	ror	r20

00002068 <__fp_splitA>:
    2068:	88 0f       	add	r24, r24
    206a:	97 fb       	bst	r25, 7
    206c:	99 1f       	adc	r25, r25
    206e:	61 f0       	breq	.+24     	; 0x2088 <__fp_splitA+0x20>
    2070:	9f 3f       	cpi	r25, 0xFF	; 255
    2072:	79 f0       	breq	.+30     	; 0x2092 <__fp_splitA+0x2a>
    2074:	87 95       	ror	r24
    2076:	08 95       	ret
    2078:	12 16       	cp	r1, r18
    207a:	13 06       	cpc	r1, r19
    207c:	14 06       	cpc	r1, r20
    207e:	55 1f       	adc	r21, r21
    2080:	f2 cf       	rjmp	.-28     	; 0x2066 <__fp_split3+0xe>
    2082:	46 95       	lsr	r20
    2084:	f1 df       	rcall	.-30     	; 0x2068 <__fp_splitA>
    2086:	08 c0       	rjmp	.+16     	; 0x2098 <__fp_splitA+0x30>
    2088:	16 16       	cp	r1, r22
    208a:	17 06       	cpc	r1, r23
    208c:	18 06       	cpc	r1, r24
    208e:	99 1f       	adc	r25, r25
    2090:	f1 cf       	rjmp	.-30     	; 0x2074 <__fp_splitA+0xc>
    2092:	86 95       	lsr	r24
    2094:	71 05       	cpc	r23, r1
    2096:	61 05       	cpc	r22, r1
    2098:	08 94       	sec
    209a:	08 95       	ret

0000209c <__fp_zero>:
    209c:	e8 94       	clt

0000209e <__fp_szero>:
    209e:	bb 27       	eor	r27, r27
    20a0:	66 27       	eor	r22, r22
    20a2:	77 27       	eor	r23, r23
    20a4:	cb 01       	movw	r24, r22
    20a6:	97 f9       	bld	r25, 7
    20a8:	08 95       	ret

000020aa <__mulsf3>:
    20aa:	0e 94 68 10 	call	0x20d0	; 0x20d0 <__mulsf3x>
    20ae:	0c 94 d9 10 	jmp	0x21b2	; 0x21b2 <__fp_round>
    20b2:	0e 94 cb 10 	call	0x2196	; 0x2196 <__fp_pscA>
    20b6:	38 f0       	brcs	.+14     	; 0x20c6 <__mulsf3+0x1c>
    20b8:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__fp_pscB>
    20bc:	20 f0       	brcs	.+8      	; 0x20c6 <__mulsf3+0x1c>
    20be:	95 23       	and	r25, r21
    20c0:	11 f0       	breq	.+4      	; 0x20c6 <__mulsf3+0x1c>
    20c2:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__fp_inf>
    20c6:	0c 94 c8 10 	jmp	0x2190	; 0x2190 <__fp_nan>
    20ca:	11 24       	eor	r1, r1
    20cc:	0c 94 4f 10 	jmp	0x209e	; 0x209e <__fp_szero>

000020d0 <__mulsf3x>:
    20d0:	0e 94 2c 10 	call	0x2058	; 0x2058 <__fp_split3>
    20d4:	70 f3       	brcs	.-36     	; 0x20b2 <__mulsf3+0x8>

000020d6 <__mulsf3_pse>:
    20d6:	95 9f       	mul	r25, r21
    20d8:	c1 f3       	breq	.-16     	; 0x20ca <__mulsf3+0x20>
    20da:	95 0f       	add	r25, r21
    20dc:	50 e0       	ldi	r21, 0x00	; 0
    20de:	55 1f       	adc	r21, r21
    20e0:	62 9f       	mul	r22, r18
    20e2:	f0 01       	movw	r30, r0
    20e4:	72 9f       	mul	r23, r18
    20e6:	bb 27       	eor	r27, r27
    20e8:	f0 0d       	add	r31, r0
    20ea:	b1 1d       	adc	r27, r1
    20ec:	63 9f       	mul	r22, r19
    20ee:	aa 27       	eor	r26, r26
    20f0:	f0 0d       	add	r31, r0
    20f2:	b1 1d       	adc	r27, r1
    20f4:	aa 1f       	adc	r26, r26
    20f6:	64 9f       	mul	r22, r20
    20f8:	66 27       	eor	r22, r22
    20fa:	b0 0d       	add	r27, r0
    20fc:	a1 1d       	adc	r26, r1
    20fe:	66 1f       	adc	r22, r22
    2100:	82 9f       	mul	r24, r18
    2102:	22 27       	eor	r18, r18
    2104:	b0 0d       	add	r27, r0
    2106:	a1 1d       	adc	r26, r1
    2108:	62 1f       	adc	r22, r18
    210a:	73 9f       	mul	r23, r19
    210c:	b0 0d       	add	r27, r0
    210e:	a1 1d       	adc	r26, r1
    2110:	62 1f       	adc	r22, r18
    2112:	83 9f       	mul	r24, r19
    2114:	a0 0d       	add	r26, r0
    2116:	61 1d       	adc	r22, r1
    2118:	22 1f       	adc	r18, r18
    211a:	74 9f       	mul	r23, r20
    211c:	33 27       	eor	r19, r19
    211e:	a0 0d       	add	r26, r0
    2120:	61 1d       	adc	r22, r1
    2122:	23 1f       	adc	r18, r19
    2124:	84 9f       	mul	r24, r20
    2126:	60 0d       	add	r22, r0
    2128:	21 1d       	adc	r18, r1
    212a:	82 2f       	mov	r24, r18
    212c:	76 2f       	mov	r23, r22
    212e:	6a 2f       	mov	r22, r26
    2130:	11 24       	eor	r1, r1
    2132:	9f 57       	subi	r25, 0x7F	; 127
    2134:	50 40       	sbci	r21, 0x00	; 0
    2136:	9a f0       	brmi	.+38     	; 0x215e <__mulsf3_pse+0x88>
    2138:	f1 f0       	breq	.+60     	; 0x2176 <__mulsf3_pse+0xa0>
    213a:	88 23       	and	r24, r24
    213c:	4a f0       	brmi	.+18     	; 0x2150 <__mulsf3_pse+0x7a>
    213e:	ee 0f       	add	r30, r30
    2140:	ff 1f       	adc	r31, r31
    2142:	bb 1f       	adc	r27, r27
    2144:	66 1f       	adc	r22, r22
    2146:	77 1f       	adc	r23, r23
    2148:	88 1f       	adc	r24, r24
    214a:	91 50       	subi	r25, 0x01	; 1
    214c:	50 40       	sbci	r21, 0x00	; 0
    214e:	a9 f7       	brne	.-22     	; 0x213a <__mulsf3_pse+0x64>
    2150:	9e 3f       	cpi	r25, 0xFE	; 254
    2152:	51 05       	cpc	r21, r1
    2154:	80 f0       	brcs	.+32     	; 0x2176 <__mulsf3_pse+0xa0>
    2156:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__fp_inf>
    215a:	0c 94 4f 10 	jmp	0x209e	; 0x209e <__fp_szero>
    215e:	5f 3f       	cpi	r21, 0xFF	; 255
    2160:	e4 f3       	brlt	.-8      	; 0x215a <__mulsf3_pse+0x84>
    2162:	98 3e       	cpi	r25, 0xE8	; 232
    2164:	d4 f3       	brlt	.-12     	; 0x215a <__mulsf3_pse+0x84>
    2166:	86 95       	lsr	r24
    2168:	77 95       	ror	r23
    216a:	67 95       	ror	r22
    216c:	b7 95       	ror	r27
    216e:	f7 95       	ror	r31
    2170:	e7 95       	ror	r30
    2172:	9f 5f       	subi	r25, 0xFF	; 255
    2174:	c1 f7       	brne	.-16     	; 0x2166 <__mulsf3_pse+0x90>
    2176:	fe 2b       	or	r31, r30
    2178:	88 0f       	add	r24, r24
    217a:	91 1d       	adc	r25, r1
    217c:	96 95       	lsr	r25
    217e:	87 95       	ror	r24
    2180:	97 f9       	bld	r25, 7
    2182:	08 95       	ret

00002184 <__fp_inf>:
    2184:	97 f9       	bld	r25, 7
    2186:	9f 67       	ori	r25, 0x7F	; 127
    2188:	80 e8       	ldi	r24, 0x80	; 128
    218a:	70 e0       	ldi	r23, 0x00	; 0
    218c:	60 e0       	ldi	r22, 0x00	; 0
    218e:	08 95       	ret

00002190 <__fp_nan>:
    2190:	9f ef       	ldi	r25, 0xFF	; 255
    2192:	80 ec       	ldi	r24, 0xC0	; 192
    2194:	08 95       	ret

00002196 <__fp_pscA>:
    2196:	00 24       	eor	r0, r0
    2198:	0a 94       	dec	r0
    219a:	16 16       	cp	r1, r22
    219c:	17 06       	cpc	r1, r23
    219e:	18 06       	cpc	r1, r24
    21a0:	09 06       	cpc	r0, r25
    21a2:	08 95       	ret

000021a4 <__fp_pscB>:
    21a4:	00 24       	eor	r0, r0
    21a6:	0a 94       	dec	r0
    21a8:	12 16       	cp	r1, r18
    21aa:	13 06       	cpc	r1, r19
    21ac:	14 06       	cpc	r1, r20
    21ae:	05 06       	cpc	r0, r21
    21b0:	08 95       	ret

000021b2 <__fp_round>:
    21b2:	09 2e       	mov	r0, r25
    21b4:	03 94       	inc	r0
    21b6:	00 0c       	add	r0, r0
    21b8:	11 f4       	brne	.+4      	; 0x21be <__fp_round+0xc>
    21ba:	88 23       	and	r24, r24
    21bc:	52 f0       	brmi	.+20     	; 0x21d2 <__fp_round+0x20>
    21be:	bb 0f       	add	r27, r27
    21c0:	40 f4       	brcc	.+16     	; 0x21d2 <__fp_round+0x20>
    21c2:	bf 2b       	or	r27, r31
    21c4:	11 f4       	brne	.+4      	; 0x21ca <__fp_round+0x18>
    21c6:	60 ff       	sbrs	r22, 0
    21c8:	04 c0       	rjmp	.+8      	; 0x21d2 <__fp_round+0x20>
    21ca:	6f 5f       	subi	r22, 0xFF	; 255
    21cc:	7f 4f       	sbci	r23, 0xFF	; 255
    21ce:	8f 4f       	sbci	r24, 0xFF	; 255
    21d0:	9f 4f       	sbci	r25, 0xFF	; 255
    21d2:	08 95       	ret

000021d4 <__udivmodhi4>:
    21d4:	aa 1b       	sub	r26, r26
    21d6:	bb 1b       	sub	r27, r27
    21d8:	51 e1       	ldi	r21, 0x11	; 17
    21da:	07 c0       	rjmp	.+14     	; 0x21ea <__udivmodhi4_ep>

000021dc <__udivmodhi4_loop>:
    21dc:	aa 1f       	adc	r26, r26
    21de:	bb 1f       	adc	r27, r27
    21e0:	a6 17       	cp	r26, r22
    21e2:	b7 07       	cpc	r27, r23
    21e4:	10 f0       	brcs	.+4      	; 0x21ea <__udivmodhi4_ep>
    21e6:	a6 1b       	sub	r26, r22
    21e8:	b7 0b       	sbc	r27, r23

000021ea <__udivmodhi4_ep>:
    21ea:	88 1f       	adc	r24, r24
    21ec:	99 1f       	adc	r25, r25
    21ee:	5a 95       	dec	r21
    21f0:	a9 f7       	brne	.-22     	; 0x21dc <__udivmodhi4_loop>
    21f2:	80 95       	com	r24
    21f4:	90 95       	com	r25
    21f6:	bc 01       	movw	r22, r24
    21f8:	cd 01       	movw	r24, r26
    21fa:	08 95       	ret

000021fc <__divmodhi4>:
    21fc:	97 fb       	bst	r25, 7
    21fe:	07 2e       	mov	r0, r23
    2200:	16 f4       	brtc	.+4      	; 0x2206 <__divmodhi4+0xa>
    2202:	00 94       	com	r0
    2204:	07 d0       	rcall	.+14     	; 0x2214 <__divmodhi4_neg1>
    2206:	77 fd       	sbrc	r23, 7
    2208:	09 d0       	rcall	.+18     	; 0x221c <__divmodhi4_neg2>
    220a:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <__udivmodhi4>
    220e:	07 fc       	sbrc	r0, 7
    2210:	05 d0       	rcall	.+10     	; 0x221c <__divmodhi4_neg2>
    2212:	3e f4       	brtc	.+14     	; 0x2222 <__divmodhi4_exit>

00002214 <__divmodhi4_neg1>:
    2214:	90 95       	com	r25
    2216:	81 95       	neg	r24
    2218:	9f 4f       	sbci	r25, 0xFF	; 255
    221a:	08 95       	ret

0000221c <__divmodhi4_neg2>:
    221c:	70 95       	com	r23
    221e:	61 95       	neg	r22
    2220:	7f 4f       	sbci	r23, 0xFF	; 255

00002222 <__divmodhi4_exit>:
    2222:	08 95       	ret

00002224 <__divmodsi4>:
    2224:	05 2e       	mov	r0, r21
    2226:	97 fb       	bst	r25, 7
    2228:	1e f4       	brtc	.+6      	; 0x2230 <__divmodsi4+0xc>
    222a:	00 94       	com	r0
    222c:	0e 94 29 11 	call	0x2252	; 0x2252 <__negsi2>
    2230:	57 fd       	sbrc	r21, 7
    2232:	07 d0       	rcall	.+14     	; 0x2242 <__divmodsi4_neg2>
    2234:	0e 94 46 11 	call	0x228c	; 0x228c <__udivmodsi4>
    2238:	07 fc       	sbrc	r0, 7
    223a:	03 d0       	rcall	.+6      	; 0x2242 <__divmodsi4_neg2>
    223c:	4e f4       	brtc	.+18     	; 0x2250 <__divmodsi4_exit>
    223e:	0c 94 29 11 	jmp	0x2252	; 0x2252 <__negsi2>

00002242 <__divmodsi4_neg2>:
    2242:	50 95       	com	r21
    2244:	40 95       	com	r20
    2246:	30 95       	com	r19
    2248:	21 95       	neg	r18
    224a:	3f 4f       	sbci	r19, 0xFF	; 255
    224c:	4f 4f       	sbci	r20, 0xFF	; 255
    224e:	5f 4f       	sbci	r21, 0xFF	; 255

00002250 <__divmodsi4_exit>:
    2250:	08 95       	ret

00002252 <__negsi2>:
    2252:	90 95       	com	r25
    2254:	80 95       	com	r24
    2256:	70 95       	com	r23
    2258:	61 95       	neg	r22
    225a:	7f 4f       	sbci	r23, 0xFF	; 255
    225c:	8f 4f       	sbci	r24, 0xFF	; 255
    225e:	9f 4f       	sbci	r25, 0xFF	; 255
    2260:	08 95       	ret

00002262 <__tablejump2__>:
    2262:	ee 0f       	add	r30, r30
    2264:	ff 1f       	adc	r31, r31
    2266:	05 90       	lpm	r0, Z+
    2268:	f4 91       	lpm	r31, Z
    226a:	e0 2d       	mov	r30, r0
    226c:	09 94       	ijmp

0000226e <__umulhisi3>:
    226e:	a2 9f       	mul	r26, r18
    2270:	b0 01       	movw	r22, r0
    2272:	b3 9f       	mul	r27, r19
    2274:	c0 01       	movw	r24, r0
    2276:	a3 9f       	mul	r26, r19
    2278:	70 0d       	add	r23, r0
    227a:	81 1d       	adc	r24, r1
    227c:	11 24       	eor	r1, r1
    227e:	91 1d       	adc	r25, r1
    2280:	b2 9f       	mul	r27, r18
    2282:	70 0d       	add	r23, r0
    2284:	81 1d       	adc	r24, r1
    2286:	11 24       	eor	r1, r1
    2288:	91 1d       	adc	r25, r1
    228a:	08 95       	ret

0000228c <__udivmodsi4>:
    228c:	a1 e2       	ldi	r26, 0x21	; 33
    228e:	1a 2e       	mov	r1, r26
    2290:	aa 1b       	sub	r26, r26
    2292:	bb 1b       	sub	r27, r27
    2294:	fd 01       	movw	r30, r26
    2296:	0d c0       	rjmp	.+26     	; 0x22b2 <__udivmodsi4_ep>

00002298 <__udivmodsi4_loop>:
    2298:	aa 1f       	adc	r26, r26
    229a:	bb 1f       	adc	r27, r27
    229c:	ee 1f       	adc	r30, r30
    229e:	ff 1f       	adc	r31, r31
    22a0:	a2 17       	cp	r26, r18
    22a2:	b3 07       	cpc	r27, r19
    22a4:	e4 07       	cpc	r30, r20
    22a6:	f5 07       	cpc	r31, r21
    22a8:	20 f0       	brcs	.+8      	; 0x22b2 <__udivmodsi4_ep>
    22aa:	a2 1b       	sub	r26, r18
    22ac:	b3 0b       	sbc	r27, r19
    22ae:	e4 0b       	sbc	r30, r20
    22b0:	f5 0b       	sbc	r31, r21

000022b2 <__udivmodsi4_ep>:
    22b2:	66 1f       	adc	r22, r22
    22b4:	77 1f       	adc	r23, r23
    22b6:	88 1f       	adc	r24, r24
    22b8:	99 1f       	adc	r25, r25
    22ba:	1a 94       	dec	r1
    22bc:	69 f7       	brne	.-38     	; 0x2298 <__udivmodsi4_loop>
    22be:	60 95       	com	r22
    22c0:	70 95       	com	r23
    22c2:	80 95       	com	r24
    22c4:	90 95       	com	r25
    22c6:	9b 01       	movw	r18, r22
    22c8:	ac 01       	movw	r20, r24
    22ca:	bd 01       	movw	r22, r26
    22cc:	cf 01       	movw	r24, r30
    22ce:	08 95       	ret

000022d0 <atoi>:
    22d0:	fc 01       	movw	r30, r24
    22d2:	88 27       	eor	r24, r24
    22d4:	99 27       	eor	r25, r25
    22d6:	e8 94       	clt
    22d8:	21 91       	ld	r18, Z+
    22da:	20 32       	cpi	r18, 0x20	; 32
    22dc:	e9 f3       	breq	.-6      	; 0x22d8 <atoi+0x8>
    22de:	29 30       	cpi	r18, 0x09	; 9
    22e0:	10 f0       	brcs	.+4      	; 0x22e6 <atoi+0x16>
    22e2:	2e 30       	cpi	r18, 0x0E	; 14
    22e4:	c8 f3       	brcs	.-14     	; 0x22d8 <atoi+0x8>
    22e6:	2b 32       	cpi	r18, 0x2B	; 43
    22e8:	41 f0       	breq	.+16     	; 0x22fa <atoi+0x2a>
    22ea:	2d 32       	cpi	r18, 0x2D	; 45
    22ec:	39 f4       	brne	.+14     	; 0x22fc <atoi+0x2c>
    22ee:	68 94       	set
    22f0:	04 c0       	rjmp	.+8      	; 0x22fa <atoi+0x2a>
    22f2:	0e 94 91 11 	call	0x2322	; 0x2322 <__mulhi_const_10>
    22f6:	82 0f       	add	r24, r18
    22f8:	91 1d       	adc	r25, r1
    22fa:	21 91       	ld	r18, Z+
    22fc:	20 53       	subi	r18, 0x30	; 48
    22fe:	2a 30       	cpi	r18, 0x0A	; 10
    2300:	c0 f3       	brcs	.-16     	; 0x22f2 <atoi+0x22>
    2302:	1e f4       	brtc	.+6      	; 0x230a <atoi+0x3a>
    2304:	90 95       	com	r25
    2306:	81 95       	neg	r24
    2308:	9f 4f       	sbci	r25, 0xFF	; 255
    230a:	08 95       	ret

0000230c <__itoa_ncheck>:
    230c:	bb 27       	eor	r27, r27
    230e:	4a 30       	cpi	r20, 0x0A	; 10
    2310:	31 f4       	brne	.+12     	; 0x231e <__itoa_ncheck+0x12>
    2312:	99 23       	and	r25, r25
    2314:	22 f4       	brpl	.+8      	; 0x231e <__itoa_ncheck+0x12>
    2316:	bd e2       	ldi	r27, 0x2D	; 45
    2318:	90 95       	com	r25
    231a:	81 95       	neg	r24
    231c:	9f 4f       	sbci	r25, 0xFF	; 255
    231e:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__utoa_common>

00002322 <__mulhi_const_10>:
    2322:	7a e0       	ldi	r23, 0x0A	; 10
    2324:	97 9f       	mul	r25, r23
    2326:	90 2d       	mov	r25, r0
    2328:	87 9f       	mul	r24, r23
    232a:	80 2d       	mov	r24, r0
    232c:	91 0d       	add	r25, r1
    232e:	11 24       	eor	r1, r1
    2330:	08 95       	ret

00002332 <__utoa_ncheck>:
    2332:	bb 27       	eor	r27, r27

00002334 <__utoa_common>:
    2334:	fb 01       	movw	r30, r22
    2336:	55 27       	eor	r21, r21
    2338:	aa 27       	eor	r26, r26
    233a:	88 0f       	add	r24, r24
    233c:	99 1f       	adc	r25, r25
    233e:	aa 1f       	adc	r26, r26
    2340:	a4 17       	cp	r26, r20
    2342:	10 f0       	brcs	.+4      	; 0x2348 <__utoa_common+0x14>
    2344:	a4 1b       	sub	r26, r20
    2346:	83 95       	inc	r24
    2348:	50 51       	subi	r21, 0x10	; 16
    234a:	b9 f7       	brne	.-18     	; 0x233a <__utoa_common+0x6>
    234c:	a0 5d       	subi	r26, 0xD0	; 208
    234e:	aa 33       	cpi	r26, 0x3A	; 58
    2350:	08 f0       	brcs	.+2      	; 0x2354 <__utoa_common+0x20>
    2352:	a9 5d       	subi	r26, 0xD9	; 217
    2354:	a1 93       	st	Z+, r26
    2356:	00 97       	sbiw	r24, 0x00	; 0
    2358:	79 f7       	brne	.-34     	; 0x2338 <__utoa_common+0x4>
    235a:	b1 11       	cpse	r27, r1
    235c:	b1 93       	st	Z+, r27
    235e:	11 92       	st	Z+, r1
    2360:	cb 01       	movw	r24, r22
    2362:	0c 94 cc 13 	jmp	0x2798	; 0x2798 <strrev>

00002366 <sprintf>:
    2366:	ae e0       	ldi	r26, 0x0E	; 14
    2368:	b0 e0       	ldi	r27, 0x00	; 0
    236a:	e9 eb       	ldi	r30, 0xB9	; 185
    236c:	f1 e1       	ldi	r31, 0x11	; 17
    236e:	0c 94 84 14 	jmp	0x2908	; 0x2908 <__prologue_saves__+0x1c>
    2372:	0d 89       	ldd	r16, Y+21	; 0x15
    2374:	1e 89       	ldd	r17, Y+22	; 0x16
    2376:	86 e0       	ldi	r24, 0x06	; 6
    2378:	8c 83       	std	Y+4, r24	; 0x04
    237a:	1a 83       	std	Y+2, r17	; 0x02
    237c:	09 83       	std	Y+1, r16	; 0x01
    237e:	8f ef       	ldi	r24, 0xFF	; 255
    2380:	9f e7       	ldi	r25, 0x7F	; 127
    2382:	9e 83       	std	Y+6, r25	; 0x06
    2384:	8d 83       	std	Y+5, r24	; 0x05
    2386:	ae 01       	movw	r20, r28
    2388:	47 5e       	subi	r20, 0xE7	; 231
    238a:	5f 4f       	sbci	r21, 0xFF	; 255
    238c:	6f 89       	ldd	r22, Y+23	; 0x17
    238e:	78 8d       	ldd	r23, Y+24	; 0x18
    2390:	ce 01       	movw	r24, r28
    2392:	01 96       	adiw	r24, 0x01	; 1
    2394:	0e 94 d5 11 	call	0x23aa	; 0x23aa <vfprintf>
    2398:	ef 81       	ldd	r30, Y+7	; 0x07
    239a:	f8 85       	ldd	r31, Y+8	; 0x08
    239c:	e0 0f       	add	r30, r16
    239e:	f1 1f       	adc	r31, r17
    23a0:	10 82       	st	Z, r1
    23a2:	2e 96       	adiw	r28, 0x0e	; 14
    23a4:	e4 e0       	ldi	r30, 0x04	; 4
    23a6:	0c 94 a0 14 	jmp	0x2940	; 0x2940 <__epilogue_restores__+0x1c>

000023aa <vfprintf>:
    23aa:	ab e0       	ldi	r26, 0x0B	; 11
    23ac:	b0 e0       	ldi	r27, 0x00	; 0
    23ae:	eb ed       	ldi	r30, 0xDB	; 219
    23b0:	f1 e1       	ldi	r31, 0x11	; 17
    23b2:	0c 94 76 14 	jmp	0x28ec	; 0x28ec <__prologue_saves__>
    23b6:	6c 01       	movw	r12, r24
    23b8:	7b 01       	movw	r14, r22
    23ba:	8a 01       	movw	r16, r20
    23bc:	fc 01       	movw	r30, r24
    23be:	17 82       	std	Z+7, r1	; 0x07
    23c0:	16 82       	std	Z+6, r1	; 0x06
    23c2:	83 81       	ldd	r24, Z+3	; 0x03
    23c4:	81 ff       	sbrs	r24, 1
    23c6:	cc c1       	rjmp	.+920    	; 0x2760 <vfprintf+0x3b6>
    23c8:	ce 01       	movw	r24, r28
    23ca:	01 96       	adiw	r24, 0x01	; 1
    23cc:	3c 01       	movw	r6, r24
    23ce:	f6 01       	movw	r30, r12
    23d0:	93 81       	ldd	r25, Z+3	; 0x03
    23d2:	f7 01       	movw	r30, r14
    23d4:	93 fd       	sbrc	r25, 3
    23d6:	85 91       	lpm	r24, Z+
    23d8:	93 ff       	sbrs	r25, 3
    23da:	81 91       	ld	r24, Z+
    23dc:	7f 01       	movw	r14, r30
    23de:	88 23       	and	r24, r24
    23e0:	09 f4       	brne	.+2      	; 0x23e4 <vfprintf+0x3a>
    23e2:	ba c1       	rjmp	.+884    	; 0x2758 <vfprintf+0x3ae>
    23e4:	85 32       	cpi	r24, 0x25	; 37
    23e6:	39 f4       	brne	.+14     	; 0x23f6 <vfprintf+0x4c>
    23e8:	93 fd       	sbrc	r25, 3
    23ea:	85 91       	lpm	r24, Z+
    23ec:	93 ff       	sbrs	r25, 3
    23ee:	81 91       	ld	r24, Z+
    23f0:	7f 01       	movw	r14, r30
    23f2:	85 32       	cpi	r24, 0x25	; 37
    23f4:	29 f4       	brne	.+10     	; 0x2400 <vfprintf+0x56>
    23f6:	b6 01       	movw	r22, r12
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    23fe:	e7 cf       	rjmp	.-50     	; 0x23ce <vfprintf+0x24>
    2400:	91 2c       	mov	r9, r1
    2402:	21 2c       	mov	r2, r1
    2404:	31 2c       	mov	r3, r1
    2406:	ff e1       	ldi	r31, 0x1F	; 31
    2408:	f3 15       	cp	r31, r3
    240a:	d8 f0       	brcs	.+54     	; 0x2442 <vfprintf+0x98>
    240c:	8b 32       	cpi	r24, 0x2B	; 43
    240e:	79 f0       	breq	.+30     	; 0x242e <vfprintf+0x84>
    2410:	38 f4       	brcc	.+14     	; 0x2420 <vfprintf+0x76>
    2412:	80 32       	cpi	r24, 0x20	; 32
    2414:	79 f0       	breq	.+30     	; 0x2434 <vfprintf+0x8a>
    2416:	83 32       	cpi	r24, 0x23	; 35
    2418:	a1 f4       	brne	.+40     	; 0x2442 <vfprintf+0x98>
    241a:	23 2d       	mov	r18, r3
    241c:	20 61       	ori	r18, 0x10	; 16
    241e:	1d c0       	rjmp	.+58     	; 0x245a <vfprintf+0xb0>
    2420:	8d 32       	cpi	r24, 0x2D	; 45
    2422:	61 f0       	breq	.+24     	; 0x243c <vfprintf+0x92>
    2424:	80 33       	cpi	r24, 0x30	; 48
    2426:	69 f4       	brne	.+26     	; 0x2442 <vfprintf+0x98>
    2428:	23 2d       	mov	r18, r3
    242a:	21 60       	ori	r18, 0x01	; 1
    242c:	16 c0       	rjmp	.+44     	; 0x245a <vfprintf+0xb0>
    242e:	83 2d       	mov	r24, r3
    2430:	82 60       	ori	r24, 0x02	; 2
    2432:	38 2e       	mov	r3, r24
    2434:	e3 2d       	mov	r30, r3
    2436:	e4 60       	ori	r30, 0x04	; 4
    2438:	3e 2e       	mov	r3, r30
    243a:	2a c0       	rjmp	.+84     	; 0x2490 <vfprintf+0xe6>
    243c:	f3 2d       	mov	r31, r3
    243e:	f8 60       	ori	r31, 0x08	; 8
    2440:	1d c0       	rjmp	.+58     	; 0x247c <vfprintf+0xd2>
    2442:	37 fc       	sbrc	r3, 7
    2444:	2d c0       	rjmp	.+90     	; 0x24a0 <vfprintf+0xf6>
    2446:	20 ed       	ldi	r18, 0xD0	; 208
    2448:	28 0f       	add	r18, r24
    244a:	2a 30       	cpi	r18, 0x0A	; 10
    244c:	40 f0       	brcs	.+16     	; 0x245e <vfprintf+0xb4>
    244e:	8e 32       	cpi	r24, 0x2E	; 46
    2450:	b9 f4       	brne	.+46     	; 0x2480 <vfprintf+0xd6>
    2452:	36 fc       	sbrc	r3, 6
    2454:	81 c1       	rjmp	.+770    	; 0x2758 <vfprintf+0x3ae>
    2456:	23 2d       	mov	r18, r3
    2458:	20 64       	ori	r18, 0x40	; 64
    245a:	32 2e       	mov	r3, r18
    245c:	19 c0       	rjmp	.+50     	; 0x2490 <vfprintf+0xe6>
    245e:	36 fe       	sbrs	r3, 6
    2460:	06 c0       	rjmp	.+12     	; 0x246e <vfprintf+0xc4>
    2462:	8a e0       	ldi	r24, 0x0A	; 10
    2464:	98 9e       	mul	r9, r24
    2466:	20 0d       	add	r18, r0
    2468:	11 24       	eor	r1, r1
    246a:	92 2e       	mov	r9, r18
    246c:	11 c0       	rjmp	.+34     	; 0x2490 <vfprintf+0xe6>
    246e:	ea e0       	ldi	r30, 0x0A	; 10
    2470:	2e 9e       	mul	r2, r30
    2472:	20 0d       	add	r18, r0
    2474:	11 24       	eor	r1, r1
    2476:	22 2e       	mov	r2, r18
    2478:	f3 2d       	mov	r31, r3
    247a:	f0 62       	ori	r31, 0x20	; 32
    247c:	3f 2e       	mov	r3, r31
    247e:	08 c0       	rjmp	.+16     	; 0x2490 <vfprintf+0xe6>
    2480:	8c 36       	cpi	r24, 0x6C	; 108
    2482:	21 f4       	brne	.+8      	; 0x248c <vfprintf+0xe2>
    2484:	83 2d       	mov	r24, r3
    2486:	80 68       	ori	r24, 0x80	; 128
    2488:	38 2e       	mov	r3, r24
    248a:	02 c0       	rjmp	.+4      	; 0x2490 <vfprintf+0xe6>
    248c:	88 36       	cpi	r24, 0x68	; 104
    248e:	41 f4       	brne	.+16     	; 0x24a0 <vfprintf+0xf6>
    2490:	f7 01       	movw	r30, r14
    2492:	93 fd       	sbrc	r25, 3
    2494:	85 91       	lpm	r24, Z+
    2496:	93 ff       	sbrs	r25, 3
    2498:	81 91       	ld	r24, Z+
    249a:	7f 01       	movw	r14, r30
    249c:	81 11       	cpse	r24, r1
    249e:	b3 cf       	rjmp	.-154    	; 0x2406 <vfprintf+0x5c>
    24a0:	98 2f       	mov	r25, r24
    24a2:	9f 7d       	andi	r25, 0xDF	; 223
    24a4:	95 54       	subi	r25, 0x45	; 69
    24a6:	93 30       	cpi	r25, 0x03	; 3
    24a8:	28 f4       	brcc	.+10     	; 0x24b4 <vfprintf+0x10a>
    24aa:	0c 5f       	subi	r16, 0xFC	; 252
    24ac:	1f 4f       	sbci	r17, 0xFF	; 255
    24ae:	9f e3       	ldi	r25, 0x3F	; 63
    24b0:	99 83       	std	Y+1, r25	; 0x01
    24b2:	0d c0       	rjmp	.+26     	; 0x24ce <vfprintf+0x124>
    24b4:	83 36       	cpi	r24, 0x63	; 99
    24b6:	31 f0       	breq	.+12     	; 0x24c4 <vfprintf+0x11a>
    24b8:	83 37       	cpi	r24, 0x73	; 115
    24ba:	71 f0       	breq	.+28     	; 0x24d8 <vfprintf+0x12e>
    24bc:	83 35       	cpi	r24, 0x53	; 83
    24be:	09 f0       	breq	.+2      	; 0x24c2 <vfprintf+0x118>
    24c0:	59 c0       	rjmp	.+178    	; 0x2574 <vfprintf+0x1ca>
    24c2:	21 c0       	rjmp	.+66     	; 0x2506 <vfprintf+0x15c>
    24c4:	f8 01       	movw	r30, r16
    24c6:	80 81       	ld	r24, Z
    24c8:	89 83       	std	Y+1, r24	; 0x01
    24ca:	0e 5f       	subi	r16, 0xFE	; 254
    24cc:	1f 4f       	sbci	r17, 0xFF	; 255
    24ce:	88 24       	eor	r8, r8
    24d0:	83 94       	inc	r8
    24d2:	91 2c       	mov	r9, r1
    24d4:	53 01       	movw	r10, r6
    24d6:	13 c0       	rjmp	.+38     	; 0x24fe <vfprintf+0x154>
    24d8:	28 01       	movw	r4, r16
    24da:	f2 e0       	ldi	r31, 0x02	; 2
    24dc:	4f 0e       	add	r4, r31
    24de:	51 1c       	adc	r5, r1
    24e0:	f8 01       	movw	r30, r16
    24e2:	a0 80       	ld	r10, Z
    24e4:	b1 80       	ldd	r11, Z+1	; 0x01
    24e6:	36 fe       	sbrs	r3, 6
    24e8:	03 c0       	rjmp	.+6      	; 0x24f0 <vfprintf+0x146>
    24ea:	69 2d       	mov	r22, r9
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	02 c0       	rjmp	.+4      	; 0x24f4 <vfprintf+0x14a>
    24f0:	6f ef       	ldi	r22, 0xFF	; 255
    24f2:	7f ef       	ldi	r23, 0xFF	; 255
    24f4:	c5 01       	movw	r24, r10
    24f6:	0e 94 c1 13 	call	0x2782	; 0x2782 <strnlen>
    24fa:	4c 01       	movw	r8, r24
    24fc:	82 01       	movw	r16, r4
    24fe:	f3 2d       	mov	r31, r3
    2500:	ff 77       	andi	r31, 0x7F	; 127
    2502:	3f 2e       	mov	r3, r31
    2504:	16 c0       	rjmp	.+44     	; 0x2532 <vfprintf+0x188>
    2506:	28 01       	movw	r4, r16
    2508:	22 e0       	ldi	r18, 0x02	; 2
    250a:	42 0e       	add	r4, r18
    250c:	51 1c       	adc	r5, r1
    250e:	f8 01       	movw	r30, r16
    2510:	a0 80       	ld	r10, Z
    2512:	b1 80       	ldd	r11, Z+1	; 0x01
    2514:	36 fe       	sbrs	r3, 6
    2516:	03 c0       	rjmp	.+6      	; 0x251e <vfprintf+0x174>
    2518:	69 2d       	mov	r22, r9
    251a:	70 e0       	ldi	r23, 0x00	; 0
    251c:	02 c0       	rjmp	.+4      	; 0x2522 <vfprintf+0x178>
    251e:	6f ef       	ldi	r22, 0xFF	; 255
    2520:	7f ef       	ldi	r23, 0xFF	; 255
    2522:	c5 01       	movw	r24, r10
    2524:	0e 94 b6 13 	call	0x276c	; 0x276c <strnlen_P>
    2528:	4c 01       	movw	r8, r24
    252a:	f3 2d       	mov	r31, r3
    252c:	f0 68       	ori	r31, 0x80	; 128
    252e:	3f 2e       	mov	r3, r31
    2530:	82 01       	movw	r16, r4
    2532:	33 fc       	sbrc	r3, 3
    2534:	1b c0       	rjmp	.+54     	; 0x256c <vfprintf+0x1c2>
    2536:	82 2d       	mov	r24, r2
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	88 16       	cp	r8, r24
    253c:	99 06       	cpc	r9, r25
    253e:	b0 f4       	brcc	.+44     	; 0x256c <vfprintf+0x1c2>
    2540:	b6 01       	movw	r22, r12
    2542:	80 e2       	ldi	r24, 0x20	; 32
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    254a:	2a 94       	dec	r2
    254c:	f4 cf       	rjmp	.-24     	; 0x2536 <vfprintf+0x18c>
    254e:	f5 01       	movw	r30, r10
    2550:	37 fc       	sbrc	r3, 7
    2552:	85 91       	lpm	r24, Z+
    2554:	37 fe       	sbrs	r3, 7
    2556:	81 91       	ld	r24, Z+
    2558:	5f 01       	movw	r10, r30
    255a:	b6 01       	movw	r22, r12
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    2562:	21 10       	cpse	r2, r1
    2564:	2a 94       	dec	r2
    2566:	21 e0       	ldi	r18, 0x01	; 1
    2568:	82 1a       	sub	r8, r18
    256a:	91 08       	sbc	r9, r1
    256c:	81 14       	cp	r8, r1
    256e:	91 04       	cpc	r9, r1
    2570:	71 f7       	brne	.-36     	; 0x254e <vfprintf+0x1a4>
    2572:	e8 c0       	rjmp	.+464    	; 0x2744 <vfprintf+0x39a>
    2574:	84 36       	cpi	r24, 0x64	; 100
    2576:	11 f0       	breq	.+4      	; 0x257c <vfprintf+0x1d2>
    2578:	89 36       	cpi	r24, 0x69	; 105
    257a:	41 f5       	brne	.+80     	; 0x25cc <vfprintf+0x222>
    257c:	f8 01       	movw	r30, r16
    257e:	37 fe       	sbrs	r3, 7
    2580:	07 c0       	rjmp	.+14     	; 0x2590 <vfprintf+0x1e6>
    2582:	60 81       	ld	r22, Z
    2584:	71 81       	ldd	r23, Z+1	; 0x01
    2586:	82 81       	ldd	r24, Z+2	; 0x02
    2588:	93 81       	ldd	r25, Z+3	; 0x03
    258a:	0c 5f       	subi	r16, 0xFC	; 252
    258c:	1f 4f       	sbci	r17, 0xFF	; 255
    258e:	08 c0       	rjmp	.+16     	; 0x25a0 <vfprintf+0x1f6>
    2590:	60 81       	ld	r22, Z
    2592:	71 81       	ldd	r23, Z+1	; 0x01
    2594:	07 2e       	mov	r0, r23
    2596:	00 0c       	add	r0, r0
    2598:	88 0b       	sbc	r24, r24
    259a:	99 0b       	sbc	r25, r25
    259c:	0e 5f       	subi	r16, 0xFE	; 254
    259e:	1f 4f       	sbci	r17, 0xFF	; 255
    25a0:	f3 2d       	mov	r31, r3
    25a2:	ff 76       	andi	r31, 0x6F	; 111
    25a4:	3f 2e       	mov	r3, r31
    25a6:	97 ff       	sbrs	r25, 7
    25a8:	09 c0       	rjmp	.+18     	; 0x25bc <vfprintf+0x212>
    25aa:	90 95       	com	r25
    25ac:	80 95       	com	r24
    25ae:	70 95       	com	r23
    25b0:	61 95       	neg	r22
    25b2:	7f 4f       	sbci	r23, 0xFF	; 255
    25b4:	8f 4f       	sbci	r24, 0xFF	; 255
    25b6:	9f 4f       	sbci	r25, 0xFF	; 255
    25b8:	f0 68       	ori	r31, 0x80	; 128
    25ba:	3f 2e       	mov	r3, r31
    25bc:	2a e0       	ldi	r18, 0x0A	; 10
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	a3 01       	movw	r20, r6
    25c2:	0e 94 18 14 	call	0x2830	; 0x2830 <__ultoa_invert>
    25c6:	88 2e       	mov	r8, r24
    25c8:	86 18       	sub	r8, r6
    25ca:	45 c0       	rjmp	.+138    	; 0x2656 <vfprintf+0x2ac>
    25cc:	85 37       	cpi	r24, 0x75	; 117
    25ce:	31 f4       	brne	.+12     	; 0x25dc <vfprintf+0x232>
    25d0:	23 2d       	mov	r18, r3
    25d2:	2f 7e       	andi	r18, 0xEF	; 239
    25d4:	b2 2e       	mov	r11, r18
    25d6:	2a e0       	ldi	r18, 0x0A	; 10
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	25 c0       	rjmp	.+74     	; 0x2626 <vfprintf+0x27c>
    25dc:	93 2d       	mov	r25, r3
    25de:	99 7f       	andi	r25, 0xF9	; 249
    25e0:	b9 2e       	mov	r11, r25
    25e2:	8f 36       	cpi	r24, 0x6F	; 111
    25e4:	c1 f0       	breq	.+48     	; 0x2616 <vfprintf+0x26c>
    25e6:	18 f4       	brcc	.+6      	; 0x25ee <vfprintf+0x244>
    25e8:	88 35       	cpi	r24, 0x58	; 88
    25ea:	79 f0       	breq	.+30     	; 0x260a <vfprintf+0x260>
    25ec:	b5 c0       	rjmp	.+362    	; 0x2758 <vfprintf+0x3ae>
    25ee:	80 37       	cpi	r24, 0x70	; 112
    25f0:	19 f0       	breq	.+6      	; 0x25f8 <vfprintf+0x24e>
    25f2:	88 37       	cpi	r24, 0x78	; 120
    25f4:	21 f0       	breq	.+8      	; 0x25fe <vfprintf+0x254>
    25f6:	b0 c0       	rjmp	.+352    	; 0x2758 <vfprintf+0x3ae>
    25f8:	e9 2f       	mov	r30, r25
    25fa:	e0 61       	ori	r30, 0x10	; 16
    25fc:	be 2e       	mov	r11, r30
    25fe:	b4 fe       	sbrs	r11, 4
    2600:	0d c0       	rjmp	.+26     	; 0x261c <vfprintf+0x272>
    2602:	fb 2d       	mov	r31, r11
    2604:	f4 60       	ori	r31, 0x04	; 4
    2606:	bf 2e       	mov	r11, r31
    2608:	09 c0       	rjmp	.+18     	; 0x261c <vfprintf+0x272>
    260a:	34 fe       	sbrs	r3, 4
    260c:	0a c0       	rjmp	.+20     	; 0x2622 <vfprintf+0x278>
    260e:	29 2f       	mov	r18, r25
    2610:	26 60       	ori	r18, 0x06	; 6
    2612:	b2 2e       	mov	r11, r18
    2614:	06 c0       	rjmp	.+12     	; 0x2622 <vfprintf+0x278>
    2616:	28 e0       	ldi	r18, 0x08	; 8
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	05 c0       	rjmp	.+10     	; 0x2626 <vfprintf+0x27c>
    261c:	20 e1       	ldi	r18, 0x10	; 16
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	02 c0       	rjmp	.+4      	; 0x2626 <vfprintf+0x27c>
    2622:	20 e1       	ldi	r18, 0x10	; 16
    2624:	32 e0       	ldi	r19, 0x02	; 2
    2626:	f8 01       	movw	r30, r16
    2628:	b7 fe       	sbrs	r11, 7
    262a:	07 c0       	rjmp	.+14     	; 0x263a <vfprintf+0x290>
    262c:	60 81       	ld	r22, Z
    262e:	71 81       	ldd	r23, Z+1	; 0x01
    2630:	82 81       	ldd	r24, Z+2	; 0x02
    2632:	93 81       	ldd	r25, Z+3	; 0x03
    2634:	0c 5f       	subi	r16, 0xFC	; 252
    2636:	1f 4f       	sbci	r17, 0xFF	; 255
    2638:	06 c0       	rjmp	.+12     	; 0x2646 <vfprintf+0x29c>
    263a:	60 81       	ld	r22, Z
    263c:	71 81       	ldd	r23, Z+1	; 0x01
    263e:	80 e0       	ldi	r24, 0x00	; 0
    2640:	90 e0       	ldi	r25, 0x00	; 0
    2642:	0e 5f       	subi	r16, 0xFE	; 254
    2644:	1f 4f       	sbci	r17, 0xFF	; 255
    2646:	a3 01       	movw	r20, r6
    2648:	0e 94 18 14 	call	0x2830	; 0x2830 <__ultoa_invert>
    264c:	88 2e       	mov	r8, r24
    264e:	86 18       	sub	r8, r6
    2650:	fb 2d       	mov	r31, r11
    2652:	ff 77       	andi	r31, 0x7F	; 127
    2654:	3f 2e       	mov	r3, r31
    2656:	36 fe       	sbrs	r3, 6
    2658:	0d c0       	rjmp	.+26     	; 0x2674 <vfprintf+0x2ca>
    265a:	23 2d       	mov	r18, r3
    265c:	2e 7f       	andi	r18, 0xFE	; 254
    265e:	a2 2e       	mov	r10, r18
    2660:	89 14       	cp	r8, r9
    2662:	58 f4       	brcc	.+22     	; 0x267a <vfprintf+0x2d0>
    2664:	34 fe       	sbrs	r3, 4
    2666:	0b c0       	rjmp	.+22     	; 0x267e <vfprintf+0x2d4>
    2668:	32 fc       	sbrc	r3, 2
    266a:	09 c0       	rjmp	.+18     	; 0x267e <vfprintf+0x2d4>
    266c:	83 2d       	mov	r24, r3
    266e:	8e 7e       	andi	r24, 0xEE	; 238
    2670:	a8 2e       	mov	r10, r24
    2672:	05 c0       	rjmp	.+10     	; 0x267e <vfprintf+0x2d4>
    2674:	b8 2c       	mov	r11, r8
    2676:	a3 2c       	mov	r10, r3
    2678:	03 c0       	rjmp	.+6      	; 0x2680 <vfprintf+0x2d6>
    267a:	b8 2c       	mov	r11, r8
    267c:	01 c0       	rjmp	.+2      	; 0x2680 <vfprintf+0x2d6>
    267e:	b9 2c       	mov	r11, r9
    2680:	a4 fe       	sbrs	r10, 4
    2682:	0f c0       	rjmp	.+30     	; 0x26a2 <vfprintf+0x2f8>
    2684:	fe 01       	movw	r30, r28
    2686:	e8 0d       	add	r30, r8
    2688:	f1 1d       	adc	r31, r1
    268a:	80 81       	ld	r24, Z
    268c:	80 33       	cpi	r24, 0x30	; 48
    268e:	21 f4       	brne	.+8      	; 0x2698 <vfprintf+0x2ee>
    2690:	9a 2d       	mov	r25, r10
    2692:	99 7e       	andi	r25, 0xE9	; 233
    2694:	a9 2e       	mov	r10, r25
    2696:	09 c0       	rjmp	.+18     	; 0x26aa <vfprintf+0x300>
    2698:	a2 fe       	sbrs	r10, 2
    269a:	06 c0       	rjmp	.+12     	; 0x26a8 <vfprintf+0x2fe>
    269c:	b3 94       	inc	r11
    269e:	b3 94       	inc	r11
    26a0:	04 c0       	rjmp	.+8      	; 0x26aa <vfprintf+0x300>
    26a2:	8a 2d       	mov	r24, r10
    26a4:	86 78       	andi	r24, 0x86	; 134
    26a6:	09 f0       	breq	.+2      	; 0x26aa <vfprintf+0x300>
    26a8:	b3 94       	inc	r11
    26aa:	a3 fc       	sbrc	r10, 3
    26ac:	11 c0       	rjmp	.+34     	; 0x26d0 <vfprintf+0x326>
    26ae:	a0 fe       	sbrs	r10, 0
    26b0:	06 c0       	rjmp	.+12     	; 0x26be <vfprintf+0x314>
    26b2:	b2 14       	cp	r11, r2
    26b4:	88 f4       	brcc	.+34     	; 0x26d8 <vfprintf+0x32e>
    26b6:	28 0c       	add	r2, r8
    26b8:	92 2c       	mov	r9, r2
    26ba:	9b 18       	sub	r9, r11
    26bc:	0e c0       	rjmp	.+28     	; 0x26da <vfprintf+0x330>
    26be:	b2 14       	cp	r11, r2
    26c0:	60 f4       	brcc	.+24     	; 0x26da <vfprintf+0x330>
    26c2:	b6 01       	movw	r22, r12
    26c4:	80 e2       	ldi	r24, 0x20	; 32
    26c6:	90 e0       	ldi	r25, 0x00	; 0
    26c8:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    26cc:	b3 94       	inc	r11
    26ce:	f7 cf       	rjmp	.-18     	; 0x26be <vfprintf+0x314>
    26d0:	b2 14       	cp	r11, r2
    26d2:	18 f4       	brcc	.+6      	; 0x26da <vfprintf+0x330>
    26d4:	2b 18       	sub	r2, r11
    26d6:	02 c0       	rjmp	.+4      	; 0x26dc <vfprintf+0x332>
    26d8:	98 2c       	mov	r9, r8
    26da:	21 2c       	mov	r2, r1
    26dc:	a4 fe       	sbrs	r10, 4
    26de:	10 c0       	rjmp	.+32     	; 0x2700 <vfprintf+0x356>
    26e0:	b6 01       	movw	r22, r12
    26e2:	80 e3       	ldi	r24, 0x30	; 48
    26e4:	90 e0       	ldi	r25, 0x00	; 0
    26e6:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    26ea:	a2 fe       	sbrs	r10, 2
    26ec:	17 c0       	rjmp	.+46     	; 0x271c <vfprintf+0x372>
    26ee:	a1 fc       	sbrc	r10, 1
    26f0:	03 c0       	rjmp	.+6      	; 0x26f8 <vfprintf+0x34e>
    26f2:	88 e7       	ldi	r24, 0x78	; 120
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	02 c0       	rjmp	.+4      	; 0x26fc <vfprintf+0x352>
    26f8:	88 e5       	ldi	r24, 0x58	; 88
    26fa:	90 e0       	ldi	r25, 0x00	; 0
    26fc:	b6 01       	movw	r22, r12
    26fe:	0c c0       	rjmp	.+24     	; 0x2718 <vfprintf+0x36e>
    2700:	8a 2d       	mov	r24, r10
    2702:	86 78       	andi	r24, 0x86	; 134
    2704:	59 f0       	breq	.+22     	; 0x271c <vfprintf+0x372>
    2706:	a1 fe       	sbrs	r10, 1
    2708:	02 c0       	rjmp	.+4      	; 0x270e <vfprintf+0x364>
    270a:	8b e2       	ldi	r24, 0x2B	; 43
    270c:	01 c0       	rjmp	.+2      	; 0x2710 <vfprintf+0x366>
    270e:	80 e2       	ldi	r24, 0x20	; 32
    2710:	a7 fc       	sbrc	r10, 7
    2712:	8d e2       	ldi	r24, 0x2D	; 45
    2714:	b6 01       	movw	r22, r12
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    271c:	89 14       	cp	r8, r9
    271e:	38 f4       	brcc	.+14     	; 0x272e <vfprintf+0x384>
    2720:	b6 01       	movw	r22, r12
    2722:	80 e3       	ldi	r24, 0x30	; 48
    2724:	90 e0       	ldi	r25, 0x00	; 0
    2726:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    272a:	9a 94       	dec	r9
    272c:	f7 cf       	rjmp	.-18     	; 0x271c <vfprintf+0x372>
    272e:	8a 94       	dec	r8
    2730:	f3 01       	movw	r30, r6
    2732:	e8 0d       	add	r30, r8
    2734:	f1 1d       	adc	r31, r1
    2736:	80 81       	ld	r24, Z
    2738:	b6 01       	movw	r22, r12
    273a:	90 e0       	ldi	r25, 0x00	; 0
    273c:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    2740:	81 10       	cpse	r8, r1
    2742:	f5 cf       	rjmp	.-22     	; 0x272e <vfprintf+0x384>
    2744:	22 20       	and	r2, r2
    2746:	09 f4       	brne	.+2      	; 0x274a <vfprintf+0x3a0>
    2748:	42 ce       	rjmp	.-892    	; 0x23ce <vfprintf+0x24>
    274a:	b6 01       	movw	r22, r12
    274c:	80 e2       	ldi	r24, 0x20	; 32
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <fputc>
    2754:	2a 94       	dec	r2
    2756:	f6 cf       	rjmp	.-20     	; 0x2744 <vfprintf+0x39a>
    2758:	f6 01       	movw	r30, r12
    275a:	86 81       	ldd	r24, Z+6	; 0x06
    275c:	97 81       	ldd	r25, Z+7	; 0x07
    275e:	02 c0       	rjmp	.+4      	; 0x2764 <vfprintf+0x3ba>
    2760:	8f ef       	ldi	r24, 0xFF	; 255
    2762:	9f ef       	ldi	r25, 0xFF	; 255
    2764:	2b 96       	adiw	r28, 0x0b	; 11
    2766:	e2 e1       	ldi	r30, 0x12	; 18
    2768:	0c 94 92 14 	jmp	0x2924	; 0x2924 <__epilogue_restores__>

0000276c <strnlen_P>:
    276c:	fc 01       	movw	r30, r24
    276e:	05 90       	lpm	r0, Z+
    2770:	61 50       	subi	r22, 0x01	; 1
    2772:	70 40       	sbci	r23, 0x00	; 0
    2774:	01 10       	cpse	r0, r1
    2776:	d8 f7       	brcc	.-10     	; 0x276e <strnlen_P+0x2>
    2778:	80 95       	com	r24
    277a:	90 95       	com	r25
    277c:	8e 0f       	add	r24, r30
    277e:	9f 1f       	adc	r25, r31
    2780:	08 95       	ret

00002782 <strnlen>:
    2782:	fc 01       	movw	r30, r24
    2784:	61 50       	subi	r22, 0x01	; 1
    2786:	70 40       	sbci	r23, 0x00	; 0
    2788:	01 90       	ld	r0, Z+
    278a:	01 10       	cpse	r0, r1
    278c:	d8 f7       	brcc	.-10     	; 0x2784 <strnlen+0x2>
    278e:	80 95       	com	r24
    2790:	90 95       	com	r25
    2792:	8e 0f       	add	r24, r30
    2794:	9f 1f       	adc	r25, r31
    2796:	08 95       	ret

00002798 <strrev>:
    2798:	dc 01       	movw	r26, r24
    279a:	fc 01       	movw	r30, r24
    279c:	67 2f       	mov	r22, r23
    279e:	71 91       	ld	r23, Z+
    27a0:	77 23       	and	r23, r23
    27a2:	e1 f7       	brne	.-8      	; 0x279c <strrev+0x4>
    27a4:	32 97       	sbiw	r30, 0x02	; 2
    27a6:	04 c0       	rjmp	.+8      	; 0x27b0 <strrev+0x18>
    27a8:	7c 91       	ld	r23, X
    27aa:	6d 93       	st	X+, r22
    27ac:	70 83       	st	Z, r23
    27ae:	62 91       	ld	r22, -Z
    27b0:	ae 17       	cp	r26, r30
    27b2:	bf 07       	cpc	r27, r31
    27b4:	c8 f3       	brcs	.-14     	; 0x27a8 <strrev+0x10>
    27b6:	08 95       	ret

000027b8 <fputc>:
    27b8:	0f 93       	push	r16
    27ba:	1f 93       	push	r17
    27bc:	cf 93       	push	r28
    27be:	df 93       	push	r29
    27c0:	fb 01       	movw	r30, r22
    27c2:	23 81       	ldd	r18, Z+3	; 0x03
    27c4:	21 fd       	sbrc	r18, 1
    27c6:	03 c0       	rjmp	.+6      	; 0x27ce <fputc+0x16>
    27c8:	8f ef       	ldi	r24, 0xFF	; 255
    27ca:	9f ef       	ldi	r25, 0xFF	; 255
    27cc:	2c c0       	rjmp	.+88     	; 0x2826 <fputc+0x6e>
    27ce:	22 ff       	sbrs	r18, 2
    27d0:	16 c0       	rjmp	.+44     	; 0x27fe <fputc+0x46>
    27d2:	46 81       	ldd	r20, Z+6	; 0x06
    27d4:	57 81       	ldd	r21, Z+7	; 0x07
    27d6:	24 81       	ldd	r18, Z+4	; 0x04
    27d8:	35 81       	ldd	r19, Z+5	; 0x05
    27da:	42 17       	cp	r20, r18
    27dc:	53 07       	cpc	r21, r19
    27de:	44 f4       	brge	.+16     	; 0x27f0 <fputc+0x38>
    27e0:	a0 81       	ld	r26, Z
    27e2:	b1 81       	ldd	r27, Z+1	; 0x01
    27e4:	9d 01       	movw	r18, r26
    27e6:	2f 5f       	subi	r18, 0xFF	; 255
    27e8:	3f 4f       	sbci	r19, 0xFF	; 255
    27ea:	31 83       	std	Z+1, r19	; 0x01
    27ec:	20 83       	st	Z, r18
    27ee:	8c 93       	st	X, r24
    27f0:	26 81       	ldd	r18, Z+6	; 0x06
    27f2:	37 81       	ldd	r19, Z+7	; 0x07
    27f4:	2f 5f       	subi	r18, 0xFF	; 255
    27f6:	3f 4f       	sbci	r19, 0xFF	; 255
    27f8:	37 83       	std	Z+7, r19	; 0x07
    27fa:	26 83       	std	Z+6, r18	; 0x06
    27fc:	14 c0       	rjmp	.+40     	; 0x2826 <fputc+0x6e>
    27fe:	8b 01       	movw	r16, r22
    2800:	ec 01       	movw	r28, r24
    2802:	fb 01       	movw	r30, r22
    2804:	00 84       	ldd	r0, Z+8	; 0x08
    2806:	f1 85       	ldd	r31, Z+9	; 0x09
    2808:	e0 2d       	mov	r30, r0
    280a:	09 95       	icall
    280c:	89 2b       	or	r24, r25
    280e:	e1 f6       	brne	.-72     	; 0x27c8 <fputc+0x10>
    2810:	d8 01       	movw	r26, r16
    2812:	16 96       	adiw	r26, 0x06	; 6
    2814:	8d 91       	ld	r24, X+
    2816:	9c 91       	ld	r25, X
    2818:	17 97       	sbiw	r26, 0x07	; 7
    281a:	01 96       	adiw	r24, 0x01	; 1
    281c:	17 96       	adiw	r26, 0x07	; 7
    281e:	9c 93       	st	X, r25
    2820:	8e 93       	st	-X, r24
    2822:	16 97       	sbiw	r26, 0x06	; 6
    2824:	ce 01       	movw	r24, r28
    2826:	df 91       	pop	r29
    2828:	cf 91       	pop	r28
    282a:	1f 91       	pop	r17
    282c:	0f 91       	pop	r16
    282e:	08 95       	ret

00002830 <__ultoa_invert>:
    2830:	fa 01       	movw	r30, r20
    2832:	aa 27       	eor	r26, r26
    2834:	28 30       	cpi	r18, 0x08	; 8
    2836:	51 f1       	breq	.+84     	; 0x288c <__ultoa_invert+0x5c>
    2838:	20 31       	cpi	r18, 0x10	; 16
    283a:	81 f1       	breq	.+96     	; 0x289c <__ultoa_invert+0x6c>
    283c:	e8 94       	clt
    283e:	6f 93       	push	r22
    2840:	6e 7f       	andi	r22, 0xFE	; 254
    2842:	6e 5f       	subi	r22, 0xFE	; 254
    2844:	7f 4f       	sbci	r23, 0xFF	; 255
    2846:	8f 4f       	sbci	r24, 0xFF	; 255
    2848:	9f 4f       	sbci	r25, 0xFF	; 255
    284a:	af 4f       	sbci	r26, 0xFF	; 255
    284c:	b1 e0       	ldi	r27, 0x01	; 1
    284e:	3e d0       	rcall	.+124    	; 0x28cc <__ultoa_invert+0x9c>
    2850:	b4 e0       	ldi	r27, 0x04	; 4
    2852:	3c d0       	rcall	.+120    	; 0x28cc <__ultoa_invert+0x9c>
    2854:	67 0f       	add	r22, r23
    2856:	78 1f       	adc	r23, r24
    2858:	89 1f       	adc	r24, r25
    285a:	9a 1f       	adc	r25, r26
    285c:	a1 1d       	adc	r26, r1
    285e:	68 0f       	add	r22, r24
    2860:	79 1f       	adc	r23, r25
    2862:	8a 1f       	adc	r24, r26
    2864:	91 1d       	adc	r25, r1
    2866:	a1 1d       	adc	r26, r1
    2868:	6a 0f       	add	r22, r26
    286a:	71 1d       	adc	r23, r1
    286c:	81 1d       	adc	r24, r1
    286e:	91 1d       	adc	r25, r1
    2870:	a1 1d       	adc	r26, r1
    2872:	20 d0       	rcall	.+64     	; 0x28b4 <__ultoa_invert+0x84>
    2874:	09 f4       	brne	.+2      	; 0x2878 <__ultoa_invert+0x48>
    2876:	68 94       	set
    2878:	3f 91       	pop	r19
    287a:	2a e0       	ldi	r18, 0x0A	; 10
    287c:	26 9f       	mul	r18, r22
    287e:	11 24       	eor	r1, r1
    2880:	30 19       	sub	r19, r0
    2882:	30 5d       	subi	r19, 0xD0	; 208
    2884:	31 93       	st	Z+, r19
    2886:	de f6       	brtc	.-74     	; 0x283e <__ultoa_invert+0xe>
    2888:	cf 01       	movw	r24, r30
    288a:	08 95       	ret
    288c:	46 2f       	mov	r20, r22
    288e:	47 70       	andi	r20, 0x07	; 7
    2890:	40 5d       	subi	r20, 0xD0	; 208
    2892:	41 93       	st	Z+, r20
    2894:	b3 e0       	ldi	r27, 0x03	; 3
    2896:	0f d0       	rcall	.+30     	; 0x28b6 <__ultoa_invert+0x86>
    2898:	c9 f7       	brne	.-14     	; 0x288c <__ultoa_invert+0x5c>
    289a:	f6 cf       	rjmp	.-20     	; 0x2888 <__ultoa_invert+0x58>
    289c:	46 2f       	mov	r20, r22
    289e:	4f 70       	andi	r20, 0x0F	; 15
    28a0:	40 5d       	subi	r20, 0xD0	; 208
    28a2:	4a 33       	cpi	r20, 0x3A	; 58
    28a4:	18 f0       	brcs	.+6      	; 0x28ac <__ultoa_invert+0x7c>
    28a6:	49 5d       	subi	r20, 0xD9	; 217
    28a8:	31 fd       	sbrc	r19, 1
    28aa:	40 52       	subi	r20, 0x20	; 32
    28ac:	41 93       	st	Z+, r20
    28ae:	02 d0       	rcall	.+4      	; 0x28b4 <__ultoa_invert+0x84>
    28b0:	a9 f7       	brne	.-22     	; 0x289c <__ultoa_invert+0x6c>
    28b2:	ea cf       	rjmp	.-44     	; 0x2888 <__ultoa_invert+0x58>
    28b4:	b4 e0       	ldi	r27, 0x04	; 4
    28b6:	a6 95       	lsr	r26
    28b8:	97 95       	ror	r25
    28ba:	87 95       	ror	r24
    28bc:	77 95       	ror	r23
    28be:	67 95       	ror	r22
    28c0:	ba 95       	dec	r27
    28c2:	c9 f7       	brne	.-14     	; 0x28b6 <__ultoa_invert+0x86>
    28c4:	00 97       	sbiw	r24, 0x00	; 0
    28c6:	61 05       	cpc	r22, r1
    28c8:	71 05       	cpc	r23, r1
    28ca:	08 95       	ret
    28cc:	9b 01       	movw	r18, r22
    28ce:	ac 01       	movw	r20, r24
    28d0:	0a 2e       	mov	r0, r26
    28d2:	06 94       	lsr	r0
    28d4:	57 95       	ror	r21
    28d6:	47 95       	ror	r20
    28d8:	37 95       	ror	r19
    28da:	27 95       	ror	r18
    28dc:	ba 95       	dec	r27
    28de:	c9 f7       	brne	.-14     	; 0x28d2 <__ultoa_invert+0xa2>
    28e0:	62 0f       	add	r22, r18
    28e2:	73 1f       	adc	r23, r19
    28e4:	84 1f       	adc	r24, r20
    28e6:	95 1f       	adc	r25, r21
    28e8:	a0 1d       	adc	r26, r0
    28ea:	08 95       	ret

000028ec <__prologue_saves__>:
    28ec:	2f 92       	push	r2
    28ee:	3f 92       	push	r3
    28f0:	4f 92       	push	r4
    28f2:	5f 92       	push	r5
    28f4:	6f 92       	push	r6
    28f6:	7f 92       	push	r7
    28f8:	8f 92       	push	r8
    28fa:	9f 92       	push	r9
    28fc:	af 92       	push	r10
    28fe:	bf 92       	push	r11
    2900:	cf 92       	push	r12
    2902:	df 92       	push	r13
    2904:	ef 92       	push	r14
    2906:	ff 92       	push	r15
    2908:	0f 93       	push	r16
    290a:	1f 93       	push	r17
    290c:	cf 93       	push	r28
    290e:	df 93       	push	r29
    2910:	cd b7       	in	r28, 0x3d	; 61
    2912:	de b7       	in	r29, 0x3e	; 62
    2914:	ca 1b       	sub	r28, r26
    2916:	db 0b       	sbc	r29, r27
    2918:	0f b6       	in	r0, 0x3f	; 63
    291a:	f8 94       	cli
    291c:	de bf       	out	0x3e, r29	; 62
    291e:	0f be       	out	0x3f, r0	; 63
    2920:	cd bf       	out	0x3d, r28	; 61
    2922:	09 94       	ijmp

00002924 <__epilogue_restores__>:
    2924:	2a 88       	ldd	r2, Y+18	; 0x12
    2926:	39 88       	ldd	r3, Y+17	; 0x11
    2928:	48 88       	ldd	r4, Y+16	; 0x10
    292a:	5f 84       	ldd	r5, Y+15	; 0x0f
    292c:	6e 84       	ldd	r6, Y+14	; 0x0e
    292e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2930:	8c 84       	ldd	r8, Y+12	; 0x0c
    2932:	9b 84       	ldd	r9, Y+11	; 0x0b
    2934:	aa 84       	ldd	r10, Y+10	; 0x0a
    2936:	b9 84       	ldd	r11, Y+9	; 0x09
    2938:	c8 84       	ldd	r12, Y+8	; 0x08
    293a:	df 80       	ldd	r13, Y+7	; 0x07
    293c:	ee 80       	ldd	r14, Y+6	; 0x06
    293e:	fd 80       	ldd	r15, Y+5	; 0x05
    2940:	0c 81       	ldd	r16, Y+4	; 0x04
    2942:	1b 81       	ldd	r17, Y+3	; 0x03
    2944:	aa 81       	ldd	r26, Y+2	; 0x02
    2946:	b9 81       	ldd	r27, Y+1	; 0x01
    2948:	ce 0f       	add	r28, r30
    294a:	d1 1d       	adc	r29, r1
    294c:	0f b6       	in	r0, 0x3f	; 63
    294e:	f8 94       	cli
    2950:	de bf       	out	0x3e, r29	; 62
    2952:	0f be       	out	0x3f, r0	; 63
    2954:	cd bf       	out	0x3d, r28	; 61
    2956:	ed 01       	movw	r28, r26
    2958:	08 95       	ret

0000295a <_exit>:
    295a:	f8 94       	cli

0000295c <__stop_program>:
    295c:	ff cf       	rjmp	.-2      	; 0x295c <__stop_program>
